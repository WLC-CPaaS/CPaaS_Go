/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceDeviceOutputShort type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceDeviceOutputShort{}

// ServiceDeviceOutputShort struct for ServiceDeviceOutputShort
type ServiceDeviceOutputShort struct {
	CallRecording *ServiceCallRecordingSettings `json:"call_recording,omitempty"`
	DeviceType *string `json:"device_type,omitempty"`
	DoNotDisturb *ServiceVOIPSharedDoNotDisturb `json:"do_not_disturb,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Features []string `json:"features,omitempty"`
	Flags []string `json:"flags,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	OwnerId *string `json:"owner_id,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewServiceDeviceOutputShort instantiates a new ServiceDeviceOutputShort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceDeviceOutputShort() *ServiceDeviceOutputShort {
	this := ServiceDeviceOutputShort{}
	return &this
}

// NewServiceDeviceOutputShortWithDefaults instantiates a new ServiceDeviceOutputShort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceDeviceOutputShortWithDefaults() *ServiceDeviceOutputShort {
	this := ServiceDeviceOutputShort{}
	return &this
}

// GetCallRecording returns the CallRecording field value if set, zero value otherwise.
func (o *ServiceDeviceOutputShort) GetCallRecording() ServiceCallRecordingSettings {
	if o == nil || IsNil(o.CallRecording) {
		var ret ServiceCallRecordingSettings
		return ret
	}
	return *o.CallRecording
}

// GetCallRecordingOk returns a tuple with the CallRecording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDeviceOutputShort) GetCallRecordingOk() (*ServiceCallRecordingSettings, bool) {
	if o == nil || IsNil(o.CallRecording) {
		return nil, false
	}
	return o.CallRecording, true
}

// HasCallRecording returns a boolean if a field has been set.
func (o *ServiceDeviceOutputShort) HasCallRecording() bool {
	if o != nil && !IsNil(o.CallRecording) {
		return true
	}

	return false
}

// SetCallRecording gets a reference to the given ServiceCallRecordingSettings and assigns it to the CallRecording field.
func (o *ServiceDeviceOutputShort) SetCallRecording(v ServiceCallRecordingSettings) {
	o.CallRecording = &v
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise.
func (o *ServiceDeviceOutputShort) GetDeviceType() string {
	if o == nil || IsNil(o.DeviceType) {
		var ret string
		return ret
	}
	return *o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDeviceOutputShort) GetDeviceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceType) {
		return nil, false
	}
	return o.DeviceType, true
}

// HasDeviceType returns a boolean if a field has been set.
func (o *ServiceDeviceOutputShort) HasDeviceType() bool {
	if o != nil && !IsNil(o.DeviceType) {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given string and assigns it to the DeviceType field.
func (o *ServiceDeviceOutputShort) SetDeviceType(v string) {
	o.DeviceType = &v
}

// GetDoNotDisturb returns the DoNotDisturb field value if set, zero value otherwise.
func (o *ServiceDeviceOutputShort) GetDoNotDisturb() ServiceVOIPSharedDoNotDisturb {
	if o == nil || IsNil(o.DoNotDisturb) {
		var ret ServiceVOIPSharedDoNotDisturb
		return ret
	}
	return *o.DoNotDisturb
}

// GetDoNotDisturbOk returns a tuple with the DoNotDisturb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDeviceOutputShort) GetDoNotDisturbOk() (*ServiceVOIPSharedDoNotDisturb, bool) {
	if o == nil || IsNil(o.DoNotDisturb) {
		return nil, false
	}
	return o.DoNotDisturb, true
}

// HasDoNotDisturb returns a boolean if a field has been set.
func (o *ServiceDeviceOutputShort) HasDoNotDisturb() bool {
	if o != nil && !IsNil(o.DoNotDisturb) {
		return true
	}

	return false
}

// SetDoNotDisturb gets a reference to the given ServiceVOIPSharedDoNotDisturb and assigns it to the DoNotDisturb field.
func (o *ServiceDeviceOutputShort) SetDoNotDisturb(v ServiceVOIPSharedDoNotDisturb) {
	o.DoNotDisturb = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ServiceDeviceOutputShort) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDeviceOutputShort) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ServiceDeviceOutputShort) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ServiceDeviceOutputShort) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *ServiceDeviceOutputShort) GetFeatures() []string {
	if o == nil || IsNil(o.Features) {
		var ret []string
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDeviceOutputShort) GetFeaturesOk() ([]string, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *ServiceDeviceOutputShort) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []string and assigns it to the Features field.
func (o *ServiceDeviceOutputShort) SetFeatures(v []string) {
	o.Features = v
}

// GetFlags returns the Flags field value if set, zero value otherwise.
func (o *ServiceDeviceOutputShort) GetFlags() []string {
	if o == nil || IsNil(o.Flags) {
		var ret []string
		return ret
	}
	return o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDeviceOutputShort) GetFlagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Flags) {
		return nil, false
	}
	return o.Flags, true
}

// HasFlags returns a boolean if a field has been set.
func (o *ServiceDeviceOutputShort) HasFlags() bool {
	if o != nil && !IsNil(o.Flags) {
		return true
	}

	return false
}

// SetFlags gets a reference to the given []string and assigns it to the Flags field.
func (o *ServiceDeviceOutputShort) SetFlags(v []string) {
	o.Flags = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceDeviceOutputShort) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDeviceOutputShort) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceDeviceOutputShort) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServiceDeviceOutputShort) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServiceDeviceOutputShort) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDeviceOutputShort) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServiceDeviceOutputShort) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServiceDeviceOutputShort) SetName(v string) {
	o.Name = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *ServiceDeviceOutputShort) GetOwnerId() string {
	if o == nil || IsNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDeviceOutputShort) GetOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *ServiceDeviceOutputShort) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *ServiceDeviceOutputShort) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ServiceDeviceOutputShort) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDeviceOutputShort) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ServiceDeviceOutputShort) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ServiceDeviceOutputShort) SetUsername(v string) {
	o.Username = &v
}

func (o ServiceDeviceOutputShort) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceDeviceOutputShort) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallRecording) {
		toSerialize["call_recording"] = o.CallRecording
	}
	if !IsNil(o.DeviceType) {
		toSerialize["device_type"] = o.DeviceType
	}
	if !IsNil(o.DoNotDisturb) {
		toSerialize["do_not_disturb"] = o.DoNotDisturb
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.Flags) {
		toSerialize["flags"] = o.Flags
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableServiceDeviceOutputShort struct {
	value *ServiceDeviceOutputShort
	isSet bool
}

func (v NullableServiceDeviceOutputShort) Get() *ServiceDeviceOutputShort {
	return v.value
}

func (v *NullableServiceDeviceOutputShort) Set(val *ServiceDeviceOutputShort) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceDeviceOutputShort) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceDeviceOutputShort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceDeviceOutputShort(val *ServiceDeviceOutputShort) *NullableServiceDeviceOutputShort {
	return &NullableServiceDeviceOutputShort{value: val, isSet: true}
}

func (v NullableServiceDeviceOutputShort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceDeviceOutputShort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


