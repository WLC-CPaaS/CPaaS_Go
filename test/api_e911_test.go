/*
White Label Communications CPaas API Documentation

Testing E911APIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_E911APIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test E911APIService V1E911Get", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.E911API.V1E911Get(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test E911APIService V1E911LocationLocationIDActivatePut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var locationID string

		resp, httpRes, err := apiClient.E911API.V1E911LocationLocationIDActivatePut(context.Background(), locationID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test E911APIService V1E911LocationLocationIDDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var locationID string

		resp, httpRes, err := apiClient.E911API.V1E911LocationLocationIDDelete(context.Background(), locationID).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test E911APIService V1E911LocationValidatePut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.E911API.V1E911LocationValidatePut(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test E911APIService V1E911PhoneNumberDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var phoneNumber string

		resp, httpRes, err := apiClient.E911API.V1E911PhoneNumberDelete(context.Background(), phoneNumber).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test E911APIService V1E911PhoneNumberLocationActiveGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var phoneNumber string

		resp, httpRes, err := apiClient.E911API.V1E911PhoneNumberLocationActiveGet(context.Background(), phoneNumber).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test E911APIService V1E911PhoneNumberLocationGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var phoneNumber string

		resp, httpRes, err := apiClient.E911API.V1E911PhoneNumberLocationGet(context.Background(), phoneNumber).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test E911APIService V1E911Post", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.E911API.V1E911Post(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
