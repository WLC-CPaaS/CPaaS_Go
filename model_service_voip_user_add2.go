/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceVOIPUserAdd2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceVOIPUserAdd2{}

// ServiceVOIPUserAdd2 struct for ServiceVOIPUserAdd2
type ServiceVOIPUserAdd2 struct {
	CallForward *ServiceCallForward `json:"call_forward,omitempty"`
	CallRecording *ServiceCallRecordingSettings `json:"call_recording,omitempty"`
	DoNotDisturb *ServiceVOIPSharedDoNotDisturb `json:"do_not_disturb,omitempty"`
	Email string `json:"email"`
	Enabled *bool `json:"enabled,omitempty"`
	FirstName string `json:"first_name"`
	LastName string `json:"last_name"`
	MusicOnHold *ServiceMusicOnHold `json:"music_on_hold,omitempty"`
	PresenceId *string `json:"presence_id,omitempty"`
	Timezone *string `json:"timezone,omitempty"`
	Verified *bool `json:"verified,omitempty"`
}

type _ServiceVOIPUserAdd2 ServiceVOIPUserAdd2

// NewServiceVOIPUserAdd2 instantiates a new ServiceVOIPUserAdd2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceVOIPUserAdd2(email string, firstName string, lastName string) *ServiceVOIPUserAdd2 {
	this := ServiceVOIPUserAdd2{}
	this.Email = email
	this.FirstName = firstName
	this.LastName = lastName
	return &this
}

// NewServiceVOIPUserAdd2WithDefaults instantiates a new ServiceVOIPUserAdd2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceVOIPUserAdd2WithDefaults() *ServiceVOIPUserAdd2 {
	this := ServiceVOIPUserAdd2{}
	return &this
}

// GetCallForward returns the CallForward field value if set, zero value otherwise.
func (o *ServiceVOIPUserAdd2) GetCallForward() ServiceCallForward {
	if o == nil || IsNil(o.CallForward) {
		var ret ServiceCallForward
		return ret
	}
	return *o.CallForward
}

// GetCallForwardOk returns a tuple with the CallForward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPUserAdd2) GetCallForwardOk() (*ServiceCallForward, bool) {
	if o == nil || IsNil(o.CallForward) {
		return nil, false
	}
	return o.CallForward, true
}

// HasCallForward returns a boolean if a field has been set.
func (o *ServiceVOIPUserAdd2) HasCallForward() bool {
	if o != nil && !IsNil(o.CallForward) {
		return true
	}

	return false
}

// SetCallForward gets a reference to the given ServiceCallForward and assigns it to the CallForward field.
func (o *ServiceVOIPUserAdd2) SetCallForward(v ServiceCallForward) {
	o.CallForward = &v
}

// GetCallRecording returns the CallRecording field value if set, zero value otherwise.
func (o *ServiceVOIPUserAdd2) GetCallRecording() ServiceCallRecordingSettings {
	if o == nil || IsNil(o.CallRecording) {
		var ret ServiceCallRecordingSettings
		return ret
	}
	return *o.CallRecording
}

// GetCallRecordingOk returns a tuple with the CallRecording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPUserAdd2) GetCallRecordingOk() (*ServiceCallRecordingSettings, bool) {
	if o == nil || IsNil(o.CallRecording) {
		return nil, false
	}
	return o.CallRecording, true
}

// HasCallRecording returns a boolean if a field has been set.
func (o *ServiceVOIPUserAdd2) HasCallRecording() bool {
	if o != nil && !IsNil(o.CallRecording) {
		return true
	}

	return false
}

// SetCallRecording gets a reference to the given ServiceCallRecordingSettings and assigns it to the CallRecording field.
func (o *ServiceVOIPUserAdd2) SetCallRecording(v ServiceCallRecordingSettings) {
	o.CallRecording = &v
}

// GetDoNotDisturb returns the DoNotDisturb field value if set, zero value otherwise.
func (o *ServiceVOIPUserAdd2) GetDoNotDisturb() ServiceVOIPSharedDoNotDisturb {
	if o == nil || IsNil(o.DoNotDisturb) {
		var ret ServiceVOIPSharedDoNotDisturb
		return ret
	}
	return *o.DoNotDisturb
}

// GetDoNotDisturbOk returns a tuple with the DoNotDisturb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPUserAdd2) GetDoNotDisturbOk() (*ServiceVOIPSharedDoNotDisturb, bool) {
	if o == nil || IsNil(o.DoNotDisturb) {
		return nil, false
	}
	return o.DoNotDisturb, true
}

// HasDoNotDisturb returns a boolean if a field has been set.
func (o *ServiceVOIPUserAdd2) HasDoNotDisturb() bool {
	if o != nil && !IsNil(o.DoNotDisturb) {
		return true
	}

	return false
}

// SetDoNotDisturb gets a reference to the given ServiceVOIPSharedDoNotDisturb and assigns it to the DoNotDisturb field.
func (o *ServiceVOIPUserAdd2) SetDoNotDisturb(v ServiceVOIPSharedDoNotDisturb) {
	o.DoNotDisturb = &v
}

// GetEmail returns the Email field value
func (o *ServiceVOIPUserAdd2) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ServiceVOIPUserAdd2) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ServiceVOIPUserAdd2) SetEmail(v string) {
	o.Email = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ServiceVOIPUserAdd2) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPUserAdd2) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ServiceVOIPUserAdd2) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ServiceVOIPUserAdd2) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFirstName returns the FirstName field value
func (o *ServiceVOIPUserAdd2) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *ServiceVOIPUserAdd2) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *ServiceVOIPUserAdd2) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *ServiceVOIPUserAdd2) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *ServiceVOIPUserAdd2) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *ServiceVOIPUserAdd2) SetLastName(v string) {
	o.LastName = v
}

// GetMusicOnHold returns the MusicOnHold field value if set, zero value otherwise.
func (o *ServiceVOIPUserAdd2) GetMusicOnHold() ServiceMusicOnHold {
	if o == nil || IsNil(o.MusicOnHold) {
		var ret ServiceMusicOnHold
		return ret
	}
	return *o.MusicOnHold
}

// GetMusicOnHoldOk returns a tuple with the MusicOnHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPUserAdd2) GetMusicOnHoldOk() (*ServiceMusicOnHold, bool) {
	if o == nil || IsNil(o.MusicOnHold) {
		return nil, false
	}
	return o.MusicOnHold, true
}

// HasMusicOnHold returns a boolean if a field has been set.
func (o *ServiceVOIPUserAdd2) HasMusicOnHold() bool {
	if o != nil && !IsNil(o.MusicOnHold) {
		return true
	}

	return false
}

// SetMusicOnHold gets a reference to the given ServiceMusicOnHold and assigns it to the MusicOnHold field.
func (o *ServiceVOIPUserAdd2) SetMusicOnHold(v ServiceMusicOnHold) {
	o.MusicOnHold = &v
}

// GetPresenceId returns the PresenceId field value if set, zero value otherwise.
func (o *ServiceVOIPUserAdd2) GetPresenceId() string {
	if o == nil || IsNil(o.PresenceId) {
		var ret string
		return ret
	}
	return *o.PresenceId
}

// GetPresenceIdOk returns a tuple with the PresenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPUserAdd2) GetPresenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.PresenceId) {
		return nil, false
	}
	return o.PresenceId, true
}

// HasPresenceId returns a boolean if a field has been set.
func (o *ServiceVOIPUserAdd2) HasPresenceId() bool {
	if o != nil && !IsNil(o.PresenceId) {
		return true
	}

	return false
}

// SetPresenceId gets a reference to the given string and assigns it to the PresenceId field.
func (o *ServiceVOIPUserAdd2) SetPresenceId(v string) {
	o.PresenceId = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *ServiceVOIPUserAdd2) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPUserAdd2) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *ServiceVOIPUserAdd2) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *ServiceVOIPUserAdd2) SetTimezone(v string) {
	o.Timezone = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *ServiceVOIPUserAdd2) GetVerified() bool {
	if o == nil || IsNil(o.Verified) {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPUserAdd2) GetVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.Verified) {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *ServiceVOIPUserAdd2) HasVerified() bool {
	if o != nil && !IsNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *ServiceVOIPUserAdd2) SetVerified(v bool) {
	o.Verified = &v
}

func (o ServiceVOIPUserAdd2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceVOIPUserAdd2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallForward) {
		toSerialize["call_forward"] = o.CallForward
	}
	if !IsNil(o.CallRecording) {
		toSerialize["call_recording"] = o.CallRecording
	}
	if !IsNil(o.DoNotDisturb) {
		toSerialize["do_not_disturb"] = o.DoNotDisturb
	}
	toSerialize["email"] = o.Email
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	toSerialize["first_name"] = o.FirstName
	toSerialize["last_name"] = o.LastName
	if !IsNil(o.MusicOnHold) {
		toSerialize["music_on_hold"] = o.MusicOnHold
	}
	if !IsNil(o.PresenceId) {
		toSerialize["presence_id"] = o.PresenceId
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	return toSerialize, nil
}

func (o *ServiceVOIPUserAdd2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"first_name",
		"last_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceVOIPUserAdd2 := _ServiceVOIPUserAdd2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceVOIPUserAdd2)

	if err != nil {
		return err
	}

	*o = ServiceVOIPUserAdd2(varServiceVOIPUserAdd2)

	return err
}

type NullableServiceVOIPUserAdd2 struct {
	value *ServiceVOIPUserAdd2
	isSet bool
}

func (v NullableServiceVOIPUserAdd2) Get() *ServiceVOIPUserAdd2 {
	return v.value
}

func (v *NullableServiceVOIPUserAdd2) Set(val *ServiceVOIPUserAdd2) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceVOIPUserAdd2) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceVOIPUserAdd2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceVOIPUserAdd2(val *ServiceVOIPUserAdd2) *NullableServiceVOIPUserAdd2 {
	return &NullableServiceVOIPUserAdd2{value: val, isSet: true}
}

func (v NullableServiceVOIPUserAdd2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceVOIPUserAdd2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


