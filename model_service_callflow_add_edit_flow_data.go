/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceCallflowAddEditFlowData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceCallflowAddEditFlowData{}

// ServiceCallflowAddEditFlowData struct for ServiceCallflowAddEditFlowData
type ServiceCallflowAddEditFlowData struct {
	Children *map[string]ServiceCallflowAddEditFlowData `json:"children,omitempty"`
	Data map[string]interface{} `json:"data,omitempty"`
	Module string `json:"module"`
}

type _ServiceCallflowAddEditFlowData ServiceCallflowAddEditFlowData

// NewServiceCallflowAddEditFlowData instantiates a new ServiceCallflowAddEditFlowData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceCallflowAddEditFlowData(module string) *ServiceCallflowAddEditFlowData {
	this := ServiceCallflowAddEditFlowData{}
	this.Module = module
	return &this
}

// NewServiceCallflowAddEditFlowDataWithDefaults instantiates a new ServiceCallflowAddEditFlowData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceCallflowAddEditFlowDataWithDefaults() *ServiceCallflowAddEditFlowData {
	this := ServiceCallflowAddEditFlowData{}
	return &this
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *ServiceCallflowAddEditFlowData) GetChildren() map[string]ServiceCallflowAddEditFlowData {
	if o == nil || IsNil(o.Children) {
		var ret map[string]ServiceCallflowAddEditFlowData
		return ret
	}
	return *o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallflowAddEditFlowData) GetChildrenOk() (*map[string]ServiceCallflowAddEditFlowData, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *ServiceCallflowAddEditFlowData) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given map[string]ServiceCallflowAddEditFlowData and assigns it to the Children field.
func (o *ServiceCallflowAddEditFlowData) SetChildren(v map[string]ServiceCallflowAddEditFlowData) {
	o.Children = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ServiceCallflowAddEditFlowData) GetData() map[string]interface{} {
	if o == nil || IsNil(o.Data) {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallflowAddEditFlowData) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ServiceCallflowAddEditFlowData) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *ServiceCallflowAddEditFlowData) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetModule returns the Module field value
func (o *ServiceCallflowAddEditFlowData) GetModule() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Module
}

// GetModuleOk returns a tuple with the Module field value
// and a boolean to check if the value has been set.
func (o *ServiceCallflowAddEditFlowData) GetModuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Module, true
}

// SetModule sets field value
func (o *ServiceCallflowAddEditFlowData) SetModule(v string) {
	o.Module = v
}

func (o ServiceCallflowAddEditFlowData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceCallflowAddEditFlowData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	toSerialize["module"] = o.Module
	return toSerialize, nil
}

func (o *ServiceCallflowAddEditFlowData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"module",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceCallflowAddEditFlowData := _ServiceCallflowAddEditFlowData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceCallflowAddEditFlowData)

	if err != nil {
		return err
	}

	*o = ServiceCallflowAddEditFlowData(varServiceCallflowAddEditFlowData)

	return err
}

type NullableServiceCallflowAddEditFlowData struct {
	value *ServiceCallflowAddEditFlowData
	isSet bool
}

func (v NullableServiceCallflowAddEditFlowData) Get() *ServiceCallflowAddEditFlowData {
	return v.value
}

func (v *NullableServiceCallflowAddEditFlowData) Set(val *ServiceCallflowAddEditFlowData) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceCallflowAddEditFlowData) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceCallflowAddEditFlowData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceCallflowAddEditFlowData(val *ServiceCallflowAddEditFlowData) *NullableServiceCallflowAddEditFlowData {
	return &NullableServiceCallflowAddEditFlowData{value: val, isSet: true}
}

func (v NullableServiceCallflowAddEditFlowData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceCallflowAddEditFlowData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


