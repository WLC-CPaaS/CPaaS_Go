/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceVOIPAccountEditData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceVOIPAccountEditData{}

// ServiceVOIPAccountEditData struct for ServiceVOIPAccountEditData
type ServiceVOIPAccountEditData struct {
	CallRecording *ServiceVOIPAccountCallRecording `json:"call_recording,omitempty"`
	CallerId *ServiceVOIPAccountOutputFullCallerid `json:"caller_id,omitempty"`
	DoNotDisturb *ServiceVOIPSharedDoNotDisturb `json:"do_not_disturb,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	MusicOnHold *ServiceVOIPAccountMusicOnHold `json:"music_on_hold,omitempty"`
	Name string `json:"name"`
	Timezone string `json:"timezone"`
}

type _ServiceVOIPAccountEditData ServiceVOIPAccountEditData

// NewServiceVOIPAccountEditData instantiates a new ServiceVOIPAccountEditData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceVOIPAccountEditData(name string, timezone string) *ServiceVOIPAccountEditData {
	this := ServiceVOIPAccountEditData{}
	this.Name = name
	this.Timezone = timezone
	return &this
}

// NewServiceVOIPAccountEditDataWithDefaults instantiates a new ServiceVOIPAccountEditData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceVOIPAccountEditDataWithDefaults() *ServiceVOIPAccountEditData {
	this := ServiceVOIPAccountEditData{}
	return &this
}

// GetCallRecording returns the CallRecording field value if set, zero value otherwise.
func (o *ServiceVOIPAccountEditData) GetCallRecording() ServiceVOIPAccountCallRecording {
	if o == nil || IsNil(o.CallRecording) {
		var ret ServiceVOIPAccountCallRecording
		return ret
	}
	return *o.CallRecording
}

// GetCallRecordingOk returns a tuple with the CallRecording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPAccountEditData) GetCallRecordingOk() (*ServiceVOIPAccountCallRecording, bool) {
	if o == nil || IsNil(o.CallRecording) {
		return nil, false
	}
	return o.CallRecording, true
}

// HasCallRecording returns a boolean if a field has been set.
func (o *ServiceVOIPAccountEditData) HasCallRecording() bool {
	if o != nil && !IsNil(o.CallRecording) {
		return true
	}

	return false
}

// SetCallRecording gets a reference to the given ServiceVOIPAccountCallRecording and assigns it to the CallRecording field.
func (o *ServiceVOIPAccountEditData) SetCallRecording(v ServiceVOIPAccountCallRecording) {
	o.CallRecording = &v
}

// GetCallerId returns the CallerId field value if set, zero value otherwise.
func (o *ServiceVOIPAccountEditData) GetCallerId() ServiceVOIPAccountOutputFullCallerid {
	if o == nil || IsNil(o.CallerId) {
		var ret ServiceVOIPAccountOutputFullCallerid
		return ret
	}
	return *o.CallerId
}

// GetCallerIdOk returns a tuple with the CallerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPAccountEditData) GetCallerIdOk() (*ServiceVOIPAccountOutputFullCallerid, bool) {
	if o == nil || IsNil(o.CallerId) {
		return nil, false
	}
	return o.CallerId, true
}

// HasCallerId returns a boolean if a field has been set.
func (o *ServiceVOIPAccountEditData) HasCallerId() bool {
	if o != nil && !IsNil(o.CallerId) {
		return true
	}

	return false
}

// SetCallerId gets a reference to the given ServiceVOIPAccountOutputFullCallerid and assigns it to the CallerId field.
func (o *ServiceVOIPAccountEditData) SetCallerId(v ServiceVOIPAccountOutputFullCallerid) {
	o.CallerId = &v
}

// GetDoNotDisturb returns the DoNotDisturb field value if set, zero value otherwise.
func (o *ServiceVOIPAccountEditData) GetDoNotDisturb() ServiceVOIPSharedDoNotDisturb {
	if o == nil || IsNil(o.DoNotDisturb) {
		var ret ServiceVOIPSharedDoNotDisturb
		return ret
	}
	return *o.DoNotDisturb
}

// GetDoNotDisturbOk returns a tuple with the DoNotDisturb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPAccountEditData) GetDoNotDisturbOk() (*ServiceVOIPSharedDoNotDisturb, bool) {
	if o == nil || IsNil(o.DoNotDisturb) {
		return nil, false
	}
	return o.DoNotDisturb, true
}

// HasDoNotDisturb returns a boolean if a field has been set.
func (o *ServiceVOIPAccountEditData) HasDoNotDisturb() bool {
	if o != nil && !IsNil(o.DoNotDisturb) {
		return true
	}

	return false
}

// SetDoNotDisturb gets a reference to the given ServiceVOIPSharedDoNotDisturb and assigns it to the DoNotDisturb field.
func (o *ServiceVOIPAccountEditData) SetDoNotDisturb(v ServiceVOIPSharedDoNotDisturb) {
	o.DoNotDisturb = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ServiceVOIPAccountEditData) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPAccountEditData) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ServiceVOIPAccountEditData) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ServiceVOIPAccountEditData) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetMusicOnHold returns the MusicOnHold field value if set, zero value otherwise.
func (o *ServiceVOIPAccountEditData) GetMusicOnHold() ServiceVOIPAccountMusicOnHold {
	if o == nil || IsNil(o.MusicOnHold) {
		var ret ServiceVOIPAccountMusicOnHold
		return ret
	}
	return *o.MusicOnHold
}

// GetMusicOnHoldOk returns a tuple with the MusicOnHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPAccountEditData) GetMusicOnHoldOk() (*ServiceVOIPAccountMusicOnHold, bool) {
	if o == nil || IsNil(o.MusicOnHold) {
		return nil, false
	}
	return o.MusicOnHold, true
}

// HasMusicOnHold returns a boolean if a field has been set.
func (o *ServiceVOIPAccountEditData) HasMusicOnHold() bool {
	if o != nil && !IsNil(o.MusicOnHold) {
		return true
	}

	return false
}

// SetMusicOnHold gets a reference to the given ServiceVOIPAccountMusicOnHold and assigns it to the MusicOnHold field.
func (o *ServiceVOIPAccountEditData) SetMusicOnHold(v ServiceVOIPAccountMusicOnHold) {
	o.MusicOnHold = &v
}

// GetName returns the Name field value
func (o *ServiceVOIPAccountEditData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceVOIPAccountEditData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServiceVOIPAccountEditData) SetName(v string) {
	o.Name = v
}

// GetTimezone returns the Timezone field value
func (o *ServiceVOIPAccountEditData) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *ServiceVOIPAccountEditData) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *ServiceVOIPAccountEditData) SetTimezone(v string) {
	o.Timezone = v
}

func (o ServiceVOIPAccountEditData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceVOIPAccountEditData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallRecording) {
		toSerialize["call_recording"] = o.CallRecording
	}
	if !IsNil(o.CallerId) {
		toSerialize["caller_id"] = o.CallerId
	}
	if !IsNil(o.DoNotDisturb) {
		toSerialize["do_not_disturb"] = o.DoNotDisturb
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.MusicOnHold) {
		toSerialize["music_on_hold"] = o.MusicOnHold
	}
	toSerialize["name"] = o.Name
	toSerialize["timezone"] = o.Timezone
	return toSerialize, nil
}

func (o *ServiceVOIPAccountEditData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"timezone",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceVOIPAccountEditData := _ServiceVOIPAccountEditData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceVOIPAccountEditData)

	if err != nil {
		return err
	}

	*o = ServiceVOIPAccountEditData(varServiceVOIPAccountEditData)

	return err
}

type NullableServiceVOIPAccountEditData struct {
	value *ServiceVOIPAccountEditData
	isSet bool
}

func (v NullableServiceVOIPAccountEditData) Get() *ServiceVOIPAccountEditData {
	return v.value
}

func (v *NullableServiceVOIPAccountEditData) Set(val *ServiceVOIPAccountEditData) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceVOIPAccountEditData) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceVOIPAccountEditData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceVOIPAccountEditData(val *ServiceVOIPAccountEditData) *NullableServiceVOIPAccountEditData {
	return &NullableServiceVOIPAccountEditData{value: val, isSet: true}
}

func (v NullableServiceVOIPAccountEditData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceVOIPAccountEditData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


