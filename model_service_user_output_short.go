/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceUserOutputShort type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceUserOutputShort{}

// ServiceUserOutputShort struct for ServiceUserOutputShort
type ServiceUserOutputShort struct {
	CallRecording *ModelsCallRecordingSettings `json:"call_recording,omitempty"`
	DoNotDisturb *ModelsVOIPSharedDoNotDisturb `json:"do_not_disturb,omitempty"`
	Email *string `json:"email,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Features []string `json:"features,omitempty"`
	FirstName *string `json:"first_name,omitempty"`
	Flags []string `json:"flags,omitempty"`
	Id *string `json:"id,omitempty"`
	LastName *string `json:"last_name,omitempty"`
	PresenceId *string `json:"presence_id,omitempty"`
}

// NewServiceUserOutputShort instantiates a new ServiceUserOutputShort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceUserOutputShort() *ServiceUserOutputShort {
	this := ServiceUserOutputShort{}
	return &this
}

// NewServiceUserOutputShortWithDefaults instantiates a new ServiceUserOutputShort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceUserOutputShortWithDefaults() *ServiceUserOutputShort {
	this := ServiceUserOutputShort{}
	return &this
}

// GetCallRecording returns the CallRecording field value if set, zero value otherwise.
func (o *ServiceUserOutputShort) GetCallRecording() ModelsCallRecordingSettings {
	if o == nil || IsNil(o.CallRecording) {
		var ret ModelsCallRecordingSettings
		return ret
	}
	return *o.CallRecording
}

// GetCallRecordingOk returns a tuple with the CallRecording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputShort) GetCallRecordingOk() (*ModelsCallRecordingSettings, bool) {
	if o == nil || IsNil(o.CallRecording) {
		return nil, false
	}
	return o.CallRecording, true
}

// HasCallRecording returns a boolean if a field has been set.
func (o *ServiceUserOutputShort) HasCallRecording() bool {
	if o != nil && !IsNil(o.CallRecording) {
		return true
	}

	return false
}

// SetCallRecording gets a reference to the given ModelsCallRecordingSettings and assigns it to the CallRecording field.
func (o *ServiceUserOutputShort) SetCallRecording(v ModelsCallRecordingSettings) {
	o.CallRecording = &v
}

// GetDoNotDisturb returns the DoNotDisturb field value if set, zero value otherwise.
func (o *ServiceUserOutputShort) GetDoNotDisturb() ModelsVOIPSharedDoNotDisturb {
	if o == nil || IsNil(o.DoNotDisturb) {
		var ret ModelsVOIPSharedDoNotDisturb
		return ret
	}
	return *o.DoNotDisturb
}

// GetDoNotDisturbOk returns a tuple with the DoNotDisturb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputShort) GetDoNotDisturbOk() (*ModelsVOIPSharedDoNotDisturb, bool) {
	if o == nil || IsNil(o.DoNotDisturb) {
		return nil, false
	}
	return o.DoNotDisturb, true
}

// HasDoNotDisturb returns a boolean if a field has been set.
func (o *ServiceUserOutputShort) HasDoNotDisturb() bool {
	if o != nil && !IsNil(o.DoNotDisturb) {
		return true
	}

	return false
}

// SetDoNotDisturb gets a reference to the given ModelsVOIPSharedDoNotDisturb and assigns it to the DoNotDisturb field.
func (o *ServiceUserOutputShort) SetDoNotDisturb(v ModelsVOIPSharedDoNotDisturb) {
	o.DoNotDisturb = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ServiceUserOutputShort) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputShort) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ServiceUserOutputShort) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ServiceUserOutputShort) SetEmail(v string) {
	o.Email = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ServiceUserOutputShort) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputShort) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ServiceUserOutputShort) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ServiceUserOutputShort) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *ServiceUserOutputShort) GetFeatures() []string {
	if o == nil || IsNil(o.Features) {
		var ret []string
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputShort) GetFeaturesOk() ([]string, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *ServiceUserOutputShort) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []string and assigns it to the Features field.
func (o *ServiceUserOutputShort) SetFeatures(v []string) {
	o.Features = v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *ServiceUserOutputShort) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputShort) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *ServiceUserOutputShort) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *ServiceUserOutputShort) SetFirstName(v string) {
	o.FirstName = &v
}

// GetFlags returns the Flags field value if set, zero value otherwise.
func (o *ServiceUserOutputShort) GetFlags() []string {
	if o == nil || IsNil(o.Flags) {
		var ret []string
		return ret
	}
	return o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputShort) GetFlagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Flags) {
		return nil, false
	}
	return o.Flags, true
}

// HasFlags returns a boolean if a field has been set.
func (o *ServiceUserOutputShort) HasFlags() bool {
	if o != nil && !IsNil(o.Flags) {
		return true
	}

	return false
}

// SetFlags gets a reference to the given []string and assigns it to the Flags field.
func (o *ServiceUserOutputShort) SetFlags(v []string) {
	o.Flags = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceUserOutputShort) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputShort) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceUserOutputShort) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServiceUserOutputShort) SetId(v string) {
	o.Id = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *ServiceUserOutputShort) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputShort) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *ServiceUserOutputShort) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *ServiceUserOutputShort) SetLastName(v string) {
	o.LastName = &v
}

// GetPresenceId returns the PresenceId field value if set, zero value otherwise.
func (o *ServiceUserOutputShort) GetPresenceId() string {
	if o == nil || IsNil(o.PresenceId) {
		var ret string
		return ret
	}
	return *o.PresenceId
}

// GetPresenceIdOk returns a tuple with the PresenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputShort) GetPresenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.PresenceId) {
		return nil, false
	}
	return o.PresenceId, true
}

// HasPresenceId returns a boolean if a field has been set.
func (o *ServiceUserOutputShort) HasPresenceId() bool {
	if o != nil && !IsNil(o.PresenceId) {
		return true
	}

	return false
}

// SetPresenceId gets a reference to the given string and assigns it to the PresenceId field.
func (o *ServiceUserOutputShort) SetPresenceId(v string) {
	o.PresenceId = &v
}

func (o ServiceUserOutputShort) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceUserOutputShort) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallRecording) {
		toSerialize["call_recording"] = o.CallRecording
	}
	if !IsNil(o.DoNotDisturb) {
		toSerialize["do_not_disturb"] = o.DoNotDisturb
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.Flags) {
		toSerialize["flags"] = o.Flags
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.PresenceId) {
		toSerialize["presence_id"] = o.PresenceId
	}
	return toSerialize, nil
}

type NullableServiceUserOutputShort struct {
	value *ServiceUserOutputShort
	isSet bool
}

func (v NullableServiceUserOutputShort) Get() *ServiceUserOutputShort {
	return v.value
}

func (v *NullableServiceUserOutputShort) Set(val *ServiceUserOutputShort) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceUserOutputShort) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceUserOutputShort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceUserOutputShort(val *ServiceUserOutputShort) *NullableServiceUserOutputShort {
	return &NullableServiceUserOutputShort{value: val, isSet: true}
}

func (v NullableServiceUserOutputShort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceUserOutputShort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


