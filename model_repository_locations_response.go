/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RepositoryLocationsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepositoryLocationsResponse{}

// RepositoryLocationsResponse struct for RepositoryLocationsResponse
type RepositoryLocationsResponse struct {
	LocationId *string `json:"location_id,omitempty"`
	PhoneNumber *string `json:"phone_number,omitempty"`
}

// NewRepositoryLocationsResponse instantiates a new RepositoryLocationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryLocationsResponse() *RepositoryLocationsResponse {
	this := RepositoryLocationsResponse{}
	return &this
}

// NewRepositoryLocationsResponseWithDefaults instantiates a new RepositoryLocationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryLocationsResponseWithDefaults() *RepositoryLocationsResponse {
	this := RepositoryLocationsResponse{}
	return &this
}

// GetLocationId returns the LocationId field value if set, zero value otherwise.
func (o *RepositoryLocationsResponse) GetLocationId() string {
	if o == nil || IsNil(o.LocationId) {
		var ret string
		return ret
	}
	return *o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryLocationsResponse) GetLocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocationId) {
		return nil, false
	}
	return o.LocationId, true
}

// HasLocationId returns a boolean if a field has been set.
func (o *RepositoryLocationsResponse) HasLocationId() bool {
	if o != nil && !IsNil(o.LocationId) {
		return true
	}

	return false
}

// SetLocationId gets a reference to the given string and assigns it to the LocationId field.
func (o *RepositoryLocationsResponse) SetLocationId(v string) {
	o.LocationId = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *RepositoryLocationsResponse) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryLocationsResponse) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *RepositoryLocationsResponse) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *RepositoryLocationsResponse) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

func (o RepositoryLocationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepositoryLocationsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LocationId) {
		toSerialize["location_id"] = o.LocationId
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	return toSerialize, nil
}

type NullableRepositoryLocationsResponse struct {
	value *RepositoryLocationsResponse
	isSet bool
}

func (v NullableRepositoryLocationsResponse) Get() *RepositoryLocationsResponse {
	return v.value
}

func (v *NullableRepositoryLocationsResponse) Set(val *RepositoryLocationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryLocationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryLocationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryLocationsResponse(val *RepositoryLocationsResponse) *NullableRepositoryLocationsResponse {
	return &NullableRepositoryLocationsResponse{value: val, isSet: true}
}

func (v NullableRepositoryLocationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryLocationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


