/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelEventDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelEventDetail{}

// ModelEventDetail struct for ModelEventDetail
type ModelEventDetail struct {
	AccountId *string `json:"account_id,omitempty"`
	Component *string `json:"component,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	EventName *string `json:"event_name,omitempty"`
	ExecStatus *string `json:"exec_status,omitempty"`
	LogDate *string `json:"log_date,omitempty"`
	LogTime *string `json:"log_time,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewModelEventDetail instantiates a new ModelEventDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelEventDetail() *ModelEventDetail {
	this := ModelEventDetail{}
	return &this
}

// NewModelEventDetailWithDefaults instantiates a new ModelEventDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelEventDetailWithDefaults() *ModelEventDetail {
	this := ModelEventDetail{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ModelEventDetail) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEventDetail) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ModelEventDetail) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *ModelEventDetail) SetAccountId(v string) {
	o.AccountId = &v
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *ModelEventDetail) GetComponent() string {
	if o == nil || IsNil(o.Component) {
		var ret string
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEventDetail) GetComponentOk() (*string, bool) {
	if o == nil || IsNil(o.Component) {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *ModelEventDetail) HasComponent() bool {
	if o != nil && !IsNil(o.Component) {
		return true
	}

	return false
}

// SetComponent gets a reference to the given string and assigns it to the Component field.
func (o *ModelEventDetail) SetComponent(v string) {
	o.Component = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelEventDetail) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEventDetail) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelEventDetail) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelEventDetail) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetEventName returns the EventName field value if set, zero value otherwise.
func (o *ModelEventDetail) GetEventName() string {
	if o == nil || IsNil(o.EventName) {
		var ret string
		return ret
	}
	return *o.EventName
}

// GetEventNameOk returns a tuple with the EventName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEventDetail) GetEventNameOk() (*string, bool) {
	if o == nil || IsNil(o.EventName) {
		return nil, false
	}
	return o.EventName, true
}

// HasEventName returns a boolean if a field has been set.
func (o *ModelEventDetail) HasEventName() bool {
	if o != nil && !IsNil(o.EventName) {
		return true
	}

	return false
}

// SetEventName gets a reference to the given string and assigns it to the EventName field.
func (o *ModelEventDetail) SetEventName(v string) {
	o.EventName = &v
}

// GetExecStatus returns the ExecStatus field value if set, zero value otherwise.
func (o *ModelEventDetail) GetExecStatus() string {
	if o == nil || IsNil(o.ExecStatus) {
		var ret string
		return ret
	}
	return *o.ExecStatus
}

// GetExecStatusOk returns a tuple with the ExecStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEventDetail) GetExecStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ExecStatus) {
		return nil, false
	}
	return o.ExecStatus, true
}

// HasExecStatus returns a boolean if a field has been set.
func (o *ModelEventDetail) HasExecStatus() bool {
	if o != nil && !IsNil(o.ExecStatus) {
		return true
	}

	return false
}

// SetExecStatus gets a reference to the given string and assigns it to the ExecStatus field.
func (o *ModelEventDetail) SetExecStatus(v string) {
	o.ExecStatus = &v
}

// GetLogDate returns the LogDate field value if set, zero value otherwise.
func (o *ModelEventDetail) GetLogDate() string {
	if o == nil || IsNil(o.LogDate) {
		var ret string
		return ret
	}
	return *o.LogDate
}

// GetLogDateOk returns a tuple with the LogDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEventDetail) GetLogDateOk() (*string, bool) {
	if o == nil || IsNil(o.LogDate) {
		return nil, false
	}
	return o.LogDate, true
}

// HasLogDate returns a boolean if a field has been set.
func (o *ModelEventDetail) HasLogDate() bool {
	if o != nil && !IsNil(o.LogDate) {
		return true
	}

	return false
}

// SetLogDate gets a reference to the given string and assigns it to the LogDate field.
func (o *ModelEventDetail) SetLogDate(v string) {
	o.LogDate = &v
}

// GetLogTime returns the LogTime field value if set, zero value otherwise.
func (o *ModelEventDetail) GetLogTime() string {
	if o == nil || IsNil(o.LogTime) {
		var ret string
		return ret
	}
	return *o.LogTime
}

// GetLogTimeOk returns a tuple with the LogTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEventDetail) GetLogTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LogTime) {
		return nil, false
	}
	return o.LogTime, true
}

// HasLogTime returns a boolean if a field has been set.
func (o *ModelEventDetail) HasLogTime() bool {
	if o != nil && !IsNil(o.LogTime) {
		return true
	}

	return false
}

// SetLogTime gets a reference to the given string and assigns it to the LogTime field.
func (o *ModelEventDetail) SetLogTime(v string) {
	o.LogTime = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ModelEventDetail) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEventDetail) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ModelEventDetail) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ModelEventDetail) SetUsername(v string) {
	o.Username = &v
}

func (o ModelEventDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelEventDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.Component) {
		toSerialize["component"] = o.Component
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.EventName) {
		toSerialize["event_name"] = o.EventName
	}
	if !IsNil(o.ExecStatus) {
		toSerialize["exec_status"] = o.ExecStatus
	}
	if !IsNil(o.LogDate) {
		toSerialize["log_date"] = o.LogDate
	}
	if !IsNil(o.LogTime) {
		toSerialize["log_time"] = o.LogTime
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableModelEventDetail struct {
	value *ModelEventDetail
	isSet bool
}

func (v NullableModelEventDetail) Get() *ModelEventDetail {
	return v.value
}

func (v *NullableModelEventDetail) Set(val *ModelEventDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableModelEventDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableModelEventDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelEventDetail(val *ModelEventDetail) *NullableModelEventDetail {
	return &NullableModelEventDetail{value: val, isSet: true}
}

func (v NullableModelEventDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelEventDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


