/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelEndpointList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelEndpointList{}

// ModelEndpointList struct for ModelEndpointList
type ModelEndpointList struct {
	CreatedAt *string `json:"created_at,omitempty"`
	EndpointName *string `json:"endpoint_name,omitempty"`
	FeatureName *string `json:"feature_name,omitempty"`
	Id *int32 `json:"id,omitempty"`
	TransactionType *string `json:"transaction_type,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewModelEndpointList instantiates a new ModelEndpointList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelEndpointList() *ModelEndpointList {
	this := ModelEndpointList{}
	return &this
}

// NewModelEndpointListWithDefaults instantiates a new ModelEndpointList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelEndpointListWithDefaults() *ModelEndpointList {
	this := ModelEndpointList{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelEndpointList) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEndpointList) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelEndpointList) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelEndpointList) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetEndpointName returns the EndpointName field value if set, zero value otherwise.
func (o *ModelEndpointList) GetEndpointName() string {
	if o == nil || IsNil(o.EndpointName) {
		var ret string
		return ret
	}
	return *o.EndpointName
}

// GetEndpointNameOk returns a tuple with the EndpointName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEndpointList) GetEndpointNameOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointName) {
		return nil, false
	}
	return o.EndpointName, true
}

// HasEndpointName returns a boolean if a field has been set.
func (o *ModelEndpointList) HasEndpointName() bool {
	if o != nil && !IsNil(o.EndpointName) {
		return true
	}

	return false
}

// SetEndpointName gets a reference to the given string and assigns it to the EndpointName field.
func (o *ModelEndpointList) SetEndpointName(v string) {
	o.EndpointName = &v
}

// GetFeatureName returns the FeatureName field value if set, zero value otherwise.
func (o *ModelEndpointList) GetFeatureName() string {
	if o == nil || IsNil(o.FeatureName) {
		var ret string
		return ret
	}
	return *o.FeatureName
}

// GetFeatureNameOk returns a tuple with the FeatureName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEndpointList) GetFeatureNameOk() (*string, bool) {
	if o == nil || IsNil(o.FeatureName) {
		return nil, false
	}
	return o.FeatureName, true
}

// HasFeatureName returns a boolean if a field has been set.
func (o *ModelEndpointList) HasFeatureName() bool {
	if o != nil && !IsNil(o.FeatureName) {
		return true
	}

	return false
}

// SetFeatureName gets a reference to the given string and assigns it to the FeatureName field.
func (o *ModelEndpointList) SetFeatureName(v string) {
	o.FeatureName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelEndpointList) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEndpointList) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelEndpointList) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelEndpointList) SetId(v int32) {
	o.Id = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *ModelEndpointList) GetTransactionType() string {
	if o == nil || IsNil(o.TransactionType) {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEndpointList) GetTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *ModelEndpointList) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *ModelEndpointList) SetTransactionType(v string) {
	o.TransactionType = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ModelEndpointList) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEndpointList) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ModelEndpointList) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ModelEndpointList) SetVersion(v string) {
	o.Version = &v
}

func (o ModelEndpointList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelEndpointList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.EndpointName) {
		toSerialize["endpoint_name"] = o.EndpointName
	}
	if !IsNil(o.FeatureName) {
		toSerialize["feature_name"] = o.FeatureName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transaction_type"] = o.TransactionType
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableModelEndpointList struct {
	value *ModelEndpointList
	isSet bool
}

func (v NullableModelEndpointList) Get() *ModelEndpointList {
	return v.value
}

func (v *NullableModelEndpointList) Set(val *ModelEndpointList) {
	v.value = val
	v.isSet = true
}

func (v NullableModelEndpointList) IsSet() bool {
	return v.isSet
}

func (v *NullableModelEndpointList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelEndpointList(val *ModelEndpointList) *NullableModelEndpointList {
	return &NullableModelEndpointList{value: val, isSet: true}
}

func (v NullableModelEndpointList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelEndpointList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


