/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package openapi;

import java.util.Objects;
import java.util.Arrays;
import bytes;
import fmt;

/**
 * ServiceTTS
 */
@.annotation.Generated(value = "org.openapitools.codegen.languages.GoClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceTTS {
  @.annotation.Nonnull
  private string Text;

  /**
   * Gets or Sets Voice
   */
  public enum VOICE {
    FEMALE_EN_US(string.valueOf("female/en-US")),
    
    MALE_EN_US(string.valueOf("male/en-US")),
    
    FEMALE_EN_CA(string.valueOf("female/en-CA")),
    
    FEMALE_EN_AU(string.valueOf("female/en-AU")),
    
    FEMALE_EN_GB(string.valueOf("female/en-GB")),
    
    MALE_EN_GB(string.valueOf("male/en-GB")),
    
    FEMALE_ES_US(string.valueOf("female/es-US")),
    
    MALE_ES_US(string.valueOf("male/es-US")),
    
    FEMALE_US_US(string.valueOf("female/us-US")),
    
    FEMALE_ZH_CN(string.valueOf("female/zh-CN")),
    
    MALE_ZH_CN(string.valueOf("male/zh-CN")),
    
    FEMALE_ZH_HK(string.valueOf("female/zh-HK")),
    
    FEMALE_ZH_TW(string.valueOf("female/zh-TW")),
    
    FEMALE_JA_JP(string.valueOf("female/ja-JP")),
    
    MALE_JA_JP(string.valueOf("male/ja-JP")),
    
    FEMALE_KO_KR(string.valueOf("female/ko-KR")),
    
    MALE_KO_KR(string.valueOf("male/ko-KR")),
    
    FEMALE_DA_DK(string.valueOf("female/da-DK")),
    
    FEMALE_DE_DE(string.valueOf("female/de-DE")),
    
    MALE_DE_DE(string.valueOf("male/de-DE")),
    
    FEMALE_CA_ES(string.valueOf("female/ca-ES")),
    
    FEMALE_ES_ES(string.valueOf("female/es-ES")),
    
    MALE_ES_ES(string.valueOf("male/es-ES")),
    
    FEMALE_FI_FI(string.valueOf("female/fi-FI")),
    
    FEMALE_FR_CA(string.valueOf("female/fr-CA")),
    
    MALE_FR_CA(string.valueOf("male/fr-CA")),
    
    FEMALE_FR_FR(string.valueOf("female/fr-FR")),
    
    MALE_FR_FR(string.valueOf("male/fr-FR")),
    
    FEMALE_IT_IT(string.valueOf("female/it-IT")),
    
    MALE_IT_IT(string.valueOf("male/it-IT")),
    
    FEMALE_NB_NO(string.valueOf("female/nb-NO")),
    
    FEMALE_NL_NL(string.valueOf("female/nl-NL")),
    
    FEMALE_PL_PL(string.valueOf("female/pl-PL")),
    
    FEMALE_PT_BR(string.valueOf("female/pt-BR")),
    
    FEMALE_PT_PT(string.valueOf("female/pt-PT")),
    
    MALE_PT_PT(string.valueOf("male/pt-PT")),
    
    FEMALE_RU_RU(string.valueOf("female/ru-RU")),
    
    MALE_RU_RU(string.valueOf("male/ru-RU")),
    
    FEMALE_SV_SE(string.valueOf("female/sv-SE")),
    
    FEMALE_HU_HU(string.valueOf("female/hu-HU")),
    
    FEMALE_CS_CZ(string.valueOf("female/cs-CZ")),
    
    FEMALE_TR_TR(string.valueOf("female/tr-TR")),
    
    MALE_TR_TR(string.valueOf("male/tr-TR")),
    
    MALE_RU_RU_VLADIMIR(string.valueOf("male/ru-RU/Vladimir")),
    
    FEMALE_RU_RU_JULIA(string.valueOf("female/ru-RU/Julia")),
    
    FEMALE_RU_RU_ANNA(string.valueOf("female/ru-RU/Anna")),
    
    FEMALE_RU_RU_VIKTORIA(string.valueOf("female/ru-RU/Viktoria")),
    
    MALE_RU_RU_ALEXANDER(string.valueOf("male/ru-RU/Alexander")),
    
    FEMALE_RU_RU_MARIA(string.valueOf("female/ru-RU/Maria")),
    
    FEMALE_RU_RU_LIDIA(string.valueOf("female/ru-RU/Lidia")),
    
    ES_ES_STANDARD_A(string.valueOf("es-ES-Standard-A")),
    
    IT_IT_STANDARD_A(string.valueOf("it-IT-Standard-A")),
    
    JA_JP_STANDARD_A(string.valueOf("ja-JP-Standard-A")),
    
    KO_KR_STANDARD_A(string.valueOf("ko-KR-Standard-A")),
    
    PT_BR_STANDARD_A(string.valueOf("pt-BR-Standard-A")),
    
    TR_TR_STANDARD_A(string.valueOf("tr-TR-Standard-A")),
    
    SV_SE_STANDARD_A(string.valueOf("sv-SE-Standard-A")),
    
    NL_NL_STANDARD_A(string.valueOf("nl-NL-Standard-A")),
    
    EN_US_WAVENET_D(string.valueOf("en-US-Wavenet-D")),
    
    DE_DE_WAVENET_A(string.valueOf("de-DE-Wavenet-A")),
    
    DE_DE_WAVENET_B(string.valueOf("de-DE-Wavenet-B")),
    
    DE_DE_WAVENET_C(string.valueOf("de-DE-Wavenet-C")),
    
    DE_DE_WAVENET_D(string.valueOf("de-DE-Wavenet-D")),
    
    EN_AU_WAVENET_A(string.valueOf("en-AU-Wavenet-A")),
    
    EN_AU_WAVENET_B(string.valueOf("en-AU-Wavenet-B")),
    
    EN_AU_WAVENET_C(string.valueOf("en-AU-Wavenet-C")),
    
    EN_AU_WAVENET_D(string.valueOf("en-AU-Wavenet-D")),
    
    EN_GB_WAVENET_A(string.valueOf("en-GB-Wavenet-A")),
    
    EN_GB_WAVENET_B(string.valueOf("en-GB-Wavenet-B")),
    
    EN_GB_WAVENET_C(string.valueOf("en-GB-Wavenet-C")),
    
    EN_GB_WAVENET_D(string.valueOf("en-GB-Wavenet-D")),
    
    EN_US_WAVENET_A(string.valueOf("en-US-Wavenet-A")),
    
    EN_US_WAVENET_B(string.valueOf("en-US-Wavenet-B")),
    
    EN_US_WAVENET_C(string.valueOf("en-US-Wavenet-C")),
    
    EN_US_WAVENET_E(string.valueOf("en-US-Wavenet-E")),
    
    EN_US_WAVENET_F(string.valueOf("en-US-Wavenet-F")),
    
    FR_FR_WAVENET_A(string.valueOf("fr-FR-Wavenet-A")),
    
    FR_FR_WAVENET_B(string.valueOf("fr-FR-Wavenet-B")),
    
    FR_FR_WAVENET_C(string.valueOf("fr-FR-Wavenet-C")),
    
    FR_FR_WAVENET_D(string.valueOf("fr-FR-Wavenet-D")),
    
    IT_IT_WAVENET_A(string.valueOf("it-IT-Wavenet-A")),
    
    JA_JP_WAVENET_A(string.valueOf("ja-JP-Wavenet-A")),
    
    NL_NL_WAVENET_A(string.valueOf("nl-NL-Wavenet-A")),
    
    EN_GB_STANDARD_A(string.valueOf("en-GB-Standard-A")),
    
    EN_GB_STANDARD_B(string.valueOf("en-GB-Standard-B")),
    
    EN_GB_STANDARD_C(string.valueOf("en-GB-Standard-C")),
    
    EN_GB_STANDARD_D(string.valueOf("en-GB-Standard-D")),
    
    EN_US_STANDARD_B(string.valueOf("en-US-Standard-B")),
    
    EN_US_STANDARD_C(string.valueOf("en-US-Standard-C")),
    
    EN_US_STANDARD_D(string.valueOf("en-US-Standard-D")),
    
    EN_US_STANDARD_E(string.valueOf("en-US-Standard-E")),
    
    DE_DE_STANDARD_A(string.valueOf("de-DE-Standard-A")),
    
    DE_DE_STANDARD_B(string.valueOf("de-DE-Standard-B")),
    
    EN_AU_STANDARD_A(string.valueOf("en-AU-Standard-A")),
    
    EN_AU_STANDARD_B(string.valueOf("en-AU-Standard-B")),
    
    EN_AU_STANDARD_C(string.valueOf("en-AU-Standard-C")),
    
    EN_AU_STANDARD_D(string.valueOf("en-AU-Standard-D")),
    
    FR_CA_STANDARD_A(string.valueOf("fr-CA-Standard-A")),
    
    FR_CA_STANDARD_B(string.valueOf("fr-CA-Standard-B")),
    
    FR_CA_STANDARD_C(string.valueOf("fr-CA-Standard-C")),
    
    FR_CA_STANDARD_D(string.valueOf("fr-CA-Standard-D")),
    
    FR_FR_STANDARD_A(string.valueOf("fr-FR-Standard-A")),
    
    FR_FR_STANDARD_B(string.valueOf("fr-FR-Standard-B")),
    
    FR_FR_STANDARD_C(string.valueOf("fr-FR-Standard-C")),
    
    FR_FR_STANDARD_D(string.valueOf("fr-FR-Standard-D"));

    private string value;

    VOICE(string value) {
      this.value = value;
    }

    public string getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VOICE fromValue(string value) {
      for (VOICE b : VOICE.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  @.annotation.Nullable
  private VOICE Voice;

  public ServiceTTS() {
  }

  public ServiceTTS Text(@.annotation.Nonnull string Text) {
    
    this.Text = Text;
    return this;
  }

  /**
   * Get Text
   * @return Text
   */
  @.annotation.Nonnull

  public string GetText() {
    return Text;
  }


  public void setText(@.annotation.Nonnull string Text) {
    this.Text = Text;
  }

  public ServiceTTS Voice(@.annotation.Nullable VOICE Voice) {
    
    this.Voice = Voice;
    return this;
  }

  /**
   * Get Voice
   * @return Voice
   */
  @.annotation.Nullable

  public VOICE GetVoice() {
    return Voice;
  }


  public void setVoice(@.annotation.Nullable VOICE Voice) {
    this.Voice = Voice;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceTTS ServiceTTS = (ServiceTTS) o;
    return Objects.equals(this.Text, ServiceTTS.Text) &&
        Objects.equals(this.Voice, ServiceTTS.Voice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(Text, Voice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceTTS {\n");
    sb.append("    Text: ").append(toIndentedString(Text)).append("\n");
    sb.append("    Voice: ").append(toIndentedString(Voice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

