/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceParkingSlotData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceParkingSlotData{}

// ServiceParkingSlotData struct for ServiceParkingSlotData
type ServiceParkingSlotData struct {
	Attended *bool `json:"attended,omitempty"`
	CallId *string `json:"call_id,omitempty"`
	CidName *string `json:"cid_name,omitempty"`
	CidNumber *string `json:"cid_number,omitempty"`
	CidUri *string `json:"cid_uri,omitempty"`
	FromTag *string `json:"from_tag,omitempty"`
	Node *string `json:"node,omitempty"`
	PresenceId *string `json:"presence_id,omitempty"`
	PresenceRealm *string `json:"presence_realm,omitempty"`
	PresenceType *string `json:"presence_type,omitempty"`
	PresenceUser *string `json:"presence_user,omitempty"`
	RingbackId *string `json:"ringback_id,omitempty"`
	SlotCallId *string `json:"slot_call_id,omitempty"`
	SwitchUri *string `json:"switch_uri,omitempty"`
	ToTag *string `json:"to_tag,omitempty"`
}

// NewServiceParkingSlotData instantiates a new ServiceParkingSlotData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceParkingSlotData() *ServiceParkingSlotData {
	this := ServiceParkingSlotData{}
	return &this
}

// NewServiceParkingSlotDataWithDefaults instantiates a new ServiceParkingSlotData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceParkingSlotDataWithDefaults() *ServiceParkingSlotData {
	this := ServiceParkingSlotData{}
	return &this
}

// GetAttended returns the Attended field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetAttended() bool {
	if o == nil || IsNil(o.Attended) {
		var ret bool
		return ret
	}
	return *o.Attended
}

// GetAttendedOk returns a tuple with the Attended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetAttendedOk() (*bool, bool) {
	if o == nil || IsNil(o.Attended) {
		return nil, false
	}
	return o.Attended, true
}

// HasAttended returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasAttended() bool {
	if o != nil && !IsNil(o.Attended) {
		return true
	}

	return false
}

// SetAttended gets a reference to the given bool and assigns it to the Attended field.
func (o *ServiceParkingSlotData) SetAttended(v bool) {
	o.Attended = &v
}

// GetCallId returns the CallId field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetCallId() string {
	if o == nil || IsNil(o.CallId) {
		var ret string
		return ret
	}
	return *o.CallId
}

// GetCallIdOk returns a tuple with the CallId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetCallIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallId) {
		return nil, false
	}
	return o.CallId, true
}

// HasCallId returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasCallId() bool {
	if o != nil && !IsNil(o.CallId) {
		return true
	}

	return false
}

// SetCallId gets a reference to the given string and assigns it to the CallId field.
func (o *ServiceParkingSlotData) SetCallId(v string) {
	o.CallId = &v
}

// GetCidName returns the CidName field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetCidName() string {
	if o == nil || IsNil(o.CidName) {
		var ret string
		return ret
	}
	return *o.CidName
}

// GetCidNameOk returns a tuple with the CidName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetCidNameOk() (*string, bool) {
	if o == nil || IsNil(o.CidName) {
		return nil, false
	}
	return o.CidName, true
}

// HasCidName returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasCidName() bool {
	if o != nil && !IsNil(o.CidName) {
		return true
	}

	return false
}

// SetCidName gets a reference to the given string and assigns it to the CidName field.
func (o *ServiceParkingSlotData) SetCidName(v string) {
	o.CidName = &v
}

// GetCidNumber returns the CidNumber field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetCidNumber() string {
	if o == nil || IsNil(o.CidNumber) {
		var ret string
		return ret
	}
	return *o.CidNumber
}

// GetCidNumberOk returns a tuple with the CidNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetCidNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CidNumber) {
		return nil, false
	}
	return o.CidNumber, true
}

// HasCidNumber returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasCidNumber() bool {
	if o != nil && !IsNil(o.CidNumber) {
		return true
	}

	return false
}

// SetCidNumber gets a reference to the given string and assigns it to the CidNumber field.
func (o *ServiceParkingSlotData) SetCidNumber(v string) {
	o.CidNumber = &v
}

// GetCidUri returns the CidUri field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetCidUri() string {
	if o == nil || IsNil(o.CidUri) {
		var ret string
		return ret
	}
	return *o.CidUri
}

// GetCidUriOk returns a tuple with the CidUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetCidUriOk() (*string, bool) {
	if o == nil || IsNil(o.CidUri) {
		return nil, false
	}
	return o.CidUri, true
}

// HasCidUri returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasCidUri() bool {
	if o != nil && !IsNil(o.CidUri) {
		return true
	}

	return false
}

// SetCidUri gets a reference to the given string and assigns it to the CidUri field.
func (o *ServiceParkingSlotData) SetCidUri(v string) {
	o.CidUri = &v
}

// GetFromTag returns the FromTag field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetFromTag() string {
	if o == nil || IsNil(o.FromTag) {
		var ret string
		return ret
	}
	return *o.FromTag
}

// GetFromTagOk returns a tuple with the FromTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetFromTagOk() (*string, bool) {
	if o == nil || IsNil(o.FromTag) {
		return nil, false
	}
	return o.FromTag, true
}

// HasFromTag returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasFromTag() bool {
	if o != nil && !IsNil(o.FromTag) {
		return true
	}

	return false
}

// SetFromTag gets a reference to the given string and assigns it to the FromTag field.
func (o *ServiceParkingSlotData) SetFromTag(v string) {
	o.FromTag = &v
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetNode() string {
	if o == nil || IsNil(o.Node) {
		var ret string
		return ret
	}
	return *o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetNodeOk() (*string, bool) {
	if o == nil || IsNil(o.Node) {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasNode() bool {
	if o != nil && !IsNil(o.Node) {
		return true
	}

	return false
}

// SetNode gets a reference to the given string and assigns it to the Node field.
func (o *ServiceParkingSlotData) SetNode(v string) {
	o.Node = &v
}

// GetPresenceId returns the PresenceId field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetPresenceId() string {
	if o == nil || IsNil(o.PresenceId) {
		var ret string
		return ret
	}
	return *o.PresenceId
}

// GetPresenceIdOk returns a tuple with the PresenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetPresenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.PresenceId) {
		return nil, false
	}
	return o.PresenceId, true
}

// HasPresenceId returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasPresenceId() bool {
	if o != nil && !IsNil(o.PresenceId) {
		return true
	}

	return false
}

// SetPresenceId gets a reference to the given string and assigns it to the PresenceId field.
func (o *ServiceParkingSlotData) SetPresenceId(v string) {
	o.PresenceId = &v
}

// GetPresenceRealm returns the PresenceRealm field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetPresenceRealm() string {
	if o == nil || IsNil(o.PresenceRealm) {
		var ret string
		return ret
	}
	return *o.PresenceRealm
}

// GetPresenceRealmOk returns a tuple with the PresenceRealm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetPresenceRealmOk() (*string, bool) {
	if o == nil || IsNil(o.PresenceRealm) {
		return nil, false
	}
	return o.PresenceRealm, true
}

// HasPresenceRealm returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasPresenceRealm() bool {
	if o != nil && !IsNil(o.PresenceRealm) {
		return true
	}

	return false
}

// SetPresenceRealm gets a reference to the given string and assigns it to the PresenceRealm field.
func (o *ServiceParkingSlotData) SetPresenceRealm(v string) {
	o.PresenceRealm = &v
}

// GetPresenceType returns the PresenceType field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetPresenceType() string {
	if o == nil || IsNil(o.PresenceType) {
		var ret string
		return ret
	}
	return *o.PresenceType
}

// GetPresenceTypeOk returns a tuple with the PresenceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetPresenceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PresenceType) {
		return nil, false
	}
	return o.PresenceType, true
}

// HasPresenceType returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasPresenceType() bool {
	if o != nil && !IsNil(o.PresenceType) {
		return true
	}

	return false
}

// SetPresenceType gets a reference to the given string and assigns it to the PresenceType field.
func (o *ServiceParkingSlotData) SetPresenceType(v string) {
	o.PresenceType = &v
}

// GetPresenceUser returns the PresenceUser field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetPresenceUser() string {
	if o == nil || IsNil(o.PresenceUser) {
		var ret string
		return ret
	}
	return *o.PresenceUser
}

// GetPresenceUserOk returns a tuple with the PresenceUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetPresenceUserOk() (*string, bool) {
	if o == nil || IsNil(o.PresenceUser) {
		return nil, false
	}
	return o.PresenceUser, true
}

// HasPresenceUser returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasPresenceUser() bool {
	if o != nil && !IsNil(o.PresenceUser) {
		return true
	}

	return false
}

// SetPresenceUser gets a reference to the given string and assigns it to the PresenceUser field.
func (o *ServiceParkingSlotData) SetPresenceUser(v string) {
	o.PresenceUser = &v
}

// GetRingbackId returns the RingbackId field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetRingbackId() string {
	if o == nil || IsNil(o.RingbackId) {
		var ret string
		return ret
	}
	return *o.RingbackId
}

// GetRingbackIdOk returns a tuple with the RingbackId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetRingbackIdOk() (*string, bool) {
	if o == nil || IsNil(o.RingbackId) {
		return nil, false
	}
	return o.RingbackId, true
}

// HasRingbackId returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasRingbackId() bool {
	if o != nil && !IsNil(o.RingbackId) {
		return true
	}

	return false
}

// SetRingbackId gets a reference to the given string and assigns it to the RingbackId field.
func (o *ServiceParkingSlotData) SetRingbackId(v string) {
	o.RingbackId = &v
}

// GetSlotCallId returns the SlotCallId field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetSlotCallId() string {
	if o == nil || IsNil(o.SlotCallId) {
		var ret string
		return ret
	}
	return *o.SlotCallId
}

// GetSlotCallIdOk returns a tuple with the SlotCallId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetSlotCallIdOk() (*string, bool) {
	if o == nil || IsNil(o.SlotCallId) {
		return nil, false
	}
	return o.SlotCallId, true
}

// HasSlotCallId returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasSlotCallId() bool {
	if o != nil && !IsNil(o.SlotCallId) {
		return true
	}

	return false
}

// SetSlotCallId gets a reference to the given string and assigns it to the SlotCallId field.
func (o *ServiceParkingSlotData) SetSlotCallId(v string) {
	o.SlotCallId = &v
}

// GetSwitchUri returns the SwitchUri field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetSwitchUri() string {
	if o == nil || IsNil(o.SwitchUri) {
		var ret string
		return ret
	}
	return *o.SwitchUri
}

// GetSwitchUriOk returns a tuple with the SwitchUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetSwitchUriOk() (*string, bool) {
	if o == nil || IsNil(o.SwitchUri) {
		return nil, false
	}
	return o.SwitchUri, true
}

// HasSwitchUri returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasSwitchUri() bool {
	if o != nil && !IsNil(o.SwitchUri) {
		return true
	}

	return false
}

// SetSwitchUri gets a reference to the given string and assigns it to the SwitchUri field.
func (o *ServiceParkingSlotData) SetSwitchUri(v string) {
	o.SwitchUri = &v
}

// GetToTag returns the ToTag field value if set, zero value otherwise.
func (o *ServiceParkingSlotData) GetToTag() string {
	if o == nil || IsNil(o.ToTag) {
		var ret string
		return ret
	}
	return *o.ToTag
}

// GetToTagOk returns a tuple with the ToTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParkingSlotData) GetToTagOk() (*string, bool) {
	if o == nil || IsNil(o.ToTag) {
		return nil, false
	}
	return o.ToTag, true
}

// HasToTag returns a boolean if a field has been set.
func (o *ServiceParkingSlotData) HasToTag() bool {
	if o != nil && !IsNil(o.ToTag) {
		return true
	}

	return false
}

// SetToTag gets a reference to the given string and assigns it to the ToTag field.
func (o *ServiceParkingSlotData) SetToTag(v string) {
	o.ToTag = &v
}

func (o ServiceParkingSlotData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceParkingSlotData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attended) {
		toSerialize["attended"] = o.Attended
	}
	if !IsNil(o.CallId) {
		toSerialize["call_id"] = o.CallId
	}
	if !IsNil(o.CidName) {
		toSerialize["cid_name"] = o.CidName
	}
	if !IsNil(o.CidNumber) {
		toSerialize["cid_number"] = o.CidNumber
	}
	if !IsNil(o.CidUri) {
		toSerialize["cid_uri"] = o.CidUri
	}
	if !IsNil(o.FromTag) {
		toSerialize["from_tag"] = o.FromTag
	}
	if !IsNil(o.Node) {
		toSerialize["node"] = o.Node
	}
	if !IsNil(o.PresenceId) {
		toSerialize["presence_id"] = o.PresenceId
	}
	if !IsNil(o.PresenceRealm) {
		toSerialize["presence_realm"] = o.PresenceRealm
	}
	if !IsNil(o.PresenceType) {
		toSerialize["presence_type"] = o.PresenceType
	}
	if !IsNil(o.PresenceUser) {
		toSerialize["presence_user"] = o.PresenceUser
	}
	if !IsNil(o.RingbackId) {
		toSerialize["ringback_id"] = o.RingbackId
	}
	if !IsNil(o.SlotCallId) {
		toSerialize["slot_call_id"] = o.SlotCallId
	}
	if !IsNil(o.SwitchUri) {
		toSerialize["switch_uri"] = o.SwitchUri
	}
	if !IsNil(o.ToTag) {
		toSerialize["to_tag"] = o.ToTag
	}
	return toSerialize, nil
}

type NullableServiceParkingSlotData struct {
	value *ServiceParkingSlotData
	isSet bool
}

func (v NullableServiceParkingSlotData) Get() *ServiceParkingSlotData {
	return v.value
}

func (v *NullableServiceParkingSlotData) Set(val *ServiceParkingSlotData) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceParkingSlotData) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceParkingSlotData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceParkingSlotData(val *ServiceParkingSlotData) *NullableServiceParkingSlotData {
	return &NullableServiceParkingSlotData{value: val, isSet: true}
}

func (v NullableServiceParkingSlotData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceParkingSlotData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


