/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceCampaignImportOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceCampaignImportOutput{}

// ServiceCampaignImportOutput struct for ServiceCampaignImportOutput
type ServiceCampaignImportOutput struct {
	CampaignId *string `json:"campaign_id,omitempty"`
	CreatedDate *string `json:"created_date,omitempty"`
	Description *string `json:"description,omitempty"`
	MessageClass *string `json:"message_class,omitempty"`
	MnoStatusList []ServiceCampaignImportOutputMnoStatusListInner `json:"mno_status_list,omitempty"`
	SecondaryDcaSharingStatus *string `json:"secondary_dca_sharing_status,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewServiceCampaignImportOutput instantiates a new ServiceCampaignImportOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceCampaignImportOutput() *ServiceCampaignImportOutput {
	this := ServiceCampaignImportOutput{}
	return &this
}

// NewServiceCampaignImportOutputWithDefaults instantiates a new ServiceCampaignImportOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceCampaignImportOutputWithDefaults() *ServiceCampaignImportOutput {
	this := ServiceCampaignImportOutput{}
	return &this
}

// GetCampaignId returns the CampaignId field value if set, zero value otherwise.
func (o *ServiceCampaignImportOutput) GetCampaignId() string {
	if o == nil || IsNil(o.CampaignId) {
		var ret string
		return ret
	}
	return *o.CampaignId
}

// GetCampaignIdOk returns a tuple with the CampaignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCampaignImportOutput) GetCampaignIdOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignId) {
		return nil, false
	}
	return o.CampaignId, true
}

// HasCampaignId returns a boolean if a field has been set.
func (o *ServiceCampaignImportOutput) HasCampaignId() bool {
	if o != nil && !IsNil(o.CampaignId) {
		return true
	}

	return false
}

// SetCampaignId gets a reference to the given string and assigns it to the CampaignId field.
func (o *ServiceCampaignImportOutput) SetCampaignId(v string) {
	o.CampaignId = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *ServiceCampaignImportOutput) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCampaignImportOutput) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *ServiceCampaignImportOutput) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *ServiceCampaignImportOutput) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServiceCampaignImportOutput) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCampaignImportOutput) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceCampaignImportOutput) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServiceCampaignImportOutput) SetDescription(v string) {
	o.Description = &v
}

// GetMessageClass returns the MessageClass field value if set, zero value otherwise.
func (o *ServiceCampaignImportOutput) GetMessageClass() string {
	if o == nil || IsNil(o.MessageClass) {
		var ret string
		return ret
	}
	return *o.MessageClass
}

// GetMessageClassOk returns a tuple with the MessageClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCampaignImportOutput) GetMessageClassOk() (*string, bool) {
	if o == nil || IsNil(o.MessageClass) {
		return nil, false
	}
	return o.MessageClass, true
}

// HasMessageClass returns a boolean if a field has been set.
func (o *ServiceCampaignImportOutput) HasMessageClass() bool {
	if o != nil && !IsNil(o.MessageClass) {
		return true
	}

	return false
}

// SetMessageClass gets a reference to the given string and assigns it to the MessageClass field.
func (o *ServiceCampaignImportOutput) SetMessageClass(v string) {
	o.MessageClass = &v
}

// GetMnoStatusList returns the MnoStatusList field value if set, zero value otherwise.
func (o *ServiceCampaignImportOutput) GetMnoStatusList() []ServiceCampaignImportOutputMnoStatusListInner {
	if o == nil || IsNil(o.MnoStatusList) {
		var ret []ServiceCampaignImportOutputMnoStatusListInner
		return ret
	}
	return o.MnoStatusList
}

// GetMnoStatusListOk returns a tuple with the MnoStatusList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCampaignImportOutput) GetMnoStatusListOk() ([]ServiceCampaignImportOutputMnoStatusListInner, bool) {
	if o == nil || IsNil(o.MnoStatusList) {
		return nil, false
	}
	return o.MnoStatusList, true
}

// HasMnoStatusList returns a boolean if a field has been set.
func (o *ServiceCampaignImportOutput) HasMnoStatusList() bool {
	if o != nil && !IsNil(o.MnoStatusList) {
		return true
	}

	return false
}

// SetMnoStatusList gets a reference to the given []ServiceCampaignImportOutputMnoStatusListInner and assigns it to the MnoStatusList field.
func (o *ServiceCampaignImportOutput) SetMnoStatusList(v []ServiceCampaignImportOutputMnoStatusListInner) {
	o.MnoStatusList = v
}

// GetSecondaryDcaSharingStatus returns the SecondaryDcaSharingStatus field value if set, zero value otherwise.
func (o *ServiceCampaignImportOutput) GetSecondaryDcaSharingStatus() string {
	if o == nil || IsNil(o.SecondaryDcaSharingStatus) {
		var ret string
		return ret
	}
	return *o.SecondaryDcaSharingStatus
}

// GetSecondaryDcaSharingStatusOk returns a tuple with the SecondaryDcaSharingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCampaignImportOutput) GetSecondaryDcaSharingStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryDcaSharingStatus) {
		return nil, false
	}
	return o.SecondaryDcaSharingStatus, true
}

// HasSecondaryDcaSharingStatus returns a boolean if a field has been set.
func (o *ServiceCampaignImportOutput) HasSecondaryDcaSharingStatus() bool {
	if o != nil && !IsNil(o.SecondaryDcaSharingStatus) {
		return true
	}

	return false
}

// SetSecondaryDcaSharingStatus gets a reference to the given string and assigns it to the SecondaryDcaSharingStatus field.
func (o *ServiceCampaignImportOutput) SetSecondaryDcaSharingStatus(v string) {
	o.SecondaryDcaSharingStatus = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ServiceCampaignImportOutput) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCampaignImportOutput) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ServiceCampaignImportOutput) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ServiceCampaignImportOutput) SetStatus(v string) {
	o.Status = &v
}

func (o ServiceCampaignImportOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceCampaignImportOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CampaignId) {
		toSerialize["campaign_id"] = o.CampaignId
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["created_date"] = o.CreatedDate
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.MessageClass) {
		toSerialize["message_class"] = o.MessageClass
	}
	if !IsNil(o.MnoStatusList) {
		toSerialize["mno_status_list"] = o.MnoStatusList
	}
	if !IsNil(o.SecondaryDcaSharingStatus) {
		toSerialize["secondary_dca_sharing_status"] = o.SecondaryDcaSharingStatus
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableServiceCampaignImportOutput struct {
	value *ServiceCampaignImportOutput
	isSet bool
}

func (v NullableServiceCampaignImportOutput) Get() *ServiceCampaignImportOutput {
	return v.value
}

func (v *NullableServiceCampaignImportOutput) Set(val *ServiceCampaignImportOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceCampaignImportOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceCampaignImportOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceCampaignImportOutput(val *ServiceCampaignImportOutput) *NullableServiceCampaignImportOutput {
	return &NullableServiceCampaignImportOutput{value: val, isSet: true}
}

func (v NullableServiceCampaignImportOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceCampaignImportOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


