/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceCallRecordingOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceCallRecordingOutput{}

// ServiceCallRecordingOutput struct for ServiceCallRecordingOutput
type ServiceCallRecordingOutput struct {
	CallId *string `json:"call_id,omitempty"`
	CalleeIdName *string `json:"callee_id_name,omitempty"`
	CalleeIdNumber *string `json:"callee_id_number,omitempty"`
	CallerIdName *string `json:"caller_id_name,omitempty"`
	CallerIdNumber *string `json:"caller_id_number,omitempty"`
	CdrId *string `json:"cdr_id,omitempty"`
	ContentType *string `json:"content_type,omitempty"`
	CustomChannelVars map[string]interface{} `json:"custom_channel_vars,omitempty"`
	Description *string `json:"description,omitempty"`
	Direction *string `json:"direction,omitempty"`
	Duration *int32 `json:"duration,omitempty"`
	DurationMs *int32 `json:"duration_ms,omitempty"`
	EndpointId *string `json:"endpoint_id,omitempty"`
	From *string `json:"from,omitempty"`
	Id *string `json:"id,omitempty"`
	InteractionId *string `json:"interaction_id,omitempty"`
	MediaSource *string `json:"media_source,omitempty"`
	MediaType *string `json:"media_type,omitempty"`
	Name *string `json:"name,omitempty"`
	Origin *string `json:"origin,omitempty"`
	OwnerId *string `json:"owner_id,omitempty"`
	Request *string `json:"request,omitempty"`
	SourceType *string `json:"source_type,omitempty"`
	Start *int32 `json:"start,omitempty"`
	To *string `json:"to,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewServiceCallRecordingOutput instantiates a new ServiceCallRecordingOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceCallRecordingOutput() *ServiceCallRecordingOutput {
	this := ServiceCallRecordingOutput{}
	return &this
}

// NewServiceCallRecordingOutputWithDefaults instantiates a new ServiceCallRecordingOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceCallRecordingOutputWithDefaults() *ServiceCallRecordingOutput {
	this := ServiceCallRecordingOutput{}
	return &this
}

// GetCallId returns the CallId field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetCallId() string {
	if o == nil || IsNil(o.CallId) {
		var ret string
		return ret
	}
	return *o.CallId
}

// GetCallIdOk returns a tuple with the CallId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetCallIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallId) {
		return nil, false
	}
	return o.CallId, true
}

// HasCallId returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasCallId() bool {
	if o != nil && !IsNil(o.CallId) {
		return true
	}

	return false
}

// SetCallId gets a reference to the given string and assigns it to the CallId field.
func (o *ServiceCallRecordingOutput) SetCallId(v string) {
	o.CallId = &v
}

// GetCalleeIdName returns the CalleeIdName field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetCalleeIdName() string {
	if o == nil || IsNil(o.CalleeIdName) {
		var ret string
		return ret
	}
	return *o.CalleeIdName
}

// GetCalleeIdNameOk returns a tuple with the CalleeIdName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetCalleeIdNameOk() (*string, bool) {
	if o == nil || IsNil(o.CalleeIdName) {
		return nil, false
	}
	return o.CalleeIdName, true
}

// HasCalleeIdName returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasCalleeIdName() bool {
	if o != nil && !IsNil(o.CalleeIdName) {
		return true
	}

	return false
}

// SetCalleeIdName gets a reference to the given string and assigns it to the CalleeIdName field.
func (o *ServiceCallRecordingOutput) SetCalleeIdName(v string) {
	o.CalleeIdName = &v
}

// GetCalleeIdNumber returns the CalleeIdNumber field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetCalleeIdNumber() string {
	if o == nil || IsNil(o.CalleeIdNumber) {
		var ret string
		return ret
	}
	return *o.CalleeIdNumber
}

// GetCalleeIdNumberOk returns a tuple with the CalleeIdNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetCalleeIdNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CalleeIdNumber) {
		return nil, false
	}
	return o.CalleeIdNumber, true
}

// HasCalleeIdNumber returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasCalleeIdNumber() bool {
	if o != nil && !IsNil(o.CalleeIdNumber) {
		return true
	}

	return false
}

// SetCalleeIdNumber gets a reference to the given string and assigns it to the CalleeIdNumber field.
func (o *ServiceCallRecordingOutput) SetCalleeIdNumber(v string) {
	o.CalleeIdNumber = &v
}

// GetCallerIdName returns the CallerIdName field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetCallerIdName() string {
	if o == nil || IsNil(o.CallerIdName) {
		var ret string
		return ret
	}
	return *o.CallerIdName
}

// GetCallerIdNameOk returns a tuple with the CallerIdName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetCallerIdNameOk() (*string, bool) {
	if o == nil || IsNil(o.CallerIdName) {
		return nil, false
	}
	return o.CallerIdName, true
}

// HasCallerIdName returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasCallerIdName() bool {
	if o != nil && !IsNil(o.CallerIdName) {
		return true
	}

	return false
}

// SetCallerIdName gets a reference to the given string and assigns it to the CallerIdName field.
func (o *ServiceCallRecordingOutput) SetCallerIdName(v string) {
	o.CallerIdName = &v
}

// GetCallerIdNumber returns the CallerIdNumber field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetCallerIdNumber() string {
	if o == nil || IsNil(o.CallerIdNumber) {
		var ret string
		return ret
	}
	return *o.CallerIdNumber
}

// GetCallerIdNumberOk returns a tuple with the CallerIdNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetCallerIdNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CallerIdNumber) {
		return nil, false
	}
	return o.CallerIdNumber, true
}

// HasCallerIdNumber returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasCallerIdNumber() bool {
	if o != nil && !IsNil(o.CallerIdNumber) {
		return true
	}

	return false
}

// SetCallerIdNumber gets a reference to the given string and assigns it to the CallerIdNumber field.
func (o *ServiceCallRecordingOutput) SetCallerIdNumber(v string) {
	o.CallerIdNumber = &v
}

// GetCdrId returns the CdrId field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetCdrId() string {
	if o == nil || IsNil(o.CdrId) {
		var ret string
		return ret
	}
	return *o.CdrId
}

// GetCdrIdOk returns a tuple with the CdrId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetCdrIdOk() (*string, bool) {
	if o == nil || IsNil(o.CdrId) {
		return nil, false
	}
	return o.CdrId, true
}

// HasCdrId returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasCdrId() bool {
	if o != nil && !IsNil(o.CdrId) {
		return true
	}

	return false
}

// SetCdrId gets a reference to the given string and assigns it to the CdrId field.
func (o *ServiceCallRecordingOutput) SetCdrId(v string) {
	o.CdrId = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *ServiceCallRecordingOutput) SetContentType(v string) {
	o.ContentType = &v
}

// GetCustomChannelVars returns the CustomChannelVars field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetCustomChannelVars() map[string]interface{} {
	if o == nil || IsNil(o.CustomChannelVars) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomChannelVars
}

// GetCustomChannelVarsOk returns a tuple with the CustomChannelVars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetCustomChannelVarsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomChannelVars) {
		return map[string]interface{}{}, false
	}
	return o.CustomChannelVars, true
}

// HasCustomChannelVars returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasCustomChannelVars() bool {
	if o != nil && !IsNil(o.CustomChannelVars) {
		return true
	}

	return false
}

// SetCustomChannelVars gets a reference to the given map[string]interface{} and assigns it to the CustomChannelVars field.
func (o *ServiceCallRecordingOutput) SetCustomChannelVars(v map[string]interface{}) {
	o.CustomChannelVars = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServiceCallRecordingOutput) SetDescription(v string) {
	o.Description = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *ServiceCallRecordingOutput) SetDirection(v string) {
	o.Direction = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *ServiceCallRecordingOutput) SetDuration(v int32) {
	o.Duration = &v
}

// GetDurationMs returns the DurationMs field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetDurationMs() int32 {
	if o == nil || IsNil(o.DurationMs) {
		var ret int32
		return ret
	}
	return *o.DurationMs
}

// GetDurationMsOk returns a tuple with the DurationMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetDurationMsOk() (*int32, bool) {
	if o == nil || IsNil(o.DurationMs) {
		return nil, false
	}
	return o.DurationMs, true
}

// HasDurationMs returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasDurationMs() bool {
	if o != nil && !IsNil(o.DurationMs) {
		return true
	}

	return false
}

// SetDurationMs gets a reference to the given int32 and assigns it to the DurationMs field.
func (o *ServiceCallRecordingOutput) SetDurationMs(v int32) {
	o.DurationMs = &v
}

// GetEndpointId returns the EndpointId field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetEndpointId() string {
	if o == nil || IsNil(o.EndpointId) {
		var ret string
		return ret
	}
	return *o.EndpointId
}

// GetEndpointIdOk returns a tuple with the EndpointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetEndpointIdOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointId) {
		return nil, false
	}
	return o.EndpointId, true
}

// HasEndpointId returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasEndpointId() bool {
	if o != nil && !IsNil(o.EndpointId) {
		return true
	}

	return false
}

// SetEndpointId gets a reference to the given string and assigns it to the EndpointId field.
func (o *ServiceCallRecordingOutput) SetEndpointId(v string) {
	o.EndpointId = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *ServiceCallRecordingOutput) SetFrom(v string) {
	o.From = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServiceCallRecordingOutput) SetId(v string) {
	o.Id = &v
}

// GetInteractionId returns the InteractionId field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetInteractionId() string {
	if o == nil || IsNil(o.InteractionId) {
		var ret string
		return ret
	}
	return *o.InteractionId
}

// GetInteractionIdOk returns a tuple with the InteractionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetInteractionIdOk() (*string, bool) {
	if o == nil || IsNil(o.InteractionId) {
		return nil, false
	}
	return o.InteractionId, true
}

// HasInteractionId returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasInteractionId() bool {
	if o != nil && !IsNil(o.InteractionId) {
		return true
	}

	return false
}

// SetInteractionId gets a reference to the given string and assigns it to the InteractionId field.
func (o *ServiceCallRecordingOutput) SetInteractionId(v string) {
	o.InteractionId = &v
}

// GetMediaSource returns the MediaSource field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetMediaSource() string {
	if o == nil || IsNil(o.MediaSource) {
		var ret string
		return ret
	}
	return *o.MediaSource
}

// GetMediaSourceOk returns a tuple with the MediaSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetMediaSourceOk() (*string, bool) {
	if o == nil || IsNil(o.MediaSource) {
		return nil, false
	}
	return o.MediaSource, true
}

// HasMediaSource returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasMediaSource() bool {
	if o != nil && !IsNil(o.MediaSource) {
		return true
	}

	return false
}

// SetMediaSource gets a reference to the given string and assigns it to the MediaSource field.
func (o *ServiceCallRecordingOutput) SetMediaSource(v string) {
	o.MediaSource = &v
}

// GetMediaType returns the MediaType field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetMediaType() string {
	if o == nil || IsNil(o.MediaType) {
		var ret string
		return ret
	}
	return *o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetMediaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MediaType) {
		return nil, false
	}
	return o.MediaType, true
}

// HasMediaType returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasMediaType() bool {
	if o != nil && !IsNil(o.MediaType) {
		return true
	}

	return false
}

// SetMediaType gets a reference to the given string and assigns it to the MediaType field.
func (o *ServiceCallRecordingOutput) SetMediaType(v string) {
	o.MediaType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServiceCallRecordingOutput) SetName(v string) {
	o.Name = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetOrigin() string {
	if o == nil || IsNil(o.Origin) {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetOriginOk() (*string, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *ServiceCallRecordingOutput) SetOrigin(v string) {
	o.Origin = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetOwnerId() string {
	if o == nil || IsNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *ServiceCallRecordingOutput) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetRequest() string {
	if o == nil || IsNil(o.Request) {
		var ret string
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetRequestOk() (*string, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given string and assigns it to the Request field.
func (o *ServiceCallRecordingOutput) SetRequest(v string) {
	o.Request = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetSourceType() string {
	if o == nil || IsNil(o.SourceType) {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetSourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceType) {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasSourceType() bool {
	if o != nil && !IsNil(o.SourceType) {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *ServiceCallRecordingOutput) SetSourceType(v string) {
	o.SourceType = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetStart() int32 {
	if o == nil || IsNil(o.Start) {
		var ret int32
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetStartOk() (*int32, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given int32 and assigns it to the Start field.
func (o *ServiceCallRecordingOutput) SetStart(v int32) {
	o.Start = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetTo() string {
	if o == nil || IsNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetToOk() (*string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *ServiceCallRecordingOutput) SetTo(v string) {
	o.To = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ServiceCallRecordingOutput) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingOutput) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ServiceCallRecordingOutput) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ServiceCallRecordingOutput) SetUrl(v string) {
	o.Url = &v
}

func (o ServiceCallRecordingOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceCallRecordingOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallId) {
		toSerialize["call_id"] = o.CallId
	}
	if !IsNil(o.CalleeIdName) {
		toSerialize["callee_id_name"] = o.CalleeIdName
	}
	if !IsNil(o.CalleeIdNumber) {
		toSerialize["callee_id_number"] = o.CalleeIdNumber
	}
	if !IsNil(o.CallerIdName) {
		toSerialize["caller_id_name"] = o.CallerIdName
	}
	if !IsNil(o.CallerIdNumber) {
		toSerialize["caller_id_number"] = o.CallerIdNumber
	}
	if !IsNil(o.CdrId) {
		toSerialize["cdr_id"] = o.CdrId
	}
	if !IsNil(o.ContentType) {
		toSerialize["content_type"] = o.ContentType
	}
	if !IsNil(o.CustomChannelVars) {
		toSerialize["custom_channel_vars"] = o.CustomChannelVars
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.DurationMs) {
		toSerialize["duration_ms"] = o.DurationMs
	}
	if !IsNil(o.EndpointId) {
		toSerialize["endpoint_id"] = o.EndpointId
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InteractionId) {
		toSerialize["interaction_id"] = o.InteractionId
	}
	if !IsNil(o.MediaSource) {
		toSerialize["media_source"] = o.MediaSource
	}
	if !IsNil(o.MediaType) {
		toSerialize["media_type"] = o.MediaType
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.SourceType) {
		toSerialize["source_type"] = o.SourceType
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableServiceCallRecordingOutput struct {
	value *ServiceCallRecordingOutput
	isSet bool
}

func (v NullableServiceCallRecordingOutput) Get() *ServiceCallRecordingOutput {
	return v.value
}

func (v *NullableServiceCallRecordingOutput) Set(val *ServiceCallRecordingOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceCallRecordingOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceCallRecordingOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceCallRecordingOutput(val *ServiceCallRecordingOutput) *NullableServiceCallRecordingOutput {
	return &NullableServiceCallRecordingOutput{value: val, isSet: true}
}

func (v NullableServiceCallRecordingOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceCallRecordingOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


