/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelsDeviceOutputFull type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsDeviceOutputFull{}

// ModelsDeviceOutputFull struct for ModelsDeviceOutputFull
type ModelsDeviceOutputFull struct {
	CallForward *ModelsCallForward `json:"call_forward,omitempty"`
	CallRecording *ModelsCallRecordingSettings `json:"call_recording,omitempty"`
	CallerId *ModelsDeviceOutputFullCallerid `json:"caller_id,omitempty"`
	DeviceType *string `json:"device_type,omitempty"`
	DoNotDisturb *ModelsVOIPSharedDoNotDisturb `json:"do_not_disturb,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Id *string `json:"id,omitempty"`
	MacAddress *string `json:"mac_address,omitempty"`
	Media *ModelsDeviceOutputFullMedia `json:"media,omitempty"`
	MusicOnHold *ModelsMusicOnHold `json:"music_on_hold,omitempty"`
	Name *string `json:"name,omitempty"`
	OwnerId *string `json:"owner_id,omitempty"`
	Provision *ModelsDeviceOutputFullProvision `json:"provision,omitempty"`
	Sip *ModelsDeviceOutputFullSIP `json:"sip,omitempty"`
}

// NewModelsDeviceOutputFull instantiates a new ModelsDeviceOutputFull object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsDeviceOutputFull() *ModelsDeviceOutputFull {
	this := ModelsDeviceOutputFull{}
	return &this
}

// NewModelsDeviceOutputFullWithDefaults instantiates a new ModelsDeviceOutputFull object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsDeviceOutputFullWithDefaults() *ModelsDeviceOutputFull {
	this := ModelsDeviceOutputFull{}
	return &this
}

// GetCallForward returns the CallForward field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFull) GetCallForward() ModelsCallForward {
	if o == nil || IsNil(o.CallForward) {
		var ret ModelsCallForward
		return ret
	}
	return *o.CallForward
}

// GetCallForwardOk returns a tuple with the CallForward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFull) GetCallForwardOk() (*ModelsCallForward, bool) {
	if o == nil || IsNil(o.CallForward) {
		return nil, false
	}
	return o.CallForward, true
}

// HasCallForward returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFull) HasCallForward() bool {
	if o != nil && !IsNil(o.CallForward) {
		return true
	}

	return false
}

// SetCallForward gets a reference to the given ModelsCallForward and assigns it to the CallForward field.
func (o *ModelsDeviceOutputFull) SetCallForward(v ModelsCallForward) {
	o.CallForward = &v
}

// GetCallRecording returns the CallRecording field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFull) GetCallRecording() ModelsCallRecordingSettings {
	if o == nil || IsNil(o.CallRecording) {
		var ret ModelsCallRecordingSettings
		return ret
	}
	return *o.CallRecording
}

// GetCallRecordingOk returns a tuple with the CallRecording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFull) GetCallRecordingOk() (*ModelsCallRecordingSettings, bool) {
	if o == nil || IsNil(o.CallRecording) {
		return nil, false
	}
	return o.CallRecording, true
}

// HasCallRecording returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFull) HasCallRecording() bool {
	if o != nil && !IsNil(o.CallRecording) {
		return true
	}

	return false
}

// SetCallRecording gets a reference to the given ModelsCallRecordingSettings and assigns it to the CallRecording field.
func (o *ModelsDeviceOutputFull) SetCallRecording(v ModelsCallRecordingSettings) {
	o.CallRecording = &v
}

// GetCallerId returns the CallerId field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFull) GetCallerId() ModelsDeviceOutputFullCallerid {
	if o == nil || IsNil(o.CallerId) {
		var ret ModelsDeviceOutputFullCallerid
		return ret
	}
	return *o.CallerId
}

// GetCallerIdOk returns a tuple with the CallerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFull) GetCallerIdOk() (*ModelsDeviceOutputFullCallerid, bool) {
	if o == nil || IsNil(o.CallerId) {
		return nil, false
	}
	return o.CallerId, true
}

// HasCallerId returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFull) HasCallerId() bool {
	if o != nil && !IsNil(o.CallerId) {
		return true
	}

	return false
}

// SetCallerId gets a reference to the given ModelsDeviceOutputFullCallerid and assigns it to the CallerId field.
func (o *ModelsDeviceOutputFull) SetCallerId(v ModelsDeviceOutputFullCallerid) {
	o.CallerId = &v
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFull) GetDeviceType() string {
	if o == nil || IsNil(o.DeviceType) {
		var ret string
		return ret
	}
	return *o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFull) GetDeviceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceType) {
		return nil, false
	}
	return o.DeviceType, true
}

// HasDeviceType returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFull) HasDeviceType() bool {
	if o != nil && !IsNil(o.DeviceType) {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given string and assigns it to the DeviceType field.
func (o *ModelsDeviceOutputFull) SetDeviceType(v string) {
	o.DeviceType = &v
}

// GetDoNotDisturb returns the DoNotDisturb field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFull) GetDoNotDisturb() ModelsVOIPSharedDoNotDisturb {
	if o == nil || IsNil(o.DoNotDisturb) {
		var ret ModelsVOIPSharedDoNotDisturb
		return ret
	}
	return *o.DoNotDisturb
}

// GetDoNotDisturbOk returns a tuple with the DoNotDisturb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFull) GetDoNotDisturbOk() (*ModelsVOIPSharedDoNotDisturb, bool) {
	if o == nil || IsNil(o.DoNotDisturb) {
		return nil, false
	}
	return o.DoNotDisturb, true
}

// HasDoNotDisturb returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFull) HasDoNotDisturb() bool {
	if o != nil && !IsNil(o.DoNotDisturb) {
		return true
	}

	return false
}

// SetDoNotDisturb gets a reference to the given ModelsVOIPSharedDoNotDisturb and assigns it to the DoNotDisturb field.
func (o *ModelsDeviceOutputFull) SetDoNotDisturb(v ModelsVOIPSharedDoNotDisturb) {
	o.DoNotDisturb = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFull) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFull) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFull) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ModelsDeviceOutputFull) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFull) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFull) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFull) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsDeviceOutputFull) SetId(v string) {
	o.Id = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFull) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress) {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFull) GetMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFull) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *ModelsDeviceOutputFull) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetMedia returns the Media field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFull) GetMedia() ModelsDeviceOutputFullMedia {
	if o == nil || IsNil(o.Media) {
		var ret ModelsDeviceOutputFullMedia
		return ret
	}
	return *o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFull) GetMediaOk() (*ModelsDeviceOutputFullMedia, bool) {
	if o == nil || IsNil(o.Media) {
		return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFull) HasMedia() bool {
	if o != nil && !IsNil(o.Media) {
		return true
	}

	return false
}

// SetMedia gets a reference to the given ModelsDeviceOutputFullMedia and assigns it to the Media field.
func (o *ModelsDeviceOutputFull) SetMedia(v ModelsDeviceOutputFullMedia) {
	o.Media = &v
}

// GetMusicOnHold returns the MusicOnHold field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFull) GetMusicOnHold() ModelsMusicOnHold {
	if o == nil || IsNil(o.MusicOnHold) {
		var ret ModelsMusicOnHold
		return ret
	}
	return *o.MusicOnHold
}

// GetMusicOnHoldOk returns a tuple with the MusicOnHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFull) GetMusicOnHoldOk() (*ModelsMusicOnHold, bool) {
	if o == nil || IsNil(o.MusicOnHold) {
		return nil, false
	}
	return o.MusicOnHold, true
}

// HasMusicOnHold returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFull) HasMusicOnHold() bool {
	if o != nil && !IsNil(o.MusicOnHold) {
		return true
	}

	return false
}

// SetMusicOnHold gets a reference to the given ModelsMusicOnHold and assigns it to the MusicOnHold field.
func (o *ModelsDeviceOutputFull) SetMusicOnHold(v ModelsMusicOnHold) {
	o.MusicOnHold = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFull) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFull) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFull) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelsDeviceOutputFull) SetName(v string) {
	o.Name = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFull) GetOwnerId() string {
	if o == nil || IsNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFull) GetOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFull) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *ModelsDeviceOutputFull) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetProvision returns the Provision field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFull) GetProvision() ModelsDeviceOutputFullProvision {
	if o == nil || IsNil(o.Provision) {
		var ret ModelsDeviceOutputFullProvision
		return ret
	}
	return *o.Provision
}

// GetProvisionOk returns a tuple with the Provision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFull) GetProvisionOk() (*ModelsDeviceOutputFullProvision, bool) {
	if o == nil || IsNil(o.Provision) {
		return nil, false
	}
	return o.Provision, true
}

// HasProvision returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFull) HasProvision() bool {
	if o != nil && !IsNil(o.Provision) {
		return true
	}

	return false
}

// SetProvision gets a reference to the given ModelsDeviceOutputFullProvision and assigns it to the Provision field.
func (o *ModelsDeviceOutputFull) SetProvision(v ModelsDeviceOutputFullProvision) {
	o.Provision = &v
}

// GetSip returns the Sip field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFull) GetSip() ModelsDeviceOutputFullSIP {
	if o == nil || IsNil(o.Sip) {
		var ret ModelsDeviceOutputFullSIP
		return ret
	}
	return *o.Sip
}

// GetSipOk returns a tuple with the Sip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFull) GetSipOk() (*ModelsDeviceOutputFullSIP, bool) {
	if o == nil || IsNil(o.Sip) {
		return nil, false
	}
	return o.Sip, true
}

// HasSip returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFull) HasSip() bool {
	if o != nil && !IsNil(o.Sip) {
		return true
	}

	return false
}

// SetSip gets a reference to the given ModelsDeviceOutputFullSIP and assigns it to the Sip field.
func (o *ModelsDeviceOutputFull) SetSip(v ModelsDeviceOutputFullSIP) {
	o.Sip = &v
}

func (o ModelsDeviceOutputFull) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsDeviceOutputFull) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallForward) {
		toSerialize["call_forward"] = o.CallForward
	}
	if !IsNil(o.CallRecording) {
		toSerialize["call_recording"] = o.CallRecording
	}
	if !IsNil(o.CallerId) {
		toSerialize["caller_id"] = o.CallerId
	}
	if !IsNil(o.DeviceType) {
		toSerialize["device_type"] = o.DeviceType
	}
	if !IsNil(o.DoNotDisturb) {
		toSerialize["do_not_disturb"] = o.DoNotDisturb
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MacAddress) {
		toSerialize["mac_address"] = o.MacAddress
	}
	if !IsNil(o.Media) {
		toSerialize["media"] = o.Media
	}
	if !IsNil(o.MusicOnHold) {
		toSerialize["music_on_hold"] = o.MusicOnHold
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.Provision) {
		toSerialize["provision"] = o.Provision
	}
	if !IsNil(o.Sip) {
		toSerialize["sip"] = o.Sip
	}
	return toSerialize, nil
}

type NullableModelsDeviceOutputFull struct {
	value *ModelsDeviceOutputFull
	isSet bool
}

func (v NullableModelsDeviceOutputFull) Get() *ModelsDeviceOutputFull {
	return v.value
}

func (v *NullableModelsDeviceOutputFull) Set(val *ModelsDeviceOutputFull) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsDeviceOutputFull) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsDeviceOutputFull) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsDeviceOutputFull(val *ModelsDeviceOutputFull) *NullableModelsDeviceOutputFull {
	return &NullableModelsDeviceOutputFull{value: val, isSet: true}
}

func (v NullableModelsDeviceOutputFull) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsDeviceOutputFull) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


