/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceStoragePlanDatabase type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceStoragePlanDatabase{}

// ServiceStoragePlanDatabase struct for ServiceStoragePlanDatabase
type ServiceStoragePlanDatabase struct {
	Attachments *ServiceStoragePlanDatabaseAttachment `json:"attachments,omitempty"`
	Connection *string `json:"connection,omitempty"`
	Database *ServiceStoragePlanDatabaseProperties `json:"database,omitempty"`
	Types *ServiceStoragePlanDatabaseTypes `json:"types,omitempty"`
}

// NewServiceStoragePlanDatabase instantiates a new ServiceStoragePlanDatabase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceStoragePlanDatabase() *ServiceStoragePlanDatabase {
	this := ServiceStoragePlanDatabase{}
	return &this
}

// NewServiceStoragePlanDatabaseWithDefaults instantiates a new ServiceStoragePlanDatabase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceStoragePlanDatabaseWithDefaults() *ServiceStoragePlanDatabase {
	this := ServiceStoragePlanDatabase{}
	return &this
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *ServiceStoragePlanDatabase) GetAttachments() ServiceStoragePlanDatabaseAttachment {
	if o == nil || IsNil(o.Attachments) {
		var ret ServiceStoragePlanDatabaseAttachment
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStoragePlanDatabase) GetAttachmentsOk() (*ServiceStoragePlanDatabaseAttachment, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *ServiceStoragePlanDatabase) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given ServiceStoragePlanDatabaseAttachment and assigns it to the Attachments field.
func (o *ServiceStoragePlanDatabase) SetAttachments(v ServiceStoragePlanDatabaseAttachment) {
	o.Attachments = &v
}

// GetConnection returns the Connection field value if set, zero value otherwise.
func (o *ServiceStoragePlanDatabase) GetConnection() string {
	if o == nil || IsNil(o.Connection) {
		var ret string
		return ret
	}
	return *o.Connection
}

// GetConnectionOk returns a tuple with the Connection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStoragePlanDatabase) GetConnectionOk() (*string, bool) {
	if o == nil || IsNil(o.Connection) {
		return nil, false
	}
	return o.Connection, true
}

// HasConnection returns a boolean if a field has been set.
func (o *ServiceStoragePlanDatabase) HasConnection() bool {
	if o != nil && !IsNil(o.Connection) {
		return true
	}

	return false
}

// SetConnection gets a reference to the given string and assigns it to the Connection field.
func (o *ServiceStoragePlanDatabase) SetConnection(v string) {
	o.Connection = &v
}

// GetDatabase returns the Database field value if set, zero value otherwise.
func (o *ServiceStoragePlanDatabase) GetDatabase() ServiceStoragePlanDatabaseProperties {
	if o == nil || IsNil(o.Database) {
		var ret ServiceStoragePlanDatabaseProperties
		return ret
	}
	return *o.Database
}

// GetDatabaseOk returns a tuple with the Database field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStoragePlanDatabase) GetDatabaseOk() (*ServiceStoragePlanDatabaseProperties, bool) {
	if o == nil || IsNil(o.Database) {
		return nil, false
	}
	return o.Database, true
}

// HasDatabase returns a boolean if a field has been set.
func (o *ServiceStoragePlanDatabase) HasDatabase() bool {
	if o != nil && !IsNil(o.Database) {
		return true
	}

	return false
}

// SetDatabase gets a reference to the given ServiceStoragePlanDatabaseProperties and assigns it to the Database field.
func (o *ServiceStoragePlanDatabase) SetDatabase(v ServiceStoragePlanDatabaseProperties) {
	o.Database = &v
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *ServiceStoragePlanDatabase) GetTypes() ServiceStoragePlanDatabaseTypes {
	if o == nil || IsNil(o.Types) {
		var ret ServiceStoragePlanDatabaseTypes
		return ret
	}
	return *o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStoragePlanDatabase) GetTypesOk() (*ServiceStoragePlanDatabaseTypes, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *ServiceStoragePlanDatabase) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given ServiceStoragePlanDatabaseTypes and assigns it to the Types field.
func (o *ServiceStoragePlanDatabase) SetTypes(v ServiceStoragePlanDatabaseTypes) {
	o.Types = &v
}

func (o ServiceStoragePlanDatabase) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceStoragePlanDatabase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.Connection) {
		toSerialize["connection"] = o.Connection
	}
	if !IsNil(o.Database) {
		toSerialize["database"] = o.Database
	}
	if !IsNil(o.Types) {
		toSerialize["types"] = o.Types
	}
	return toSerialize, nil
}

type NullableServiceStoragePlanDatabase struct {
	value *ServiceStoragePlanDatabase
	isSet bool
}

func (v NullableServiceStoragePlanDatabase) Get() *ServiceStoragePlanDatabase {
	return v.value
}

func (v *NullableServiceStoragePlanDatabase) Set(val *ServiceStoragePlanDatabase) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceStoragePlanDatabase) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceStoragePlanDatabase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceStoragePlanDatabase(val *ServiceStoragePlanDatabase) *NullableServiceStoragePlanDatabase {
	return &NullableServiceStoragePlanDatabase{value: val, isSet: true}
}

func (v NullableServiceStoragePlanDatabase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceStoragePlanDatabase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


