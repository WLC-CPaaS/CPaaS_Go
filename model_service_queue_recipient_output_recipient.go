/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceQueueRecipientOutputRecipient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceQueueRecipientOutputRecipient{}

// ServiceQueueRecipientOutputRecipient struct for ServiceQueueRecipientOutputRecipient
type ServiceQueueRecipientOutputRecipient struct {
	Features *ServiceQueueRecipientOutputRecipientFeatures `json:"features,omitempty"`
}

// NewServiceQueueRecipientOutputRecipient instantiates a new ServiceQueueRecipientOutputRecipient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceQueueRecipientOutputRecipient() *ServiceQueueRecipientOutputRecipient {
	this := ServiceQueueRecipientOutputRecipient{}
	return &this
}

// NewServiceQueueRecipientOutputRecipientWithDefaults instantiates a new ServiceQueueRecipientOutputRecipient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceQueueRecipientOutputRecipientWithDefaults() *ServiceQueueRecipientOutputRecipient {
	this := ServiceQueueRecipientOutputRecipient{}
	return &this
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *ServiceQueueRecipientOutputRecipient) GetFeatures() ServiceQueueRecipientOutputRecipientFeatures {
	if o == nil || IsNil(o.Features) {
		var ret ServiceQueueRecipientOutputRecipientFeatures
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceQueueRecipientOutputRecipient) GetFeaturesOk() (*ServiceQueueRecipientOutputRecipientFeatures, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *ServiceQueueRecipientOutputRecipient) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given ServiceQueueRecipientOutputRecipientFeatures and assigns it to the Features field.
func (o *ServiceQueueRecipientOutputRecipient) SetFeatures(v ServiceQueueRecipientOutputRecipientFeatures) {
	o.Features = &v
}

func (o ServiceQueueRecipientOutputRecipient) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceQueueRecipientOutputRecipient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	return toSerialize, nil
}

type NullableServiceQueueRecipientOutputRecipient struct {
	value *ServiceQueueRecipientOutputRecipient
	isSet bool
}

func (v NullableServiceQueueRecipientOutputRecipient) Get() *ServiceQueueRecipientOutputRecipient {
	return v.value
}

func (v *NullableServiceQueueRecipientOutputRecipient) Set(val *ServiceQueueRecipientOutputRecipient) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceQueueRecipientOutputRecipient) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceQueueRecipientOutputRecipient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceQueueRecipientOutputRecipient(val *ServiceQueueRecipientOutputRecipient) *NullableServiceQueueRecipientOutputRecipient {
	return &NullableServiceQueueRecipientOutputRecipient{value: val, isSet: true}
}

func (v NullableServiceQueueRecipientOutputRecipient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceQueueRecipientOutputRecipient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


