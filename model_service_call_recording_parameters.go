/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceCallRecordingParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceCallRecordingParameters{}

// ServiceCallRecordingParameters struct for ServiceCallRecordingParameters
type ServiceCallRecordingParameters struct {
	Enabled *bool `json:"enabled,omitempty"`
	Format *string `json:"format,omitempty"`
	RecordMinSec *int32 `json:"record_min_sec,omitempty"`
	RecordOnAnswer *bool `json:"record_on_answer,omitempty"`
	RecordOnBridge *bool `json:"record_on_bridge,omitempty"`
	RecordSampleRate *int32 `json:"record_sample_rate,omitempty"`
	TimeLimit *int32 `json:"time_limit,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewServiceCallRecordingParameters instantiates a new ServiceCallRecordingParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceCallRecordingParameters() *ServiceCallRecordingParameters {
	this := ServiceCallRecordingParameters{}
	return &this
}

// NewServiceCallRecordingParametersWithDefaults instantiates a new ServiceCallRecordingParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceCallRecordingParametersWithDefaults() *ServiceCallRecordingParameters {
	this := ServiceCallRecordingParameters{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ServiceCallRecordingParameters) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingParameters) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ServiceCallRecordingParameters) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ServiceCallRecordingParameters) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *ServiceCallRecordingParameters) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingParameters) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *ServiceCallRecordingParameters) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *ServiceCallRecordingParameters) SetFormat(v string) {
	o.Format = &v
}

// GetRecordMinSec returns the RecordMinSec field value if set, zero value otherwise.
func (o *ServiceCallRecordingParameters) GetRecordMinSec() int32 {
	if o == nil || IsNil(o.RecordMinSec) {
		var ret int32
		return ret
	}
	return *o.RecordMinSec
}

// GetRecordMinSecOk returns a tuple with the RecordMinSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingParameters) GetRecordMinSecOk() (*int32, bool) {
	if o == nil || IsNil(o.RecordMinSec) {
		return nil, false
	}
	return o.RecordMinSec, true
}

// HasRecordMinSec returns a boolean if a field has been set.
func (o *ServiceCallRecordingParameters) HasRecordMinSec() bool {
	if o != nil && !IsNil(o.RecordMinSec) {
		return true
	}

	return false
}

// SetRecordMinSec gets a reference to the given int32 and assigns it to the RecordMinSec field.
func (o *ServiceCallRecordingParameters) SetRecordMinSec(v int32) {
	o.RecordMinSec = &v
}

// GetRecordOnAnswer returns the RecordOnAnswer field value if set, zero value otherwise.
func (o *ServiceCallRecordingParameters) GetRecordOnAnswer() bool {
	if o == nil || IsNil(o.RecordOnAnswer) {
		var ret bool
		return ret
	}
	return *o.RecordOnAnswer
}

// GetRecordOnAnswerOk returns a tuple with the RecordOnAnswer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingParameters) GetRecordOnAnswerOk() (*bool, bool) {
	if o == nil || IsNil(o.RecordOnAnswer) {
		return nil, false
	}
	return o.RecordOnAnswer, true
}

// HasRecordOnAnswer returns a boolean if a field has been set.
func (o *ServiceCallRecordingParameters) HasRecordOnAnswer() bool {
	if o != nil && !IsNil(o.RecordOnAnswer) {
		return true
	}

	return false
}

// SetRecordOnAnswer gets a reference to the given bool and assigns it to the RecordOnAnswer field.
func (o *ServiceCallRecordingParameters) SetRecordOnAnswer(v bool) {
	o.RecordOnAnswer = &v
}

// GetRecordOnBridge returns the RecordOnBridge field value if set, zero value otherwise.
func (o *ServiceCallRecordingParameters) GetRecordOnBridge() bool {
	if o == nil || IsNil(o.RecordOnBridge) {
		var ret bool
		return ret
	}
	return *o.RecordOnBridge
}

// GetRecordOnBridgeOk returns a tuple with the RecordOnBridge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingParameters) GetRecordOnBridgeOk() (*bool, bool) {
	if o == nil || IsNil(o.RecordOnBridge) {
		return nil, false
	}
	return o.RecordOnBridge, true
}

// HasRecordOnBridge returns a boolean if a field has been set.
func (o *ServiceCallRecordingParameters) HasRecordOnBridge() bool {
	if o != nil && !IsNil(o.RecordOnBridge) {
		return true
	}

	return false
}

// SetRecordOnBridge gets a reference to the given bool and assigns it to the RecordOnBridge field.
func (o *ServiceCallRecordingParameters) SetRecordOnBridge(v bool) {
	o.RecordOnBridge = &v
}

// GetRecordSampleRate returns the RecordSampleRate field value if set, zero value otherwise.
func (o *ServiceCallRecordingParameters) GetRecordSampleRate() int32 {
	if o == nil || IsNil(o.RecordSampleRate) {
		var ret int32
		return ret
	}
	return *o.RecordSampleRate
}

// GetRecordSampleRateOk returns a tuple with the RecordSampleRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingParameters) GetRecordSampleRateOk() (*int32, bool) {
	if o == nil || IsNil(o.RecordSampleRate) {
		return nil, false
	}
	return o.RecordSampleRate, true
}

// HasRecordSampleRate returns a boolean if a field has been set.
func (o *ServiceCallRecordingParameters) HasRecordSampleRate() bool {
	if o != nil && !IsNil(o.RecordSampleRate) {
		return true
	}

	return false
}

// SetRecordSampleRate gets a reference to the given int32 and assigns it to the RecordSampleRate field.
func (o *ServiceCallRecordingParameters) SetRecordSampleRate(v int32) {
	o.RecordSampleRate = &v
}

// GetTimeLimit returns the TimeLimit field value if set, zero value otherwise.
func (o *ServiceCallRecordingParameters) GetTimeLimit() int32 {
	if o == nil || IsNil(o.TimeLimit) {
		var ret int32
		return ret
	}
	return *o.TimeLimit
}

// GetTimeLimitOk returns a tuple with the TimeLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingParameters) GetTimeLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeLimit) {
		return nil, false
	}
	return o.TimeLimit, true
}

// HasTimeLimit returns a boolean if a field has been set.
func (o *ServiceCallRecordingParameters) HasTimeLimit() bool {
	if o != nil && !IsNil(o.TimeLimit) {
		return true
	}

	return false
}

// SetTimeLimit gets a reference to the given int32 and assigns it to the TimeLimit field.
func (o *ServiceCallRecordingParameters) SetTimeLimit(v int32) {
	o.TimeLimit = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ServiceCallRecordingParameters) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingParameters) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ServiceCallRecordingParameters) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ServiceCallRecordingParameters) SetUrl(v string) {
	o.Url = &v
}

func (o ServiceCallRecordingParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceCallRecordingParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.RecordMinSec) {
		toSerialize["record_min_sec"] = o.RecordMinSec
	}
	if !IsNil(o.RecordOnAnswer) {
		toSerialize["record_on_answer"] = o.RecordOnAnswer
	}
	if !IsNil(o.RecordOnBridge) {
		toSerialize["record_on_bridge"] = o.RecordOnBridge
	}
	if !IsNil(o.RecordSampleRate) {
		toSerialize["record_sample_rate"] = o.RecordSampleRate
	}
	if !IsNil(o.TimeLimit) {
		toSerialize["time_limit"] = o.TimeLimit
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableServiceCallRecordingParameters struct {
	value *ServiceCallRecordingParameters
	isSet bool
}

func (v NullableServiceCallRecordingParameters) Get() *ServiceCallRecordingParameters {
	return v.value
}

func (v *NullableServiceCallRecordingParameters) Set(val *ServiceCallRecordingParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceCallRecordingParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceCallRecordingParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceCallRecordingParameters(val *ServiceCallRecordingParameters) *NullableServiceCallRecordingParameters {
	return &NullableServiceCallRecordingParameters{value: val, isSet: true}
}

func (v NullableServiceCallRecordingParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceCallRecordingParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


