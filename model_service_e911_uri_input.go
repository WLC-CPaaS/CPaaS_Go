/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceE911URIInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceE911URIInput{}

// ServiceE911URIInput struct for ServiceE911URIInput
type ServiceE911URIInput struct {
	CallerName string `json:"callerName"`
	Uri string `json:"uri"`
}

type _ServiceE911URIInput ServiceE911URIInput

// NewServiceE911URIInput instantiates a new ServiceE911URIInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceE911URIInput(callerName string, uri string) *ServiceE911URIInput {
	this := ServiceE911URIInput{}
	this.CallerName = callerName
	this.Uri = uri
	return &this
}

// NewServiceE911URIInputWithDefaults instantiates a new ServiceE911URIInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceE911URIInputWithDefaults() *ServiceE911URIInput {
	this := ServiceE911URIInput{}
	return &this
}

// GetCallerName returns the CallerName field value
func (o *ServiceE911URIInput) GetCallerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallerName
}

// GetCallerNameOk returns a tuple with the CallerName field value
// and a boolean to check if the value has been set.
func (o *ServiceE911URIInput) GetCallerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CallerName, true
}

// SetCallerName sets field value
func (o *ServiceE911URIInput) SetCallerName(v string) {
	o.CallerName = v
}

// GetUri returns the Uri field value
func (o *ServiceE911URIInput) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *ServiceE911URIInput) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *ServiceE911URIInput) SetUri(v string) {
	o.Uri = v
}

func (o ServiceE911URIInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceE911URIInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["callerName"] = o.CallerName
	toSerialize["uri"] = o.Uri
	return toSerialize, nil
}

func (o *ServiceE911URIInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"callerName",
		"uri",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceE911URIInput := _ServiceE911URIInput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceE911URIInput)

	if err != nil {
		return err
	}

	*o = ServiceE911URIInput(varServiceE911URIInput)

	return err
}

type NullableServiceE911URIInput struct {
	value *ServiceE911URIInput
	isSet bool
}

func (v NullableServiceE911URIInput) Get() *ServiceE911URIInput {
	return v.value
}

func (v *NullableServiceE911URIInput) Set(val *ServiceE911URIInput) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceE911URIInput) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceE911URIInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceE911URIInput(val *ServiceE911URIInput) *NullableServiceE911URIInput {
	return &NullableServiceE911URIInput{value: val, isSet: true}
}

func (v NullableServiceE911URIInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceE911URIInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


