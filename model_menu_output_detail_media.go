/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MenuOutputDetailMedia type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MenuOutputDetailMedia{}

// MenuOutputDetailMedia struct for MenuOutputDetailMedia
type MenuOutputDetailMedia struct {
	// The ID of a media object that should be used as the menu greeting
	Greeting *string `json:"greeting,omitempty"`
	// When the collected digits don't result in a match or hunt this media can be played
	InvalidMedia map[string]interface{} `json:"invalid_media,omitempty"`
	// When a call is transferred from the menu, either after all retries exhausted or a successful hunt, this media can be played
	TransferMedia map[string]interface{} `json:"transfer_media,omitempty"`
}

// NewMenuOutputDetailMedia instantiates a new MenuOutputDetailMedia object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMenuOutputDetailMedia() *MenuOutputDetailMedia {
	this := MenuOutputDetailMedia{}
	return &this
}

// NewMenuOutputDetailMediaWithDefaults instantiates a new MenuOutputDetailMedia object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMenuOutputDetailMediaWithDefaults() *MenuOutputDetailMedia {
	this := MenuOutputDetailMedia{}
	return &this
}

// GetGreeting returns the Greeting field value if set, zero value otherwise.
func (o *MenuOutputDetailMedia) GetGreeting() string {
	if o == nil || IsNil(o.Greeting) {
		var ret string
		return ret
	}
	return *o.Greeting
}

// GetGreetingOk returns a tuple with the Greeting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuOutputDetailMedia) GetGreetingOk() (*string, bool) {
	if o == nil || IsNil(o.Greeting) {
		return nil, false
	}
	return o.Greeting, true
}

// HasGreeting returns a boolean if a field has been set.
func (o *MenuOutputDetailMedia) HasGreeting() bool {
	if o != nil && !IsNil(o.Greeting) {
		return true
	}

	return false
}

// SetGreeting gets a reference to the given string and assigns it to the Greeting field.
func (o *MenuOutputDetailMedia) SetGreeting(v string) {
	o.Greeting = &v
}

// GetInvalidMedia returns the InvalidMedia field value if set, zero value otherwise.
func (o *MenuOutputDetailMedia) GetInvalidMedia() map[string]interface{} {
	if o == nil || IsNil(o.InvalidMedia) {
		var ret map[string]interface{}
		return ret
	}
	return o.InvalidMedia
}

// GetInvalidMediaOk returns a tuple with the InvalidMedia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuOutputDetailMedia) GetInvalidMediaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.InvalidMedia) {
		return map[string]interface{}{}, false
	}
	return o.InvalidMedia, true
}

// HasInvalidMedia returns a boolean if a field has been set.
func (o *MenuOutputDetailMedia) HasInvalidMedia() bool {
	if o != nil && !IsNil(o.InvalidMedia) {
		return true
	}

	return false
}

// SetInvalidMedia gets a reference to the given map[string]interface{} and assigns it to the InvalidMedia field.
func (o *MenuOutputDetailMedia) SetInvalidMedia(v map[string]interface{}) {
	o.InvalidMedia = v
}

// GetTransferMedia returns the TransferMedia field value if set, zero value otherwise.
func (o *MenuOutputDetailMedia) GetTransferMedia() map[string]interface{} {
	if o == nil || IsNil(o.TransferMedia) {
		var ret map[string]interface{}
		return ret
	}
	return o.TransferMedia
}

// GetTransferMediaOk returns a tuple with the TransferMedia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuOutputDetailMedia) GetTransferMediaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.TransferMedia) {
		return map[string]interface{}{}, false
	}
	return o.TransferMedia, true
}

// HasTransferMedia returns a boolean if a field has been set.
func (o *MenuOutputDetailMedia) HasTransferMedia() bool {
	if o != nil && !IsNil(o.TransferMedia) {
		return true
	}

	return false
}

// SetTransferMedia gets a reference to the given map[string]interface{} and assigns it to the TransferMedia field.
func (o *MenuOutputDetailMedia) SetTransferMedia(v map[string]interface{}) {
	o.TransferMedia = v
}

func (o MenuOutputDetailMedia) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MenuOutputDetailMedia) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Greeting) {
		toSerialize["greeting"] = o.Greeting
	}
	if !IsNil(o.InvalidMedia) {
		toSerialize["invalid_media"] = o.InvalidMedia
	}
	if !IsNil(o.TransferMedia) {
		toSerialize["transfer_media"] = o.TransferMedia
	}
	return toSerialize, nil
}

type NullableMenuOutputDetailMedia struct {
	value *MenuOutputDetailMedia
	isSet bool
}

func (v NullableMenuOutputDetailMedia) Get() *MenuOutputDetailMedia {
	return v.value
}

func (v *NullableMenuOutputDetailMedia) Set(val *MenuOutputDetailMedia) {
	v.value = val
	v.isSet = true
}

func (v NullableMenuOutputDetailMedia) IsSet() bool {
	return v.isSet
}

func (v *NullableMenuOutputDetailMedia) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMenuOutputDetailMedia(val *MenuOutputDetailMedia) *NullableMenuOutputDetailMedia {
	return &NullableMenuOutputDetailMedia{value: val, isSet: true}
}

func (v NullableMenuOutputDetailMedia) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMenuOutputDetailMedia) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


