/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceUserOutputFull type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceUserOutputFull{}

// ServiceUserOutputFull struct for ServiceUserOutputFull
type ServiceUserOutputFull struct {
	CallForward *ServiceCallForward `json:"call_forward,omitempty"`
	CallRecording *ServiceCallRecordingSettings `json:"call_recording,omitempty"`
	DoNotDisturb *ServiceVOIPSharedDoNotDisturb `json:"do_not_disturb,omitempty"`
	Email *string `json:"email,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	FirstName *string `json:"first_name,omitempty"`
	Id *string `json:"id,omitempty"`
	LastName *string `json:"last_name,omitempty"`
	MusicOnHold *ServiceMusicOnHold `json:"music_on_hold,omitempty"`
	PresenceId *string `json:"presence_id,omitempty"`
	Timezone *string `json:"timezone,omitempty"`
	Verified *bool `json:"verified,omitempty"`
}

// NewServiceUserOutputFull instantiates a new ServiceUserOutputFull object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceUserOutputFull() *ServiceUserOutputFull {
	this := ServiceUserOutputFull{}
	return &this
}

// NewServiceUserOutputFullWithDefaults instantiates a new ServiceUserOutputFull object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceUserOutputFullWithDefaults() *ServiceUserOutputFull {
	this := ServiceUserOutputFull{}
	return &this
}

// GetCallForward returns the CallForward field value if set, zero value otherwise.
func (o *ServiceUserOutputFull) GetCallForward() ServiceCallForward {
	if o == nil || IsNil(o.CallForward) {
		var ret ServiceCallForward
		return ret
	}
	return *o.CallForward
}

// GetCallForwardOk returns a tuple with the CallForward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputFull) GetCallForwardOk() (*ServiceCallForward, bool) {
	if o == nil || IsNil(o.CallForward) {
		return nil, false
	}
	return o.CallForward, true
}

// HasCallForward returns a boolean if a field has been set.
func (o *ServiceUserOutputFull) HasCallForward() bool {
	if o != nil && !IsNil(o.CallForward) {
		return true
	}

	return false
}

// SetCallForward gets a reference to the given ServiceCallForward and assigns it to the CallForward field.
func (o *ServiceUserOutputFull) SetCallForward(v ServiceCallForward) {
	o.CallForward = &v
}

// GetCallRecording returns the CallRecording field value if set, zero value otherwise.
func (o *ServiceUserOutputFull) GetCallRecording() ServiceCallRecordingSettings {
	if o == nil || IsNil(o.CallRecording) {
		var ret ServiceCallRecordingSettings
		return ret
	}
	return *o.CallRecording
}

// GetCallRecordingOk returns a tuple with the CallRecording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputFull) GetCallRecordingOk() (*ServiceCallRecordingSettings, bool) {
	if o == nil || IsNil(o.CallRecording) {
		return nil, false
	}
	return o.CallRecording, true
}

// HasCallRecording returns a boolean if a field has been set.
func (o *ServiceUserOutputFull) HasCallRecording() bool {
	if o != nil && !IsNil(o.CallRecording) {
		return true
	}

	return false
}

// SetCallRecording gets a reference to the given ServiceCallRecordingSettings and assigns it to the CallRecording field.
func (o *ServiceUserOutputFull) SetCallRecording(v ServiceCallRecordingSettings) {
	o.CallRecording = &v
}

// GetDoNotDisturb returns the DoNotDisturb field value if set, zero value otherwise.
func (o *ServiceUserOutputFull) GetDoNotDisturb() ServiceVOIPSharedDoNotDisturb {
	if o == nil || IsNil(o.DoNotDisturb) {
		var ret ServiceVOIPSharedDoNotDisturb
		return ret
	}
	return *o.DoNotDisturb
}

// GetDoNotDisturbOk returns a tuple with the DoNotDisturb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputFull) GetDoNotDisturbOk() (*ServiceVOIPSharedDoNotDisturb, bool) {
	if o == nil || IsNil(o.DoNotDisturb) {
		return nil, false
	}
	return o.DoNotDisturb, true
}

// HasDoNotDisturb returns a boolean if a field has been set.
func (o *ServiceUserOutputFull) HasDoNotDisturb() bool {
	if o != nil && !IsNil(o.DoNotDisturb) {
		return true
	}

	return false
}

// SetDoNotDisturb gets a reference to the given ServiceVOIPSharedDoNotDisturb and assigns it to the DoNotDisturb field.
func (o *ServiceUserOutputFull) SetDoNotDisturb(v ServiceVOIPSharedDoNotDisturb) {
	o.DoNotDisturb = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ServiceUserOutputFull) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputFull) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ServiceUserOutputFull) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ServiceUserOutputFull) SetEmail(v string) {
	o.Email = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ServiceUserOutputFull) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputFull) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ServiceUserOutputFull) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ServiceUserOutputFull) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *ServiceUserOutputFull) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputFull) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *ServiceUserOutputFull) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *ServiceUserOutputFull) SetFirstName(v string) {
	o.FirstName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceUserOutputFull) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputFull) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceUserOutputFull) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServiceUserOutputFull) SetId(v string) {
	o.Id = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *ServiceUserOutputFull) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputFull) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *ServiceUserOutputFull) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *ServiceUserOutputFull) SetLastName(v string) {
	o.LastName = &v
}

// GetMusicOnHold returns the MusicOnHold field value if set, zero value otherwise.
func (o *ServiceUserOutputFull) GetMusicOnHold() ServiceMusicOnHold {
	if o == nil || IsNil(o.MusicOnHold) {
		var ret ServiceMusicOnHold
		return ret
	}
	return *o.MusicOnHold
}

// GetMusicOnHoldOk returns a tuple with the MusicOnHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputFull) GetMusicOnHoldOk() (*ServiceMusicOnHold, bool) {
	if o == nil || IsNil(o.MusicOnHold) {
		return nil, false
	}
	return o.MusicOnHold, true
}

// HasMusicOnHold returns a boolean if a field has been set.
func (o *ServiceUserOutputFull) HasMusicOnHold() bool {
	if o != nil && !IsNil(o.MusicOnHold) {
		return true
	}

	return false
}

// SetMusicOnHold gets a reference to the given ServiceMusicOnHold and assigns it to the MusicOnHold field.
func (o *ServiceUserOutputFull) SetMusicOnHold(v ServiceMusicOnHold) {
	o.MusicOnHold = &v
}

// GetPresenceId returns the PresenceId field value if set, zero value otherwise.
func (o *ServiceUserOutputFull) GetPresenceId() string {
	if o == nil || IsNil(o.PresenceId) {
		var ret string
		return ret
	}
	return *o.PresenceId
}

// GetPresenceIdOk returns a tuple with the PresenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputFull) GetPresenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.PresenceId) {
		return nil, false
	}
	return o.PresenceId, true
}

// HasPresenceId returns a boolean if a field has been set.
func (o *ServiceUserOutputFull) HasPresenceId() bool {
	if o != nil && !IsNil(o.PresenceId) {
		return true
	}

	return false
}

// SetPresenceId gets a reference to the given string and assigns it to the PresenceId field.
func (o *ServiceUserOutputFull) SetPresenceId(v string) {
	o.PresenceId = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *ServiceUserOutputFull) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputFull) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *ServiceUserOutputFull) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *ServiceUserOutputFull) SetTimezone(v string) {
	o.Timezone = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *ServiceUserOutputFull) GetVerified() bool {
	if o == nil || IsNil(o.Verified) {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUserOutputFull) GetVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.Verified) {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *ServiceUserOutputFull) HasVerified() bool {
	if o != nil && !IsNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *ServiceUserOutputFull) SetVerified(v bool) {
	o.Verified = &v
}

func (o ServiceUserOutputFull) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceUserOutputFull) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallForward) {
		toSerialize["call_forward"] = o.CallForward
	}
	if !IsNil(o.CallRecording) {
		toSerialize["call_recording"] = o.CallRecording
	}
	if !IsNil(o.DoNotDisturb) {
		toSerialize["do_not_disturb"] = o.DoNotDisturb
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.MusicOnHold) {
		toSerialize["music_on_hold"] = o.MusicOnHold
	}
	if !IsNil(o.PresenceId) {
		toSerialize["presence_id"] = o.PresenceId
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	return toSerialize, nil
}

type NullableServiceUserOutputFull struct {
	value *ServiceUserOutputFull
	isSet bool
}

func (v NullableServiceUserOutputFull) Get() *ServiceUserOutputFull {
	return v.value
}

func (v *NullableServiceUserOutputFull) Set(val *ServiceUserOutputFull) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceUserOutputFull) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceUserOutputFull) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceUserOutputFull(val *ServiceUserOutputFull) *NullableServiceUserOutputFull {
	return &NullableServiceUserOutputFull{value: val, isSet: true}
}

func (v NullableServiceUserOutputFull) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceUserOutputFull) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


