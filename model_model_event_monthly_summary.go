/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelEventMonthlySummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelEventMonthlySummary{}

// ModelEventMonthlySummary struct for ModelEventMonthlySummary
type ModelEventMonthlySummary struct {
	AccountId *string `json:"account_id,omitempty"`
	Component *string `json:"component,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	TransactionCount *int32 `json:"transaction_count,omitempty"`
	TransactionMonth *int32 `json:"transaction_month,omitempty"`
	TransactionYear *int32 `json:"transaction_year,omitempty"`
}

// NewModelEventMonthlySummary instantiates a new ModelEventMonthlySummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelEventMonthlySummary() *ModelEventMonthlySummary {
	this := ModelEventMonthlySummary{}
	return &this
}

// NewModelEventMonthlySummaryWithDefaults instantiates a new ModelEventMonthlySummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelEventMonthlySummaryWithDefaults() *ModelEventMonthlySummary {
	this := ModelEventMonthlySummary{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ModelEventMonthlySummary) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEventMonthlySummary) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ModelEventMonthlySummary) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *ModelEventMonthlySummary) SetAccountId(v string) {
	o.AccountId = &v
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *ModelEventMonthlySummary) GetComponent() string {
	if o == nil || IsNil(o.Component) {
		var ret string
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEventMonthlySummary) GetComponentOk() (*string, bool) {
	if o == nil || IsNil(o.Component) {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *ModelEventMonthlySummary) HasComponent() bool {
	if o != nil && !IsNil(o.Component) {
		return true
	}

	return false
}

// SetComponent gets a reference to the given string and assigns it to the Component field.
func (o *ModelEventMonthlySummary) SetComponent(v string) {
	o.Component = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelEventMonthlySummary) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEventMonthlySummary) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelEventMonthlySummary) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelEventMonthlySummary) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetTransactionCount returns the TransactionCount field value if set, zero value otherwise.
func (o *ModelEventMonthlySummary) GetTransactionCount() int32 {
	if o == nil || IsNil(o.TransactionCount) {
		var ret int32
		return ret
	}
	return *o.TransactionCount
}

// GetTransactionCountOk returns a tuple with the TransactionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEventMonthlySummary) GetTransactionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TransactionCount) {
		return nil, false
	}
	return o.TransactionCount, true
}

// HasTransactionCount returns a boolean if a field has been set.
func (o *ModelEventMonthlySummary) HasTransactionCount() bool {
	if o != nil && !IsNil(o.TransactionCount) {
		return true
	}

	return false
}

// SetTransactionCount gets a reference to the given int32 and assigns it to the TransactionCount field.
func (o *ModelEventMonthlySummary) SetTransactionCount(v int32) {
	o.TransactionCount = &v
}

// GetTransactionMonth returns the TransactionMonth field value if set, zero value otherwise.
func (o *ModelEventMonthlySummary) GetTransactionMonth() int32 {
	if o == nil || IsNil(o.TransactionMonth) {
		var ret int32
		return ret
	}
	return *o.TransactionMonth
}

// GetTransactionMonthOk returns a tuple with the TransactionMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEventMonthlySummary) GetTransactionMonthOk() (*int32, bool) {
	if o == nil || IsNil(o.TransactionMonth) {
		return nil, false
	}
	return o.TransactionMonth, true
}

// HasTransactionMonth returns a boolean if a field has been set.
func (o *ModelEventMonthlySummary) HasTransactionMonth() bool {
	if o != nil && !IsNil(o.TransactionMonth) {
		return true
	}

	return false
}

// SetTransactionMonth gets a reference to the given int32 and assigns it to the TransactionMonth field.
func (o *ModelEventMonthlySummary) SetTransactionMonth(v int32) {
	o.TransactionMonth = &v
}

// GetTransactionYear returns the TransactionYear field value if set, zero value otherwise.
func (o *ModelEventMonthlySummary) GetTransactionYear() int32 {
	if o == nil || IsNil(o.TransactionYear) {
		var ret int32
		return ret
	}
	return *o.TransactionYear
}

// GetTransactionYearOk returns a tuple with the TransactionYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelEventMonthlySummary) GetTransactionYearOk() (*int32, bool) {
	if o == nil || IsNil(o.TransactionYear) {
		return nil, false
	}
	return o.TransactionYear, true
}

// HasTransactionYear returns a boolean if a field has been set.
func (o *ModelEventMonthlySummary) HasTransactionYear() bool {
	if o != nil && !IsNil(o.TransactionYear) {
		return true
	}

	return false
}

// SetTransactionYear gets a reference to the given int32 and assigns it to the TransactionYear field.
func (o *ModelEventMonthlySummary) SetTransactionYear(v int32) {
	o.TransactionYear = &v
}

func (o ModelEventMonthlySummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelEventMonthlySummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.Component) {
		toSerialize["component"] = o.Component
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.TransactionCount) {
		toSerialize["transaction_count"] = o.TransactionCount
	}
	if !IsNil(o.TransactionMonth) {
		toSerialize["transaction_month"] = o.TransactionMonth
	}
	if !IsNil(o.TransactionYear) {
		toSerialize["transaction_year"] = o.TransactionYear
	}
	return toSerialize, nil
}

type NullableModelEventMonthlySummary struct {
	value *ModelEventMonthlySummary
	isSet bool
}

func (v NullableModelEventMonthlySummary) Get() *ModelEventMonthlySummary {
	return v.value
}

func (v *NullableModelEventMonthlySummary) Set(val *ModelEventMonthlySummary) {
	v.value = val
	v.isSet = true
}

func (v NullableModelEventMonthlySummary) IsSet() bool {
	return v.isSet
}

func (v *NullableModelEventMonthlySummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelEventMonthlySummary(val *ModelEventMonthlySummary) *NullableModelEventMonthlySummary {
	return &NullableModelEventMonthlySummary{value: val, isSet: true}
}

func (v NullableModelEventMonthlySummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelEventMonthlySummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


