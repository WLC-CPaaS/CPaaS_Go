/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceVOIPSharedDoNotDisturb type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceVOIPSharedDoNotDisturb{}

// ServiceVOIPSharedDoNotDisturb struct for ServiceVOIPSharedDoNotDisturb
type ServiceVOIPSharedDoNotDisturb struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// NewServiceVOIPSharedDoNotDisturb instantiates a new ServiceVOIPSharedDoNotDisturb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceVOIPSharedDoNotDisturb() *ServiceVOIPSharedDoNotDisturb {
	this := ServiceVOIPSharedDoNotDisturb{}
	return &this
}

// NewServiceVOIPSharedDoNotDisturbWithDefaults instantiates a new ServiceVOIPSharedDoNotDisturb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceVOIPSharedDoNotDisturbWithDefaults() *ServiceVOIPSharedDoNotDisturb {
	this := ServiceVOIPSharedDoNotDisturb{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ServiceVOIPSharedDoNotDisturb) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPSharedDoNotDisturb) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ServiceVOIPSharedDoNotDisturb) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ServiceVOIPSharedDoNotDisturb) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o ServiceVOIPSharedDoNotDisturb) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceVOIPSharedDoNotDisturb) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableServiceVOIPSharedDoNotDisturb struct {
	value *ServiceVOIPSharedDoNotDisturb
	isSet bool
}

func (v NullableServiceVOIPSharedDoNotDisturb) Get() *ServiceVOIPSharedDoNotDisturb {
	return v.value
}

func (v *NullableServiceVOIPSharedDoNotDisturb) Set(val *ServiceVOIPSharedDoNotDisturb) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceVOIPSharedDoNotDisturb) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceVOIPSharedDoNotDisturb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceVOIPSharedDoNotDisturb(val *ServiceVOIPSharedDoNotDisturb) *NullableServiceVOIPSharedDoNotDisturb {
	return &NullableServiceVOIPSharedDoNotDisturb{value: val, isSet: true}
}

func (v NullableServiceVOIPSharedDoNotDisturb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceVOIPSharedDoNotDisturb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


