/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceCallflowOutputFull type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceCallflowOutputFull{}

// ServiceCallflowOutputFull struct for ServiceCallflowOutputFull
type ServiceCallflowOutputFull struct {
	Featurecode *ServiceFeatureCode `json:"featurecode,omitempty"`
	Flow ServiceCallflowAddEditFlowData `json:"flow"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Numbers []string `json:"numbers"`
	Patterns []string `json:"patterns"`
}

type _ServiceCallflowOutputFull ServiceCallflowOutputFull

// NewServiceCallflowOutputFull instantiates a new ServiceCallflowOutputFull object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceCallflowOutputFull(flow ServiceCallflowAddEditFlowData, numbers []string, patterns []string) *ServiceCallflowOutputFull {
	this := ServiceCallflowOutputFull{}
	this.Flow = flow
	this.Numbers = numbers
	this.Patterns = patterns
	return &this
}

// NewServiceCallflowOutputFullWithDefaults instantiates a new ServiceCallflowOutputFull object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceCallflowOutputFullWithDefaults() *ServiceCallflowOutputFull {
	this := ServiceCallflowOutputFull{}
	return &this
}

// GetFeaturecode returns the Featurecode field value if set, zero value otherwise.
func (o *ServiceCallflowOutputFull) GetFeaturecode() ServiceFeatureCode {
	if o == nil || IsNil(o.Featurecode) {
		var ret ServiceFeatureCode
		return ret
	}
	return *o.Featurecode
}

// GetFeaturecodeOk returns a tuple with the Featurecode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallflowOutputFull) GetFeaturecodeOk() (*ServiceFeatureCode, bool) {
	if o == nil || IsNil(o.Featurecode) {
		return nil, false
	}
	return o.Featurecode, true
}

// HasFeaturecode returns a boolean if a field has been set.
func (o *ServiceCallflowOutputFull) HasFeaturecode() bool {
	if o != nil && !IsNil(o.Featurecode) {
		return true
	}

	return false
}

// SetFeaturecode gets a reference to the given ServiceFeatureCode and assigns it to the Featurecode field.
func (o *ServiceCallflowOutputFull) SetFeaturecode(v ServiceFeatureCode) {
	o.Featurecode = &v
}

// GetFlow returns the Flow field value
func (o *ServiceCallflowOutputFull) GetFlow() ServiceCallflowAddEditFlowData {
	if o == nil {
		var ret ServiceCallflowAddEditFlowData
		return ret
	}

	return o.Flow
}

// GetFlowOk returns a tuple with the Flow field value
// and a boolean to check if the value has been set.
func (o *ServiceCallflowOutputFull) GetFlowOk() (*ServiceCallflowAddEditFlowData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Flow, true
}

// SetFlow sets field value
func (o *ServiceCallflowOutputFull) SetFlow(v ServiceCallflowAddEditFlowData) {
	o.Flow = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceCallflowOutputFull) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallflowOutputFull) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceCallflowOutputFull) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServiceCallflowOutputFull) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServiceCallflowOutputFull) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallflowOutputFull) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServiceCallflowOutputFull) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServiceCallflowOutputFull) SetName(v string) {
	o.Name = &v
}

// GetNumbers returns the Numbers field value
func (o *ServiceCallflowOutputFull) GetNumbers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Numbers
}

// GetNumbersOk returns a tuple with the Numbers field value
// and a boolean to check if the value has been set.
func (o *ServiceCallflowOutputFull) GetNumbersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Numbers, true
}

// SetNumbers sets field value
func (o *ServiceCallflowOutputFull) SetNumbers(v []string) {
	o.Numbers = v
}

// GetPatterns returns the Patterns field value
func (o *ServiceCallflowOutputFull) GetPatterns() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Patterns
}

// GetPatternsOk returns a tuple with the Patterns field value
// and a boolean to check if the value has been set.
func (o *ServiceCallflowOutputFull) GetPatternsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Patterns, true
}

// SetPatterns sets field value
func (o *ServiceCallflowOutputFull) SetPatterns(v []string) {
	o.Patterns = v
}

func (o ServiceCallflowOutputFull) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceCallflowOutputFull) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Featurecode) {
		toSerialize["featurecode"] = o.Featurecode
	}
	toSerialize["flow"] = o.Flow
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["numbers"] = o.Numbers
	toSerialize["patterns"] = o.Patterns
	return toSerialize, nil
}

func (o *ServiceCallflowOutputFull) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"flow",
		"numbers",
		"patterns",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceCallflowOutputFull := _ServiceCallflowOutputFull{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceCallflowOutputFull)

	if err != nil {
		return err
	}

	*o = ServiceCallflowOutputFull(varServiceCallflowOutputFull)

	return err
}

type NullableServiceCallflowOutputFull struct {
	value *ServiceCallflowOutputFull
	isSet bool
}

func (v NullableServiceCallflowOutputFull) Get() *ServiceCallflowOutputFull {
	return v.value
}

func (v *NullableServiceCallflowOutputFull) Set(val *ServiceCallflowOutputFull) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceCallflowOutputFull) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceCallflowOutputFull) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceCallflowOutputFull(val *ServiceCallflowOutputFull) *NullableServiceCallflowOutputFull {
	return &NullableServiceCallflowOutputFull{value: val, isSet: true}
}

func (v NullableServiceCallflowOutputFull) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceCallflowOutputFull) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


