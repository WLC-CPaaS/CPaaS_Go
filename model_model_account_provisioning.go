/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAccountProvisioning type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAccountProvisioning{}

// ModelAccountProvisioning struct for ModelAccountProvisioning
type ModelAccountProvisioning struct {
	AccountId *string `json:"account_id,omitempty"`
	Password *string `json:"password,omitempty"`
	ProvisioningUrl *string `json:"provisioning_url,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewModelAccountProvisioning instantiates a new ModelAccountProvisioning object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAccountProvisioning() *ModelAccountProvisioning {
	this := ModelAccountProvisioning{}
	return &this
}

// NewModelAccountProvisioningWithDefaults instantiates a new ModelAccountProvisioning object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAccountProvisioningWithDefaults() *ModelAccountProvisioning {
	this := ModelAccountProvisioning{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ModelAccountProvisioning) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAccountProvisioning) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ModelAccountProvisioning) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *ModelAccountProvisioning) SetAccountId(v string) {
	o.AccountId = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ModelAccountProvisioning) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAccountProvisioning) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ModelAccountProvisioning) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ModelAccountProvisioning) SetPassword(v string) {
	o.Password = &v
}

// GetProvisioningUrl returns the ProvisioningUrl field value if set, zero value otherwise.
func (o *ModelAccountProvisioning) GetProvisioningUrl() string {
	if o == nil || IsNil(o.ProvisioningUrl) {
		var ret string
		return ret
	}
	return *o.ProvisioningUrl
}

// GetProvisioningUrlOk returns a tuple with the ProvisioningUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAccountProvisioning) GetProvisioningUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ProvisioningUrl) {
		return nil, false
	}
	return o.ProvisioningUrl, true
}

// HasProvisioningUrl returns a boolean if a field has been set.
func (o *ModelAccountProvisioning) HasProvisioningUrl() bool {
	if o != nil && !IsNil(o.ProvisioningUrl) {
		return true
	}

	return false
}

// SetProvisioningUrl gets a reference to the given string and assigns it to the ProvisioningUrl field.
func (o *ModelAccountProvisioning) SetProvisioningUrl(v string) {
	o.ProvisioningUrl = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ModelAccountProvisioning) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAccountProvisioning) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ModelAccountProvisioning) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ModelAccountProvisioning) SetUsername(v string) {
	o.Username = &v
}

func (o ModelAccountProvisioning) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAccountProvisioning) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.ProvisioningUrl) {
		toSerialize["provisioning_url"] = o.ProvisioningUrl
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableModelAccountProvisioning struct {
	value *ModelAccountProvisioning
	isSet bool
}

func (v NullableModelAccountProvisioning) Get() *ModelAccountProvisioning {
	return v.value
}

func (v *NullableModelAccountProvisioning) Set(val *ModelAccountProvisioning) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAccountProvisioning) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAccountProvisioning) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAccountProvisioning(val *ModelAccountProvisioning) *NullableModelAccountProvisioning {
	return &NullableModelAccountProvisioning{value: val, isSet: true}
}

func (v NullableModelAccountProvisioning) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAccountProvisioning) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


