/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelsTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsTemplate{}

// ModelsTemplate struct for ModelsTemplate
type ModelsTemplate struct {
	BrandName *string `json:"brand_name,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	FamilyName *string `json:"family_name,omitempty"`
	FirmwareId *string `json:"firmware_id,omitempty"`
	FirmwareVersion *string `json:"firmware_version,omitempty"`
	Id *string `json:"id,omitempty"`
	IsActive *bool `json:"is_active,omitempty"`
	ModelName *string `json:"model_name,omitempty"`
	TemplateName *string `json:"template_name,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewModelsTemplate instantiates a new ModelsTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsTemplate() *ModelsTemplate {
	this := ModelsTemplate{}
	return &this
}

// NewModelsTemplateWithDefaults instantiates a new ModelsTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsTemplateWithDefaults() *ModelsTemplate {
	this := ModelsTemplate{}
	return &this
}

// GetBrandName returns the BrandName field value if set, zero value otherwise.
func (o *ModelsTemplate) GetBrandName() string {
	if o == nil || IsNil(o.BrandName) {
		var ret string
		return ret
	}
	return *o.BrandName
}

// GetBrandNameOk returns a tuple with the BrandName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplate) GetBrandNameOk() (*string, bool) {
	if o == nil || IsNil(o.BrandName) {
		return nil, false
	}
	return o.BrandName, true
}

// HasBrandName returns a boolean if a field has been set.
func (o *ModelsTemplate) HasBrandName() bool {
	if o != nil && !IsNil(o.BrandName) {
		return true
	}

	return false
}

// SetBrandName gets a reference to the given string and assigns it to the BrandName field.
func (o *ModelsTemplate) SetBrandName(v string) {
	o.BrandName = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsTemplate) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplate) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsTemplate) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsTemplate) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise.
func (o *ModelsTemplate) GetFamilyName() string {
	if o == nil || IsNil(o.FamilyName) {
		var ret string
		return ret
	}
	return *o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplate) GetFamilyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FamilyName) {
		return nil, false
	}
	return o.FamilyName, true
}

// HasFamilyName returns a boolean if a field has been set.
func (o *ModelsTemplate) HasFamilyName() bool {
	if o != nil && !IsNil(o.FamilyName) {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given string and assigns it to the FamilyName field.
func (o *ModelsTemplate) SetFamilyName(v string) {
	o.FamilyName = &v
}

// GetFirmwareId returns the FirmwareId field value if set, zero value otherwise.
func (o *ModelsTemplate) GetFirmwareId() string {
	if o == nil || IsNil(o.FirmwareId) {
		var ret string
		return ret
	}
	return *o.FirmwareId
}

// GetFirmwareIdOk returns a tuple with the FirmwareId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplate) GetFirmwareIdOk() (*string, bool) {
	if o == nil || IsNil(o.FirmwareId) {
		return nil, false
	}
	return o.FirmwareId, true
}

// HasFirmwareId returns a boolean if a field has been set.
func (o *ModelsTemplate) HasFirmwareId() bool {
	if o != nil && !IsNil(o.FirmwareId) {
		return true
	}

	return false
}

// SetFirmwareId gets a reference to the given string and assigns it to the FirmwareId field.
func (o *ModelsTemplate) SetFirmwareId(v string) {
	o.FirmwareId = &v
}

// GetFirmwareVersion returns the FirmwareVersion field value if set, zero value otherwise.
func (o *ModelsTemplate) GetFirmwareVersion() string {
	if o == nil || IsNil(o.FirmwareVersion) {
		var ret string
		return ret
	}
	return *o.FirmwareVersion
}

// GetFirmwareVersionOk returns a tuple with the FirmwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplate) GetFirmwareVersionOk() (*string, bool) {
	if o == nil || IsNil(o.FirmwareVersion) {
		return nil, false
	}
	return o.FirmwareVersion, true
}

// HasFirmwareVersion returns a boolean if a field has been set.
func (o *ModelsTemplate) HasFirmwareVersion() bool {
	if o != nil && !IsNil(o.FirmwareVersion) {
		return true
	}

	return false
}

// SetFirmwareVersion gets a reference to the given string and assigns it to the FirmwareVersion field.
func (o *ModelsTemplate) SetFirmwareVersion(v string) {
	o.FirmwareVersion = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsTemplate) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplate) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsTemplate) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsTemplate) SetId(v string) {
	o.Id = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *ModelsTemplate) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplate) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *ModelsTemplate) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *ModelsTemplate) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetModelName returns the ModelName field value if set, zero value otherwise.
func (o *ModelsTemplate) GetModelName() string {
	if o == nil || IsNil(o.ModelName) {
		var ret string
		return ret
	}
	return *o.ModelName
}

// GetModelNameOk returns a tuple with the ModelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplate) GetModelNameOk() (*string, bool) {
	if o == nil || IsNil(o.ModelName) {
		return nil, false
	}
	return o.ModelName, true
}

// HasModelName returns a boolean if a field has been set.
func (o *ModelsTemplate) HasModelName() bool {
	if o != nil && !IsNil(o.ModelName) {
		return true
	}

	return false
}

// SetModelName gets a reference to the given string and assigns it to the ModelName field.
func (o *ModelsTemplate) SetModelName(v string) {
	o.ModelName = &v
}

// GetTemplateName returns the TemplateName field value if set, zero value otherwise.
func (o *ModelsTemplate) GetTemplateName() string {
	if o == nil || IsNil(o.TemplateName) {
		var ret string
		return ret
	}
	return *o.TemplateName
}

// GetTemplateNameOk returns a tuple with the TemplateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplate) GetTemplateNameOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateName) {
		return nil, false
	}
	return o.TemplateName, true
}

// HasTemplateName returns a boolean if a field has been set.
func (o *ModelsTemplate) HasTemplateName() bool {
	if o != nil && !IsNil(o.TemplateName) {
		return true
	}

	return false
}

// SetTemplateName gets a reference to the given string and assigns it to the TemplateName field.
func (o *ModelsTemplate) SetTemplateName(v string) {
	o.TemplateName = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsTemplate) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplate) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsTemplate) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsTemplate) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o ModelsTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BrandName) {
		toSerialize["brand_name"] = o.BrandName
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.FamilyName) {
		toSerialize["family_name"] = o.FamilyName
	}
	if !IsNil(o.FirmwareId) {
		toSerialize["firmware_id"] = o.FirmwareId
	}
	if !IsNil(o.FirmwareVersion) {
		toSerialize["firmware_version"] = o.FirmwareVersion
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsActive) {
		toSerialize["is_active"] = o.IsActive
	}
	if !IsNil(o.ModelName) {
		toSerialize["model_name"] = o.ModelName
	}
	if !IsNil(o.TemplateName) {
		toSerialize["template_name"] = o.TemplateName
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableModelsTemplate struct {
	value *ModelsTemplate
	isSet bool
}

func (v NullableModelsTemplate) Get() *ModelsTemplate {
	return v.value
}

func (v *NullableModelsTemplate) Set(val *ModelsTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsTemplate(val *ModelsTemplate) *NullableModelsTemplate {
	return &NullableModelsTemplate{value: val, isSet: true}
}

func (v NullableModelsTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


