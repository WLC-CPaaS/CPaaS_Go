/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceMetaflowOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceMetaflowOutput{}

// ServiceMetaflowOutput struct for ServiceMetaflowOutput
type ServiceMetaflowOutput struct {
	BindingDigit *string `json:"binding_digit,omitempty"`
	Numbers *map[string]ServiceMetaflowPattern `json:"numbers,omitempty"`
	Patterns *map[string]ServiceMetaflowPattern `json:"patterns,omitempty"`
}

// NewServiceMetaflowOutput instantiates a new ServiceMetaflowOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceMetaflowOutput() *ServiceMetaflowOutput {
	this := ServiceMetaflowOutput{}
	return &this
}

// NewServiceMetaflowOutputWithDefaults instantiates a new ServiceMetaflowOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceMetaflowOutputWithDefaults() *ServiceMetaflowOutput {
	this := ServiceMetaflowOutput{}
	return &this
}

// GetBindingDigit returns the BindingDigit field value if set, zero value otherwise.
func (o *ServiceMetaflowOutput) GetBindingDigit() string {
	if o == nil || IsNil(o.BindingDigit) {
		var ret string
		return ret
	}
	return *o.BindingDigit
}

// GetBindingDigitOk returns a tuple with the BindingDigit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceMetaflowOutput) GetBindingDigitOk() (*string, bool) {
	if o == nil || IsNil(o.BindingDigit) {
		return nil, false
	}
	return o.BindingDigit, true
}

// HasBindingDigit returns a boolean if a field has been set.
func (o *ServiceMetaflowOutput) HasBindingDigit() bool {
	if o != nil && !IsNil(o.BindingDigit) {
		return true
	}

	return false
}

// SetBindingDigit gets a reference to the given string and assigns it to the BindingDigit field.
func (o *ServiceMetaflowOutput) SetBindingDigit(v string) {
	o.BindingDigit = &v
}

// GetNumbers returns the Numbers field value if set, zero value otherwise.
func (o *ServiceMetaflowOutput) GetNumbers() map[string]ServiceMetaflowPattern {
	if o == nil || IsNil(o.Numbers) {
		var ret map[string]ServiceMetaflowPattern
		return ret
	}
	return *o.Numbers
}

// GetNumbersOk returns a tuple with the Numbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceMetaflowOutput) GetNumbersOk() (*map[string]ServiceMetaflowPattern, bool) {
	if o == nil || IsNil(o.Numbers) {
		return nil, false
	}
	return o.Numbers, true
}

// HasNumbers returns a boolean if a field has been set.
func (o *ServiceMetaflowOutput) HasNumbers() bool {
	if o != nil && !IsNil(o.Numbers) {
		return true
	}

	return false
}

// SetNumbers gets a reference to the given map[string]ServiceMetaflowPattern and assigns it to the Numbers field.
func (o *ServiceMetaflowOutput) SetNumbers(v map[string]ServiceMetaflowPattern) {
	o.Numbers = &v
}

// GetPatterns returns the Patterns field value if set, zero value otherwise.
func (o *ServiceMetaflowOutput) GetPatterns() map[string]ServiceMetaflowPattern {
	if o == nil || IsNil(o.Patterns) {
		var ret map[string]ServiceMetaflowPattern
		return ret
	}
	return *o.Patterns
}

// GetPatternsOk returns a tuple with the Patterns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceMetaflowOutput) GetPatternsOk() (*map[string]ServiceMetaflowPattern, bool) {
	if o == nil || IsNil(o.Patterns) {
		return nil, false
	}
	return o.Patterns, true
}

// HasPatterns returns a boolean if a field has been set.
func (o *ServiceMetaflowOutput) HasPatterns() bool {
	if o != nil && !IsNil(o.Patterns) {
		return true
	}

	return false
}

// SetPatterns gets a reference to the given map[string]ServiceMetaflowPattern and assigns it to the Patterns field.
func (o *ServiceMetaflowOutput) SetPatterns(v map[string]ServiceMetaflowPattern) {
	o.Patterns = &v
}

func (o ServiceMetaflowOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceMetaflowOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BindingDigit) {
		toSerialize["binding_digit"] = o.BindingDigit
	}
	if !IsNil(o.Numbers) {
		toSerialize["numbers"] = o.Numbers
	}
	if !IsNil(o.Patterns) {
		toSerialize["patterns"] = o.Patterns
	}
	return toSerialize, nil
}

type NullableServiceMetaflowOutput struct {
	value *ServiceMetaflowOutput
	isSet bool
}

func (v NullableServiceMetaflowOutput) Get() *ServiceMetaflowOutput {
	return v.value
}

func (v *NullableServiceMetaflowOutput) Set(val *ServiceMetaflowOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceMetaflowOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceMetaflowOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceMetaflowOutput(val *ServiceMetaflowOutput) *NullableServiceMetaflowOutput {
	return &NullableServiceMetaflowOutput{value: val, isSet: true}
}

func (v NullableServiceMetaflowOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceMetaflowOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


