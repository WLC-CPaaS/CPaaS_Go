/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceVOIPImpersonateUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceVOIPImpersonateUser{}

// ServiceVOIPImpersonateUser struct for ServiceVOIPImpersonateUser
type ServiceVOIPImpersonateUser struct {
	Action string `json:"action"`
	Data map[string]interface{} `json:"data,omitempty"`
}

type _ServiceVOIPImpersonateUser ServiceVOIPImpersonateUser

// NewServiceVOIPImpersonateUser instantiates a new ServiceVOIPImpersonateUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceVOIPImpersonateUser(action string) *ServiceVOIPImpersonateUser {
	this := ServiceVOIPImpersonateUser{}
	this.Action = action
	return &this
}

// NewServiceVOIPImpersonateUserWithDefaults instantiates a new ServiceVOIPImpersonateUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceVOIPImpersonateUserWithDefaults() *ServiceVOIPImpersonateUser {
	this := ServiceVOIPImpersonateUser{}
	return &this
}

// GetAction returns the Action field value
func (o *ServiceVOIPImpersonateUser) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ServiceVOIPImpersonateUser) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ServiceVOIPImpersonateUser) SetAction(v string) {
	o.Action = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ServiceVOIPImpersonateUser) GetData() map[string]interface{} {
	if o == nil || IsNil(o.Data) {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPImpersonateUser) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ServiceVOIPImpersonateUser) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *ServiceVOIPImpersonateUser) SetData(v map[string]interface{}) {
	o.Data = v
}

func (o ServiceVOIPImpersonateUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceVOIPImpersonateUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

func (o *ServiceVOIPImpersonateUser) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceVOIPImpersonateUser := _ServiceVOIPImpersonateUser{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceVOIPImpersonateUser)

	if err != nil {
		return err
	}

	*o = ServiceVOIPImpersonateUser(varServiceVOIPImpersonateUser)

	return err
}

type NullableServiceVOIPImpersonateUser struct {
	value *ServiceVOIPImpersonateUser
	isSet bool
}

func (v NullableServiceVOIPImpersonateUser) Get() *ServiceVOIPImpersonateUser {
	return v.value
}

func (v *NullableServiceVOIPImpersonateUser) Set(val *ServiceVOIPImpersonateUser) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceVOIPImpersonateUser) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceVOIPImpersonateUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceVOIPImpersonateUser(val *ServiceVOIPImpersonateUser) *NullableServiceVOIPImpersonateUser {
	return &NullableServiceVOIPImpersonateUser{value: val, isSet: true}
}

func (v NullableServiceVOIPImpersonateUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceVOIPImpersonateUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


