/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceTemporalRuleOutputFull type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceTemporalRuleOutputFull{}

// ServiceTemporalRuleOutputFull struct for ServiceTemporalRuleOutputFull
type ServiceTemporalRuleOutputFull struct {
	Cycle *string `json:"cycle,omitempty"`
	Days []int32 `json:"days,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Id *string `json:"id,omitempty"`
	Interval *int32 `json:"interval,omitempty"`
	Month *int32 `json:"month,omitempty"`
	Name *string `json:"name,omitempty"`
	Ordinal *string `json:"ordinal,omitempty"`
	StartDate *int32 `json:"start_date,omitempty"`
	TimeWindowStart *int32 `json:"time_window_start,omitempty"`
	TimeWindowStop *int32 `json:"time_window_stop,omitempty"`
	Wdays []string `json:"wdays,omitempty"`
}

// NewServiceTemporalRuleOutputFull instantiates a new ServiceTemporalRuleOutputFull object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceTemporalRuleOutputFull() *ServiceTemporalRuleOutputFull {
	this := ServiceTemporalRuleOutputFull{}
	return &this
}

// NewServiceTemporalRuleOutputFullWithDefaults instantiates a new ServiceTemporalRuleOutputFull object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceTemporalRuleOutputFullWithDefaults() *ServiceTemporalRuleOutputFull {
	this := ServiceTemporalRuleOutputFull{}
	return &this
}

// GetCycle returns the Cycle field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputFull) GetCycle() string {
	if o == nil || IsNil(o.Cycle) {
		var ret string
		return ret
	}
	return *o.Cycle
}

// GetCycleOk returns a tuple with the Cycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputFull) GetCycleOk() (*string, bool) {
	if o == nil || IsNil(o.Cycle) {
		return nil, false
	}
	return o.Cycle, true
}

// HasCycle returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputFull) HasCycle() bool {
	if o != nil && !IsNil(o.Cycle) {
		return true
	}

	return false
}

// SetCycle gets a reference to the given string and assigns it to the Cycle field.
func (o *ServiceTemporalRuleOutputFull) SetCycle(v string) {
	o.Cycle = &v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputFull) GetDays() []int32 {
	if o == nil || IsNil(o.Days) {
		var ret []int32
		return ret
	}
	return o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputFull) GetDaysOk() ([]int32, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputFull) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given []int32 and assigns it to the Days field.
func (o *ServiceTemporalRuleOutputFull) SetDays(v []int32) {
	o.Days = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputFull) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputFull) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputFull) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ServiceTemporalRuleOutputFull) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputFull) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputFull) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputFull) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServiceTemporalRuleOutputFull) SetId(v string) {
	o.Id = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputFull) GetInterval() int32 {
	if o == nil || IsNil(o.Interval) {
		var ret int32
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputFull) GetIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputFull) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given int32 and assigns it to the Interval field.
func (o *ServiceTemporalRuleOutputFull) SetInterval(v int32) {
	o.Interval = &v
}

// GetMonth returns the Month field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputFull) GetMonth() int32 {
	if o == nil || IsNil(o.Month) {
		var ret int32
		return ret
	}
	return *o.Month
}

// GetMonthOk returns a tuple with the Month field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputFull) GetMonthOk() (*int32, bool) {
	if o == nil || IsNil(o.Month) {
		return nil, false
	}
	return o.Month, true
}

// HasMonth returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputFull) HasMonth() bool {
	if o != nil && !IsNil(o.Month) {
		return true
	}

	return false
}

// SetMonth gets a reference to the given int32 and assigns it to the Month field.
func (o *ServiceTemporalRuleOutputFull) SetMonth(v int32) {
	o.Month = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputFull) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputFull) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputFull) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServiceTemporalRuleOutputFull) SetName(v string) {
	o.Name = &v
}

// GetOrdinal returns the Ordinal field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputFull) GetOrdinal() string {
	if o == nil || IsNil(o.Ordinal) {
		var ret string
		return ret
	}
	return *o.Ordinal
}

// GetOrdinalOk returns a tuple with the Ordinal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputFull) GetOrdinalOk() (*string, bool) {
	if o == nil || IsNil(o.Ordinal) {
		return nil, false
	}
	return o.Ordinal, true
}

// HasOrdinal returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputFull) HasOrdinal() bool {
	if o != nil && !IsNil(o.Ordinal) {
		return true
	}

	return false
}

// SetOrdinal gets a reference to the given string and assigns it to the Ordinal field.
func (o *ServiceTemporalRuleOutputFull) SetOrdinal(v string) {
	o.Ordinal = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputFull) GetStartDate() int32 {
	if o == nil || IsNil(o.StartDate) {
		var ret int32
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputFull) GetStartDateOk() (*int32, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputFull) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given int32 and assigns it to the StartDate field.
func (o *ServiceTemporalRuleOutputFull) SetStartDate(v int32) {
	o.StartDate = &v
}

// GetTimeWindowStart returns the TimeWindowStart field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputFull) GetTimeWindowStart() int32 {
	if o == nil || IsNil(o.TimeWindowStart) {
		var ret int32
		return ret
	}
	return *o.TimeWindowStart
}

// GetTimeWindowStartOk returns a tuple with the TimeWindowStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputFull) GetTimeWindowStartOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeWindowStart) {
		return nil, false
	}
	return o.TimeWindowStart, true
}

// HasTimeWindowStart returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputFull) HasTimeWindowStart() bool {
	if o != nil && !IsNil(o.TimeWindowStart) {
		return true
	}

	return false
}

// SetTimeWindowStart gets a reference to the given int32 and assigns it to the TimeWindowStart field.
func (o *ServiceTemporalRuleOutputFull) SetTimeWindowStart(v int32) {
	o.TimeWindowStart = &v
}

// GetTimeWindowStop returns the TimeWindowStop field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputFull) GetTimeWindowStop() int32 {
	if o == nil || IsNil(o.TimeWindowStop) {
		var ret int32
		return ret
	}
	return *o.TimeWindowStop
}

// GetTimeWindowStopOk returns a tuple with the TimeWindowStop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputFull) GetTimeWindowStopOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeWindowStop) {
		return nil, false
	}
	return o.TimeWindowStop, true
}

// HasTimeWindowStop returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputFull) HasTimeWindowStop() bool {
	if o != nil && !IsNil(o.TimeWindowStop) {
		return true
	}

	return false
}

// SetTimeWindowStop gets a reference to the given int32 and assigns it to the TimeWindowStop field.
func (o *ServiceTemporalRuleOutputFull) SetTimeWindowStop(v int32) {
	o.TimeWindowStop = &v
}

// GetWdays returns the Wdays field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputFull) GetWdays() []string {
	if o == nil || IsNil(o.Wdays) {
		var ret []string
		return ret
	}
	return o.Wdays
}

// GetWdaysOk returns a tuple with the Wdays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputFull) GetWdaysOk() ([]string, bool) {
	if o == nil || IsNil(o.Wdays) {
		return nil, false
	}
	return o.Wdays, true
}

// HasWdays returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputFull) HasWdays() bool {
	if o != nil && !IsNil(o.Wdays) {
		return true
	}

	return false
}

// SetWdays gets a reference to the given []string and assigns it to the Wdays field.
func (o *ServiceTemporalRuleOutputFull) SetWdays(v []string) {
	o.Wdays = v
}

func (o ServiceTemporalRuleOutputFull) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceTemporalRuleOutputFull) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cycle) {
		toSerialize["cycle"] = o.Cycle
	}
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	if !IsNil(o.Month) {
		toSerialize["month"] = o.Month
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Ordinal) {
		toSerialize["ordinal"] = o.Ordinal
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.TimeWindowStart) {
		toSerialize["time_window_start"] = o.TimeWindowStart
	}
	if !IsNil(o.TimeWindowStop) {
		toSerialize["time_window_stop"] = o.TimeWindowStop
	}
	if !IsNil(o.Wdays) {
		toSerialize["wdays"] = o.Wdays
	}
	return toSerialize, nil
}

type NullableServiceTemporalRuleOutputFull struct {
	value *ServiceTemporalRuleOutputFull
	isSet bool
}

func (v NullableServiceTemporalRuleOutputFull) Get() *ServiceTemporalRuleOutputFull {
	return v.value
}

func (v *NullableServiceTemporalRuleOutputFull) Set(val *ServiceTemporalRuleOutputFull) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceTemporalRuleOutputFull) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceTemporalRuleOutputFull) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceTemporalRuleOutputFull(val *ServiceTemporalRuleOutputFull) *NullableServiceTemporalRuleOutputFull {
	return &NullableServiceTemporalRuleOutputFull{value: val, isSet: true}
}

func (v NullableServiceTemporalRuleOutputFull) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceTemporalRuleOutputFull) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


