/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceE911AddLocationInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceE911AddLocationInput{}

// ServiceE911AddLocationInput struct for ServiceE911AddLocationInput
type ServiceE911AddLocationInput struct {
	Location *ServiceE911LocationInput `json:"location,omitempty"`
	Uri *ServiceE911URIInput `json:"uri,omitempty"`
}

// NewServiceE911AddLocationInput instantiates a new ServiceE911AddLocationInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceE911AddLocationInput() *ServiceE911AddLocationInput {
	this := ServiceE911AddLocationInput{}
	return &this
}

// NewServiceE911AddLocationInputWithDefaults instantiates a new ServiceE911AddLocationInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceE911AddLocationInputWithDefaults() *ServiceE911AddLocationInput {
	this := ServiceE911AddLocationInput{}
	return &this
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *ServiceE911AddLocationInput) GetLocation() ServiceE911LocationInput {
	if o == nil || IsNil(o.Location) {
		var ret ServiceE911LocationInput
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceE911AddLocationInput) GetLocationOk() (*ServiceE911LocationInput, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *ServiceE911AddLocationInput) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given ServiceE911LocationInput and assigns it to the Location field.
func (o *ServiceE911AddLocationInput) SetLocation(v ServiceE911LocationInput) {
	o.Location = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *ServiceE911AddLocationInput) GetUri() ServiceE911URIInput {
	if o == nil || IsNil(o.Uri) {
		var ret ServiceE911URIInput
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceE911AddLocationInput) GetUriOk() (*ServiceE911URIInput, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *ServiceE911AddLocationInput) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given ServiceE911URIInput and assigns it to the Uri field.
func (o *ServiceE911AddLocationInput) SetUri(v ServiceE911URIInput) {
	o.Uri = &v
}

func (o ServiceE911AddLocationInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceE911AddLocationInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	return toSerialize, nil
}

type NullableServiceE911AddLocationInput struct {
	value *ServiceE911AddLocationInput
	isSet bool
}

func (v NullableServiceE911AddLocationInput) Get() *ServiceE911AddLocationInput {
	return v.value
}

func (v *NullableServiceE911AddLocationInput) Set(val *ServiceE911AddLocationInput) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceE911AddLocationInput) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceE911AddLocationInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceE911AddLocationInput(val *ServiceE911AddLocationInput) *NullableServiceE911AddLocationInput {
	return &NullableServiceE911AddLocationInput{value: val, isSet: true}
}

func (v NullableServiceE911AddLocationInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceE911AddLocationInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


