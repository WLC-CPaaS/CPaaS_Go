/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceUpdateRecordTypeForAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceUpdateRecordTypeForAccount{}

// ServiceUpdateRecordTypeForAccount struct for ServiceUpdateRecordTypeForAccount
type ServiceUpdateRecordTypeForAccount struct {
	RecordType string `json:"record_type"`
}

type _ServiceUpdateRecordTypeForAccount ServiceUpdateRecordTypeForAccount

// NewServiceUpdateRecordTypeForAccount instantiates a new ServiceUpdateRecordTypeForAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceUpdateRecordTypeForAccount(recordType string) *ServiceUpdateRecordTypeForAccount {
	this := ServiceUpdateRecordTypeForAccount{}
	this.RecordType = recordType
	return &this
}

// NewServiceUpdateRecordTypeForAccountWithDefaults instantiates a new ServiceUpdateRecordTypeForAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceUpdateRecordTypeForAccountWithDefaults() *ServiceUpdateRecordTypeForAccount {
	this := ServiceUpdateRecordTypeForAccount{}
	return &this
}

// GetRecordType returns the RecordType field value
func (o *ServiceUpdateRecordTypeForAccount) GetRecordType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value
// and a boolean to check if the value has been set.
func (o *ServiceUpdateRecordTypeForAccount) GetRecordTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecordType, true
}

// SetRecordType sets field value
func (o *ServiceUpdateRecordTypeForAccount) SetRecordType(v string) {
	o.RecordType = v
}

func (o ServiceUpdateRecordTypeForAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceUpdateRecordTypeForAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["record_type"] = o.RecordType
	return toSerialize, nil
}

func (o *ServiceUpdateRecordTypeForAccount) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"record_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceUpdateRecordTypeForAccount := _ServiceUpdateRecordTypeForAccount{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceUpdateRecordTypeForAccount)

	if err != nil {
		return err
	}

	*o = ServiceUpdateRecordTypeForAccount(varServiceUpdateRecordTypeForAccount)

	return err
}

type NullableServiceUpdateRecordTypeForAccount struct {
	value *ServiceUpdateRecordTypeForAccount
	isSet bool
}

func (v NullableServiceUpdateRecordTypeForAccount) Get() *ServiceUpdateRecordTypeForAccount {
	return v.value
}

func (v *NullableServiceUpdateRecordTypeForAccount) Set(val *ServiceUpdateRecordTypeForAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceUpdateRecordTypeForAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceUpdateRecordTypeForAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceUpdateRecordTypeForAccount(val *ServiceUpdateRecordTypeForAccount) *NullableServiceUpdateRecordTypeForAccount {
	return &NullableServiceUpdateRecordTypeForAccount{value: val, isSet: true}
}

func (v NullableServiceUpdateRecordTypeForAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceUpdateRecordTypeForAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


