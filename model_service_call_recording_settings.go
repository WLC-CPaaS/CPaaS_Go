/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceCallRecordingSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceCallRecordingSettings{}

// ServiceCallRecordingSettings struct for ServiceCallRecordingSettings
type ServiceCallRecordingSettings struct {
	Any *ServiceCallRecordingSource `json:"any,omitempty"`
	Inbound *ServiceCallRecordingSource `json:"inbound,omitempty"`
	Outbound *ServiceCallRecordingSource `json:"outbound,omitempty"`
}

// NewServiceCallRecordingSettings instantiates a new ServiceCallRecordingSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceCallRecordingSettings() *ServiceCallRecordingSettings {
	this := ServiceCallRecordingSettings{}
	return &this
}

// NewServiceCallRecordingSettingsWithDefaults instantiates a new ServiceCallRecordingSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceCallRecordingSettingsWithDefaults() *ServiceCallRecordingSettings {
	this := ServiceCallRecordingSettings{}
	return &this
}

// GetAny returns the Any field value if set, zero value otherwise.
func (o *ServiceCallRecordingSettings) GetAny() ServiceCallRecordingSource {
	if o == nil || IsNil(o.Any) {
		var ret ServiceCallRecordingSource
		return ret
	}
	return *o.Any
}

// GetAnyOk returns a tuple with the Any field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingSettings) GetAnyOk() (*ServiceCallRecordingSource, bool) {
	if o == nil || IsNil(o.Any) {
		return nil, false
	}
	return o.Any, true
}

// HasAny returns a boolean if a field has been set.
func (o *ServiceCallRecordingSettings) HasAny() bool {
	if o != nil && !IsNil(o.Any) {
		return true
	}

	return false
}

// SetAny gets a reference to the given ServiceCallRecordingSource and assigns it to the Any field.
func (o *ServiceCallRecordingSettings) SetAny(v ServiceCallRecordingSource) {
	o.Any = &v
}

// GetInbound returns the Inbound field value if set, zero value otherwise.
func (o *ServiceCallRecordingSettings) GetInbound() ServiceCallRecordingSource {
	if o == nil || IsNil(o.Inbound) {
		var ret ServiceCallRecordingSource
		return ret
	}
	return *o.Inbound
}

// GetInboundOk returns a tuple with the Inbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingSettings) GetInboundOk() (*ServiceCallRecordingSource, bool) {
	if o == nil || IsNil(o.Inbound) {
		return nil, false
	}
	return o.Inbound, true
}

// HasInbound returns a boolean if a field has been set.
func (o *ServiceCallRecordingSettings) HasInbound() bool {
	if o != nil && !IsNil(o.Inbound) {
		return true
	}

	return false
}

// SetInbound gets a reference to the given ServiceCallRecordingSource and assigns it to the Inbound field.
func (o *ServiceCallRecordingSettings) SetInbound(v ServiceCallRecordingSource) {
	o.Inbound = &v
}

// GetOutbound returns the Outbound field value if set, zero value otherwise.
func (o *ServiceCallRecordingSettings) GetOutbound() ServiceCallRecordingSource {
	if o == nil || IsNil(o.Outbound) {
		var ret ServiceCallRecordingSource
		return ret
	}
	return *o.Outbound
}

// GetOutboundOk returns a tuple with the Outbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceCallRecordingSettings) GetOutboundOk() (*ServiceCallRecordingSource, bool) {
	if o == nil || IsNil(o.Outbound) {
		return nil, false
	}
	return o.Outbound, true
}

// HasOutbound returns a boolean if a field has been set.
func (o *ServiceCallRecordingSettings) HasOutbound() bool {
	if o != nil && !IsNil(o.Outbound) {
		return true
	}

	return false
}

// SetOutbound gets a reference to the given ServiceCallRecordingSource and assigns it to the Outbound field.
func (o *ServiceCallRecordingSettings) SetOutbound(v ServiceCallRecordingSource) {
	o.Outbound = &v
}

func (o ServiceCallRecordingSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceCallRecordingSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Any) {
		toSerialize["any"] = o.Any
	}
	if !IsNil(o.Inbound) {
		toSerialize["inbound"] = o.Inbound
	}
	if !IsNil(o.Outbound) {
		toSerialize["outbound"] = o.Outbound
	}
	return toSerialize, nil
}

type NullableServiceCallRecordingSettings struct {
	value *ServiceCallRecordingSettings
	isSet bool
}

func (v NullableServiceCallRecordingSettings) Get() *ServiceCallRecordingSettings {
	return v.value
}

func (v *NullableServiceCallRecordingSettings) Set(val *ServiceCallRecordingSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceCallRecordingSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceCallRecordingSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceCallRecordingSettings(val *ServiceCallRecordingSettings) *NullableServiceCallRecordingSettings {
	return &NullableServiceCallRecordingSettings{value: val, isSet: true}
}

func (v NullableServiceCallRecordingSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceCallRecordingSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


