/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceVOIPAccountLimit2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceVOIPAccountLimit2{}

// ServiceVOIPAccountLimit2 struct for ServiceVOIPAccountLimit2
type ServiceVOIPAccountLimit2 struct {
	InboundTrunks int32 `json:"inbound_trunks"`
	OutboundTrunks int32 `json:"outbound_trunks"`
	TwowayTrunks int32 `json:"twoway_trunks"`
}

type _ServiceVOIPAccountLimit2 ServiceVOIPAccountLimit2

// NewServiceVOIPAccountLimit2 instantiates a new ServiceVOIPAccountLimit2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceVOIPAccountLimit2(inboundTrunks int32, outboundTrunks int32, twowayTrunks int32) *ServiceVOIPAccountLimit2 {
	this := ServiceVOIPAccountLimit2{}
	this.InboundTrunks = inboundTrunks
	this.OutboundTrunks = outboundTrunks
	this.TwowayTrunks = twowayTrunks
	return &this
}

// NewServiceVOIPAccountLimit2WithDefaults instantiates a new ServiceVOIPAccountLimit2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceVOIPAccountLimit2WithDefaults() *ServiceVOIPAccountLimit2 {
	this := ServiceVOIPAccountLimit2{}
	return &this
}

// GetInboundTrunks returns the InboundTrunks field value
func (o *ServiceVOIPAccountLimit2) GetInboundTrunks() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InboundTrunks
}

// GetInboundTrunksOk returns a tuple with the InboundTrunks field value
// and a boolean to check if the value has been set.
func (o *ServiceVOIPAccountLimit2) GetInboundTrunksOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InboundTrunks, true
}

// SetInboundTrunks sets field value
func (o *ServiceVOIPAccountLimit2) SetInboundTrunks(v int32) {
	o.InboundTrunks = v
}

// GetOutboundTrunks returns the OutboundTrunks field value
func (o *ServiceVOIPAccountLimit2) GetOutboundTrunks() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OutboundTrunks
}

// GetOutboundTrunksOk returns a tuple with the OutboundTrunks field value
// and a boolean to check if the value has been set.
func (o *ServiceVOIPAccountLimit2) GetOutboundTrunksOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutboundTrunks, true
}

// SetOutboundTrunks sets field value
func (o *ServiceVOIPAccountLimit2) SetOutboundTrunks(v int32) {
	o.OutboundTrunks = v
}

// GetTwowayTrunks returns the TwowayTrunks field value
func (o *ServiceVOIPAccountLimit2) GetTwowayTrunks() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TwowayTrunks
}

// GetTwowayTrunksOk returns a tuple with the TwowayTrunks field value
// and a boolean to check if the value has been set.
func (o *ServiceVOIPAccountLimit2) GetTwowayTrunksOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TwowayTrunks, true
}

// SetTwowayTrunks sets field value
func (o *ServiceVOIPAccountLimit2) SetTwowayTrunks(v int32) {
	o.TwowayTrunks = v
}

func (o ServiceVOIPAccountLimit2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceVOIPAccountLimit2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["inbound_trunks"] = o.InboundTrunks
	toSerialize["outbound_trunks"] = o.OutboundTrunks
	toSerialize["twoway_trunks"] = o.TwowayTrunks
	return toSerialize, nil
}

func (o *ServiceVOIPAccountLimit2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"inbound_trunks",
		"outbound_trunks",
		"twoway_trunks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceVOIPAccountLimit2 := _ServiceVOIPAccountLimit2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceVOIPAccountLimit2)

	if err != nil {
		return err
	}

	*o = ServiceVOIPAccountLimit2(varServiceVOIPAccountLimit2)

	return err
}

type NullableServiceVOIPAccountLimit2 struct {
	value *ServiceVOIPAccountLimit2
	isSet bool
}

func (v NullableServiceVOIPAccountLimit2) Get() *ServiceVOIPAccountLimit2 {
	return v.value
}

func (v *NullableServiceVOIPAccountLimit2) Set(val *ServiceVOIPAccountLimit2) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceVOIPAccountLimit2) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceVOIPAccountLimit2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceVOIPAccountLimit2(val *ServiceVOIPAccountLimit2) *NullableServiceVOIPAccountLimit2 {
	return &NullableServiceVOIPAccountLimit2{value: val, isSet: true}
}

func (v NullableServiceVOIPAccountLimit2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceVOIPAccountLimit2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


