/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelInvoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelInvoice{}

// ModelInvoice struct for ModelInvoice
type ModelInvoice struct {
	ApiCallCost *float32 `json:"api_call_cost,omitempty"`
	ApiCallCount *int32 `json:"api_call_count,omitempty"`
	CallMinuteCost *float32 `json:"call_minute_cost,omitempty"`
	CallMinuteCount *int32 `json:"call_minute_count,omitempty"`
	InvoiceCost *float32 `json:"invoice_cost,omitempty"`
	Month *int32 `json:"month,omitempty"`
	Year *int32 `json:"year,omitempty"`
}

// NewModelInvoice instantiates a new ModelInvoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelInvoice() *ModelInvoice {
	this := ModelInvoice{}
	return &this
}

// NewModelInvoiceWithDefaults instantiates a new ModelInvoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelInvoiceWithDefaults() *ModelInvoice {
	this := ModelInvoice{}
	return &this
}

// GetApiCallCost returns the ApiCallCost field value if set, zero value otherwise.
func (o *ModelInvoice) GetApiCallCost() float32 {
	if o == nil || IsNil(o.ApiCallCost) {
		var ret float32
		return ret
	}
	return *o.ApiCallCost
}

// GetApiCallCostOk returns a tuple with the ApiCallCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelInvoice) GetApiCallCostOk() (*float32, bool) {
	if o == nil || IsNil(o.ApiCallCost) {
		return nil, false
	}
	return o.ApiCallCost, true
}

// HasApiCallCost returns a boolean if a field has been set.
func (o *ModelInvoice) HasApiCallCost() bool {
	if o != nil && !IsNil(o.ApiCallCost) {
		return true
	}

	return false
}

// SetApiCallCost gets a reference to the given float32 and assigns it to the ApiCallCost field.
func (o *ModelInvoice) SetApiCallCost(v float32) {
	o.ApiCallCost = &v
}

// GetApiCallCount returns the ApiCallCount field value if set, zero value otherwise.
func (o *ModelInvoice) GetApiCallCount() int32 {
	if o == nil || IsNil(o.ApiCallCount) {
		var ret int32
		return ret
	}
	return *o.ApiCallCount
}

// GetApiCallCountOk returns a tuple with the ApiCallCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelInvoice) GetApiCallCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ApiCallCount) {
		return nil, false
	}
	return o.ApiCallCount, true
}

// HasApiCallCount returns a boolean if a field has been set.
func (o *ModelInvoice) HasApiCallCount() bool {
	if o != nil && !IsNil(o.ApiCallCount) {
		return true
	}

	return false
}

// SetApiCallCount gets a reference to the given int32 and assigns it to the ApiCallCount field.
func (o *ModelInvoice) SetApiCallCount(v int32) {
	o.ApiCallCount = &v
}

// GetCallMinuteCost returns the CallMinuteCost field value if set, zero value otherwise.
func (o *ModelInvoice) GetCallMinuteCost() float32 {
	if o == nil || IsNil(o.CallMinuteCost) {
		var ret float32
		return ret
	}
	return *o.CallMinuteCost
}

// GetCallMinuteCostOk returns a tuple with the CallMinuteCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelInvoice) GetCallMinuteCostOk() (*float32, bool) {
	if o == nil || IsNil(o.CallMinuteCost) {
		return nil, false
	}
	return o.CallMinuteCost, true
}

// HasCallMinuteCost returns a boolean if a field has been set.
func (o *ModelInvoice) HasCallMinuteCost() bool {
	if o != nil && !IsNil(o.CallMinuteCost) {
		return true
	}

	return false
}

// SetCallMinuteCost gets a reference to the given float32 and assigns it to the CallMinuteCost field.
func (o *ModelInvoice) SetCallMinuteCost(v float32) {
	o.CallMinuteCost = &v
}

// GetCallMinuteCount returns the CallMinuteCount field value if set, zero value otherwise.
func (o *ModelInvoice) GetCallMinuteCount() int32 {
	if o == nil || IsNil(o.CallMinuteCount) {
		var ret int32
		return ret
	}
	return *o.CallMinuteCount
}

// GetCallMinuteCountOk returns a tuple with the CallMinuteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelInvoice) GetCallMinuteCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CallMinuteCount) {
		return nil, false
	}
	return o.CallMinuteCount, true
}

// HasCallMinuteCount returns a boolean if a field has been set.
func (o *ModelInvoice) HasCallMinuteCount() bool {
	if o != nil && !IsNil(o.CallMinuteCount) {
		return true
	}

	return false
}

// SetCallMinuteCount gets a reference to the given int32 and assigns it to the CallMinuteCount field.
func (o *ModelInvoice) SetCallMinuteCount(v int32) {
	o.CallMinuteCount = &v
}

// GetInvoiceCost returns the InvoiceCost field value if set, zero value otherwise.
func (o *ModelInvoice) GetInvoiceCost() float32 {
	if o == nil || IsNil(o.InvoiceCost) {
		var ret float32
		return ret
	}
	return *o.InvoiceCost
}

// GetInvoiceCostOk returns a tuple with the InvoiceCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelInvoice) GetInvoiceCostOk() (*float32, bool) {
	if o == nil || IsNil(o.InvoiceCost) {
		return nil, false
	}
	return o.InvoiceCost, true
}

// HasInvoiceCost returns a boolean if a field has been set.
func (o *ModelInvoice) HasInvoiceCost() bool {
	if o != nil && !IsNil(o.InvoiceCost) {
		return true
	}

	return false
}

// SetInvoiceCost gets a reference to the given float32 and assigns it to the InvoiceCost field.
func (o *ModelInvoice) SetInvoiceCost(v float32) {
	o.InvoiceCost = &v
}

// GetMonth returns the Month field value if set, zero value otherwise.
func (o *ModelInvoice) GetMonth() int32 {
	if o == nil || IsNil(o.Month) {
		var ret int32
		return ret
	}
	return *o.Month
}

// GetMonthOk returns a tuple with the Month field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelInvoice) GetMonthOk() (*int32, bool) {
	if o == nil || IsNil(o.Month) {
		return nil, false
	}
	return o.Month, true
}

// HasMonth returns a boolean if a field has been set.
func (o *ModelInvoice) HasMonth() bool {
	if o != nil && !IsNil(o.Month) {
		return true
	}

	return false
}

// SetMonth gets a reference to the given int32 and assigns it to the Month field.
func (o *ModelInvoice) SetMonth(v int32) {
	o.Month = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *ModelInvoice) GetYear() int32 {
	if o == nil || IsNil(o.Year) {
		var ret int32
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelInvoice) GetYearOk() (*int32, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *ModelInvoice) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given int32 and assigns it to the Year field.
func (o *ModelInvoice) SetYear(v int32) {
	o.Year = &v
}

func (o ModelInvoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelInvoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiCallCost) {
		toSerialize["api_call_cost"] = o.ApiCallCost
	}
	if !IsNil(o.ApiCallCount) {
		toSerialize["api_call_count"] = o.ApiCallCount
	}
	if !IsNil(o.CallMinuteCost) {
		toSerialize["call_minute_cost"] = o.CallMinuteCost
	}
	if !IsNil(o.CallMinuteCount) {
		toSerialize["call_minute_count"] = o.CallMinuteCount
	}
	if !IsNil(o.InvoiceCost) {
		toSerialize["invoice_cost"] = o.InvoiceCost
	}
	if !IsNil(o.Month) {
		toSerialize["month"] = o.Month
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	return toSerialize, nil
}

type NullableModelInvoice struct {
	value *ModelInvoice
	isSet bool
}

func (v NullableModelInvoice) Get() *ModelInvoice {
	return v.value
}

func (v *NullableModelInvoice) Set(val *ModelInvoice) {
	v.value = val
	v.isSet = true
}

func (v NullableModelInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableModelInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelInvoice(val *ModelInvoice) *NullableModelInvoice {
	return &NullableModelInvoice{value: val, isSet: true}
}

func (v NullableModelInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


