/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceTemporalRuleOutputShort type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceTemporalRuleOutputShort{}

// ServiceTemporalRuleOutputShort struct for ServiceTemporalRuleOutputShort
type ServiceTemporalRuleOutputShort struct {
	Enabled *bool `json:"enabled,omitempty"`
	Features []string `json:"features,omitempty"`
	Flags []string `json:"flags,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewServiceTemporalRuleOutputShort instantiates a new ServiceTemporalRuleOutputShort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceTemporalRuleOutputShort() *ServiceTemporalRuleOutputShort {
	this := ServiceTemporalRuleOutputShort{}
	return &this
}

// NewServiceTemporalRuleOutputShortWithDefaults instantiates a new ServiceTemporalRuleOutputShort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceTemporalRuleOutputShortWithDefaults() *ServiceTemporalRuleOutputShort {
	this := ServiceTemporalRuleOutputShort{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputShort) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputShort) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputShort) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ServiceTemporalRuleOutputShort) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputShort) GetFeatures() []string {
	if o == nil || IsNil(o.Features) {
		var ret []string
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputShort) GetFeaturesOk() ([]string, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputShort) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []string and assigns it to the Features field.
func (o *ServiceTemporalRuleOutputShort) SetFeatures(v []string) {
	o.Features = v
}

// GetFlags returns the Flags field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputShort) GetFlags() []string {
	if o == nil || IsNil(o.Flags) {
		var ret []string
		return ret
	}
	return o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputShort) GetFlagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Flags) {
		return nil, false
	}
	return o.Flags, true
}

// HasFlags returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputShort) HasFlags() bool {
	if o != nil && !IsNil(o.Flags) {
		return true
	}

	return false
}

// SetFlags gets a reference to the given []string and assigns it to the Flags field.
func (o *ServiceTemporalRuleOutputShort) SetFlags(v []string) {
	o.Flags = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputShort) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputShort) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputShort) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServiceTemporalRuleOutputShort) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServiceTemporalRuleOutputShort) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTemporalRuleOutputShort) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServiceTemporalRuleOutputShort) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServiceTemporalRuleOutputShort) SetName(v string) {
	o.Name = &v
}

func (o ServiceTemporalRuleOutputShort) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceTemporalRuleOutputShort) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.Flags) {
		toSerialize["flags"] = o.Flags
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableServiceTemporalRuleOutputShort struct {
	value *ServiceTemporalRuleOutputShort
	isSet bool
}

func (v NullableServiceTemporalRuleOutputShort) Get() *ServiceTemporalRuleOutputShort {
	return v.value
}

func (v *NullableServiceTemporalRuleOutputShort) Set(val *ServiceTemporalRuleOutputShort) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceTemporalRuleOutputShort) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceTemporalRuleOutputShort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceTemporalRuleOutputShort(val *ServiceTemporalRuleOutputShort) *NullableServiceTemporalRuleOutputShort {
	return &NullableServiceTemporalRuleOutputShort{value: val, isSet: true}
}

func (v NullableServiceTemporalRuleOutputShort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceTemporalRuleOutputShort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


