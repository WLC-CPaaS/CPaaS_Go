/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceWebhookEdit model module.
 * @module model/ServiceWebhookEdit
 * @version 1.1
 */
class ServiceWebhookEdit {
    /**
     * Constructs a new <code>ServiceWebhookEdit</code>.
     * @alias module:model/ServiceWebhookEdit
     */
    constructor() { 
        
        ServiceWebhookEdit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceWebhookEdit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceWebhookEdit} obj Optional instance to populate.
     * @return {module:model/ServiceWebhookEdit} The populated <code>ServiceWebhookEdit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceWebhookEdit();

            if (data.hasOwnProperty('callback_url')) {
                obj['callback_url'] = ApiClient.convertToType(data['callback_url'], 'String');
            }
            if (data.hasOwnProperty('is_active')) {
                obj['is_active'] = ApiClient.convertToType(data['is_active'], 'Boolean');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('webhook_type')) {
                obj['webhook_type'] = ApiClient.convertToType(data['webhook_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceWebhookEdit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceWebhookEdit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['callback_url'] && !(typeof data['callback_url'] === 'string' || data['callback_url'] instanceof String)) {
            throw new Error("Expected the field `callback_url` to be a primitive type in the JSON string but got " + data['callback_url']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['webhook_type'] && !(typeof data['webhook_type'] === 'string' || data['webhook_type'] instanceof String)) {
            throw new Error("Expected the field `webhook_type` to be a primitive type in the JSON string but got " + data['webhook_type']);
        }

        return true;
    }


}



/**
 * @member {String} callback_url
 */
ServiceWebhookEdit.prototype['callback_url'] = undefined;

/**
 * @member {Boolean} is_active
 */
ServiceWebhookEdit.prototype['is_active'] = undefined;

/**
 * @member {String} title
 */
ServiceWebhookEdit.prototype['title'] = undefined;

/**
 * @member {module:model/ServiceWebhookEdit.WebhookTypeEnum} webhook_type
 */
ServiceWebhookEdit.prototype['webhook_type'] = undefined;





/**
 * Allowed values for the <code>webhook_type</code> property.
 * @enum {String}
 * @readonly
 */
ServiceWebhookEdit['WebhookTypeEnum'] = {

    /**
     * value: "messaging"
     * @const
     */
    "messaging": "messaging",

    /**
     * value: "purchase_number"
     * @const
     */
    "purchase_number": "purchase_number"
};



export default ServiceWebhookEdit;

