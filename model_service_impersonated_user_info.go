/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceImpersonatedUserInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceImpersonatedUserInfo{}

// ServiceImpersonatedUserInfo struct for ServiceImpersonatedUserInfo
type ServiceImpersonatedUserInfo struct {
	Email *string `json:"email,omitempty"`
	FirstName *string `json:"first_name,omitempty"`
	FullName *string `json:"full_name,omitempty"`
	HasAvatar *bool `json:"has_avatar,omitempty"`
	LastName *string `json:"last_name,omitempty"`
	PrivLevel *string `json:"priv_level,omitempty"`
}

// NewServiceImpersonatedUserInfo instantiates a new ServiceImpersonatedUserInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceImpersonatedUserInfo() *ServiceImpersonatedUserInfo {
	this := ServiceImpersonatedUserInfo{}
	return &this
}

// NewServiceImpersonatedUserInfoWithDefaults instantiates a new ServiceImpersonatedUserInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceImpersonatedUserInfoWithDefaults() *ServiceImpersonatedUserInfo {
	this := ServiceImpersonatedUserInfo{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ServiceImpersonatedUserInfo) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonatedUserInfo) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ServiceImpersonatedUserInfo) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ServiceImpersonatedUserInfo) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *ServiceImpersonatedUserInfo) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonatedUserInfo) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *ServiceImpersonatedUserInfo) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *ServiceImpersonatedUserInfo) SetFirstName(v string) {
	o.FirstName = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *ServiceImpersonatedUserInfo) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonatedUserInfo) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *ServiceImpersonatedUserInfo) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *ServiceImpersonatedUserInfo) SetFullName(v string) {
	o.FullName = &v
}

// GetHasAvatar returns the HasAvatar field value if set, zero value otherwise.
func (o *ServiceImpersonatedUserInfo) GetHasAvatar() bool {
	if o == nil || IsNil(o.HasAvatar) {
		var ret bool
		return ret
	}
	return *o.HasAvatar
}

// GetHasAvatarOk returns a tuple with the HasAvatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonatedUserInfo) GetHasAvatarOk() (*bool, bool) {
	if o == nil || IsNil(o.HasAvatar) {
		return nil, false
	}
	return o.HasAvatar, true
}

// HasHasAvatar returns a boolean if a field has been set.
func (o *ServiceImpersonatedUserInfo) HasHasAvatar() bool {
	if o != nil && !IsNil(o.HasAvatar) {
		return true
	}

	return false
}

// SetHasAvatar gets a reference to the given bool and assigns it to the HasAvatar field.
func (o *ServiceImpersonatedUserInfo) SetHasAvatar(v bool) {
	o.HasAvatar = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *ServiceImpersonatedUserInfo) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonatedUserInfo) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *ServiceImpersonatedUserInfo) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *ServiceImpersonatedUserInfo) SetLastName(v string) {
	o.LastName = &v
}

// GetPrivLevel returns the PrivLevel field value if set, zero value otherwise.
func (o *ServiceImpersonatedUserInfo) GetPrivLevel() string {
	if o == nil || IsNil(o.PrivLevel) {
		var ret string
		return ret
	}
	return *o.PrivLevel
}

// GetPrivLevelOk returns a tuple with the PrivLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonatedUserInfo) GetPrivLevelOk() (*string, bool) {
	if o == nil || IsNil(o.PrivLevel) {
		return nil, false
	}
	return o.PrivLevel, true
}

// HasPrivLevel returns a boolean if a field has been set.
func (o *ServiceImpersonatedUserInfo) HasPrivLevel() bool {
	if o != nil && !IsNil(o.PrivLevel) {
		return true
	}

	return false
}

// SetPrivLevel gets a reference to the given string and assigns it to the PrivLevel field.
func (o *ServiceImpersonatedUserInfo) SetPrivLevel(v string) {
	o.PrivLevel = &v
}

func (o ServiceImpersonatedUserInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceImpersonatedUserInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.FullName) {
		toSerialize["full_name"] = o.FullName
	}
	if !IsNil(o.HasAvatar) {
		toSerialize["has_avatar"] = o.HasAvatar
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.PrivLevel) {
		toSerialize["priv_level"] = o.PrivLevel
	}
	return toSerialize, nil
}

type NullableServiceImpersonatedUserInfo struct {
	value *ServiceImpersonatedUserInfo
	isSet bool
}

func (v NullableServiceImpersonatedUserInfo) Get() *ServiceImpersonatedUserInfo {
	return v.value
}

func (v *NullableServiceImpersonatedUserInfo) Set(val *ServiceImpersonatedUserInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceImpersonatedUserInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceImpersonatedUserInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceImpersonatedUserInfo(val *ServiceImpersonatedUserInfo) *NullableServiceImpersonatedUserInfo {
	return &NullableServiceImpersonatedUserInfo{value: val, isSet: true}
}

func (v NullableServiceImpersonatedUserInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceImpersonatedUserInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


