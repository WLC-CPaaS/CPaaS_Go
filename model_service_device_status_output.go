/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceDeviceStatusOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceDeviceStatusOutput{}

// ServiceDeviceStatusOutput struct for ServiceDeviceStatusOutput
type ServiceDeviceStatusOutput struct {
	DeviceId *string `json:"device_id,omitempty"`
	Registered *bool `json:"registered,omitempty"`
	Registrable *bool `json:"registrable,omitempty"`
}

// NewServiceDeviceStatusOutput instantiates a new ServiceDeviceStatusOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceDeviceStatusOutput() *ServiceDeviceStatusOutput {
	this := ServiceDeviceStatusOutput{}
	return &this
}

// NewServiceDeviceStatusOutputWithDefaults instantiates a new ServiceDeviceStatusOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceDeviceStatusOutputWithDefaults() *ServiceDeviceStatusOutput {
	this := ServiceDeviceStatusOutput{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *ServiceDeviceStatusOutput) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDeviceStatusOutput) GetDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *ServiceDeviceStatusOutput) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *ServiceDeviceStatusOutput) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetRegistered returns the Registered field value if set, zero value otherwise.
func (o *ServiceDeviceStatusOutput) GetRegistered() bool {
	if o == nil || IsNil(o.Registered) {
		var ret bool
		return ret
	}
	return *o.Registered
}

// GetRegisteredOk returns a tuple with the Registered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDeviceStatusOutput) GetRegisteredOk() (*bool, bool) {
	if o == nil || IsNil(o.Registered) {
		return nil, false
	}
	return o.Registered, true
}

// HasRegistered returns a boolean if a field has been set.
func (o *ServiceDeviceStatusOutput) HasRegistered() bool {
	if o != nil && !IsNil(o.Registered) {
		return true
	}

	return false
}

// SetRegistered gets a reference to the given bool and assigns it to the Registered field.
func (o *ServiceDeviceStatusOutput) SetRegistered(v bool) {
	o.Registered = &v
}

// GetRegistrable returns the Registrable field value if set, zero value otherwise.
func (o *ServiceDeviceStatusOutput) GetRegistrable() bool {
	if o == nil || IsNil(o.Registrable) {
		var ret bool
		return ret
	}
	return *o.Registrable
}

// GetRegistrableOk returns a tuple with the Registrable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDeviceStatusOutput) GetRegistrableOk() (*bool, bool) {
	if o == nil || IsNil(o.Registrable) {
		return nil, false
	}
	return o.Registrable, true
}

// HasRegistrable returns a boolean if a field has been set.
func (o *ServiceDeviceStatusOutput) HasRegistrable() bool {
	if o != nil && !IsNil(o.Registrable) {
		return true
	}

	return false
}

// SetRegistrable gets a reference to the given bool and assigns it to the Registrable field.
func (o *ServiceDeviceStatusOutput) SetRegistrable(v bool) {
	o.Registrable = &v
}

func (o ServiceDeviceStatusOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceDeviceStatusOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceId) {
		toSerialize["device_id"] = o.DeviceId
	}
	if !IsNil(o.Registered) {
		toSerialize["registered"] = o.Registered
	}
	if !IsNil(o.Registrable) {
		toSerialize["registrable"] = o.Registrable
	}
	return toSerialize, nil
}

type NullableServiceDeviceStatusOutput struct {
	value *ServiceDeviceStatusOutput
	isSet bool
}

func (v NullableServiceDeviceStatusOutput) Get() *ServiceDeviceStatusOutput {
	return v.value
}

func (v *NullableServiceDeviceStatusOutput) Set(val *ServiceDeviceStatusOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceDeviceStatusOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceDeviceStatusOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceDeviceStatusOutput(val *ServiceDeviceStatusOutput) *NullableServiceDeviceStatusOutput {
	return &NullableServiceDeviceStatusOutput{value: val, isSet: true}
}

func (v NullableServiceDeviceStatusOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceDeviceStatusOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


