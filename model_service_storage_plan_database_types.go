/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceStoragePlanDatabaseTypes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceStoragePlanDatabaseTypes{}

// ServiceStoragePlanDatabaseTypes struct for ServiceStoragePlanDatabaseTypes
type ServiceStoragePlanDatabaseTypes struct {
	CallRecording *ServiceStoragePlanDatabaseDocument `json:"call_recording,omitempty"`
	Fax *ServiceStoragePlanDatabaseDocument `json:"fax,omitempty"`
	Function *ServiceStoragePlanDatabaseDocument `json:"function,omitempty"`
	MailboxMessage *ServiceStoragePlanDatabaseDocument `json:"mailbox_message,omitempty"`
	Media *ServiceStoragePlanDatabaseDocument `json:"media,omitempty"`
}

// NewServiceStoragePlanDatabaseTypes instantiates a new ServiceStoragePlanDatabaseTypes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceStoragePlanDatabaseTypes() *ServiceStoragePlanDatabaseTypes {
	this := ServiceStoragePlanDatabaseTypes{}
	return &this
}

// NewServiceStoragePlanDatabaseTypesWithDefaults instantiates a new ServiceStoragePlanDatabaseTypes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceStoragePlanDatabaseTypesWithDefaults() *ServiceStoragePlanDatabaseTypes {
	this := ServiceStoragePlanDatabaseTypes{}
	return &this
}

// GetCallRecording returns the CallRecording field value if set, zero value otherwise.
func (o *ServiceStoragePlanDatabaseTypes) GetCallRecording() ServiceStoragePlanDatabaseDocument {
	if o == nil || IsNil(o.CallRecording) {
		var ret ServiceStoragePlanDatabaseDocument
		return ret
	}
	return *o.CallRecording
}

// GetCallRecordingOk returns a tuple with the CallRecording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStoragePlanDatabaseTypes) GetCallRecordingOk() (*ServiceStoragePlanDatabaseDocument, bool) {
	if o == nil || IsNil(o.CallRecording) {
		return nil, false
	}
	return o.CallRecording, true
}

// HasCallRecording returns a boolean if a field has been set.
func (o *ServiceStoragePlanDatabaseTypes) HasCallRecording() bool {
	if o != nil && !IsNil(o.CallRecording) {
		return true
	}

	return false
}

// SetCallRecording gets a reference to the given ServiceStoragePlanDatabaseDocument and assigns it to the CallRecording field.
func (o *ServiceStoragePlanDatabaseTypes) SetCallRecording(v ServiceStoragePlanDatabaseDocument) {
	o.CallRecording = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *ServiceStoragePlanDatabaseTypes) GetFax() ServiceStoragePlanDatabaseDocument {
	if o == nil || IsNil(o.Fax) {
		var ret ServiceStoragePlanDatabaseDocument
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStoragePlanDatabaseTypes) GetFaxOk() (*ServiceStoragePlanDatabaseDocument, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *ServiceStoragePlanDatabaseTypes) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given ServiceStoragePlanDatabaseDocument and assigns it to the Fax field.
func (o *ServiceStoragePlanDatabaseTypes) SetFax(v ServiceStoragePlanDatabaseDocument) {
	o.Fax = &v
}

// GetFunction returns the Function field value if set, zero value otherwise.
func (o *ServiceStoragePlanDatabaseTypes) GetFunction() ServiceStoragePlanDatabaseDocument {
	if o == nil || IsNil(o.Function) {
		var ret ServiceStoragePlanDatabaseDocument
		return ret
	}
	return *o.Function
}

// GetFunctionOk returns a tuple with the Function field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStoragePlanDatabaseTypes) GetFunctionOk() (*ServiceStoragePlanDatabaseDocument, bool) {
	if o == nil || IsNil(o.Function) {
		return nil, false
	}
	return o.Function, true
}

// HasFunction returns a boolean if a field has been set.
func (o *ServiceStoragePlanDatabaseTypes) HasFunction() bool {
	if o != nil && !IsNil(o.Function) {
		return true
	}

	return false
}

// SetFunction gets a reference to the given ServiceStoragePlanDatabaseDocument and assigns it to the Function field.
func (o *ServiceStoragePlanDatabaseTypes) SetFunction(v ServiceStoragePlanDatabaseDocument) {
	o.Function = &v
}

// GetMailboxMessage returns the MailboxMessage field value if set, zero value otherwise.
func (o *ServiceStoragePlanDatabaseTypes) GetMailboxMessage() ServiceStoragePlanDatabaseDocument {
	if o == nil || IsNil(o.MailboxMessage) {
		var ret ServiceStoragePlanDatabaseDocument
		return ret
	}
	return *o.MailboxMessage
}

// GetMailboxMessageOk returns a tuple with the MailboxMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStoragePlanDatabaseTypes) GetMailboxMessageOk() (*ServiceStoragePlanDatabaseDocument, bool) {
	if o == nil || IsNil(o.MailboxMessage) {
		return nil, false
	}
	return o.MailboxMessage, true
}

// HasMailboxMessage returns a boolean if a field has been set.
func (o *ServiceStoragePlanDatabaseTypes) HasMailboxMessage() bool {
	if o != nil && !IsNil(o.MailboxMessage) {
		return true
	}

	return false
}

// SetMailboxMessage gets a reference to the given ServiceStoragePlanDatabaseDocument and assigns it to the MailboxMessage field.
func (o *ServiceStoragePlanDatabaseTypes) SetMailboxMessage(v ServiceStoragePlanDatabaseDocument) {
	o.MailboxMessage = &v
}

// GetMedia returns the Media field value if set, zero value otherwise.
func (o *ServiceStoragePlanDatabaseTypes) GetMedia() ServiceStoragePlanDatabaseDocument {
	if o == nil || IsNil(o.Media) {
		var ret ServiceStoragePlanDatabaseDocument
		return ret
	}
	return *o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStoragePlanDatabaseTypes) GetMediaOk() (*ServiceStoragePlanDatabaseDocument, bool) {
	if o == nil || IsNil(o.Media) {
		return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *ServiceStoragePlanDatabaseTypes) HasMedia() bool {
	if o != nil && !IsNil(o.Media) {
		return true
	}

	return false
}

// SetMedia gets a reference to the given ServiceStoragePlanDatabaseDocument and assigns it to the Media field.
func (o *ServiceStoragePlanDatabaseTypes) SetMedia(v ServiceStoragePlanDatabaseDocument) {
	o.Media = &v
}

func (o ServiceStoragePlanDatabaseTypes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceStoragePlanDatabaseTypes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallRecording) {
		toSerialize["call_recording"] = o.CallRecording
	}
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	if !IsNil(o.Function) {
		toSerialize["function"] = o.Function
	}
	if !IsNil(o.MailboxMessage) {
		toSerialize["mailbox_message"] = o.MailboxMessage
	}
	if !IsNil(o.Media) {
		toSerialize["media"] = o.Media
	}
	return toSerialize, nil
}

type NullableServiceStoragePlanDatabaseTypes struct {
	value *ServiceStoragePlanDatabaseTypes
	isSet bool
}

func (v NullableServiceStoragePlanDatabaseTypes) Get() *ServiceStoragePlanDatabaseTypes {
	return v.value
}

func (v *NullableServiceStoragePlanDatabaseTypes) Set(val *ServiceStoragePlanDatabaseTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceStoragePlanDatabaseTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceStoragePlanDatabaseTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceStoragePlanDatabaseTypes(val *ServiceStoragePlanDatabaseTypes) *NullableServiceStoragePlanDatabaseTypes {
	return &NullableServiceStoragePlanDatabaseTypes{value: val, isSet: true}
}

func (v NullableServiceStoragePlanDatabaseTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceStoragePlanDatabaseTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


