/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceImpersonateUserOutputFull type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceImpersonateUserOutputFull{}

// ServiceImpersonateUserOutputFull struct for ServiceImpersonateUserOutputFull
type ServiceImpersonateUserOutputFull struct {
	AccountId *string `json:"account_id,omitempty"`
	AccountName *string `json:"account_name,omitempty"`
	AuthToken *string `json:"auth_token,omitempty"`
	ClusterId *string `json:"cluster_id,omitempty"`
	IsMasterAccount *bool `json:"is_master_account,omitempty"`
	IsReseller *bool `json:"is_reseller,omitempty"`
	OwnerId *string `json:"owner_id,omitempty"`
	ResellerId *string `json:"reseller_id,omitempty"`
	UserInfo *ServiceImpersonatedUserInfo `json:"user_info,omitempty"`
}

// NewServiceImpersonateUserOutputFull instantiates a new ServiceImpersonateUserOutputFull object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceImpersonateUserOutputFull() *ServiceImpersonateUserOutputFull {
	this := ServiceImpersonateUserOutputFull{}
	return &this
}

// NewServiceImpersonateUserOutputFullWithDefaults instantiates a new ServiceImpersonateUserOutputFull object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceImpersonateUserOutputFullWithDefaults() *ServiceImpersonateUserOutputFull {
	this := ServiceImpersonateUserOutputFull{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ServiceImpersonateUserOutputFull) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonateUserOutputFull) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ServiceImpersonateUserOutputFull) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *ServiceImpersonateUserOutputFull) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *ServiceImpersonateUserOutputFull) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonateUserOutputFull) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *ServiceImpersonateUserOutputFull) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *ServiceImpersonateUserOutputFull) SetAccountName(v string) {
	o.AccountName = &v
}

// GetAuthToken returns the AuthToken field value if set, zero value otherwise.
func (o *ServiceImpersonateUserOutputFull) GetAuthToken() string {
	if o == nil || IsNil(o.AuthToken) {
		var ret string
		return ret
	}
	return *o.AuthToken
}

// GetAuthTokenOk returns a tuple with the AuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonateUserOutputFull) GetAuthTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AuthToken) {
		return nil, false
	}
	return o.AuthToken, true
}

// HasAuthToken returns a boolean if a field has been set.
func (o *ServiceImpersonateUserOutputFull) HasAuthToken() bool {
	if o != nil && !IsNil(o.AuthToken) {
		return true
	}

	return false
}

// SetAuthToken gets a reference to the given string and assigns it to the AuthToken field.
func (o *ServiceImpersonateUserOutputFull) SetAuthToken(v string) {
	o.AuthToken = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *ServiceImpersonateUserOutputFull) GetClusterId() string {
	if o == nil || IsNil(o.ClusterId) {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonateUserOutputFull) GetClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *ServiceImpersonateUserOutputFull) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *ServiceImpersonateUserOutputFull) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetIsMasterAccount returns the IsMasterAccount field value if set, zero value otherwise.
func (o *ServiceImpersonateUserOutputFull) GetIsMasterAccount() bool {
	if o == nil || IsNil(o.IsMasterAccount) {
		var ret bool
		return ret
	}
	return *o.IsMasterAccount
}

// GetIsMasterAccountOk returns a tuple with the IsMasterAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonateUserOutputFull) GetIsMasterAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMasterAccount) {
		return nil, false
	}
	return o.IsMasterAccount, true
}

// HasIsMasterAccount returns a boolean if a field has been set.
func (o *ServiceImpersonateUserOutputFull) HasIsMasterAccount() bool {
	if o != nil && !IsNil(o.IsMasterAccount) {
		return true
	}

	return false
}

// SetIsMasterAccount gets a reference to the given bool and assigns it to the IsMasterAccount field.
func (o *ServiceImpersonateUserOutputFull) SetIsMasterAccount(v bool) {
	o.IsMasterAccount = &v
}

// GetIsReseller returns the IsReseller field value if set, zero value otherwise.
func (o *ServiceImpersonateUserOutputFull) GetIsReseller() bool {
	if o == nil || IsNil(o.IsReseller) {
		var ret bool
		return ret
	}
	return *o.IsReseller
}

// GetIsResellerOk returns a tuple with the IsReseller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonateUserOutputFull) GetIsResellerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReseller) {
		return nil, false
	}
	return o.IsReseller, true
}

// HasIsReseller returns a boolean if a field has been set.
func (o *ServiceImpersonateUserOutputFull) HasIsReseller() bool {
	if o != nil && !IsNil(o.IsReseller) {
		return true
	}

	return false
}

// SetIsReseller gets a reference to the given bool and assigns it to the IsReseller field.
func (o *ServiceImpersonateUserOutputFull) SetIsReseller(v bool) {
	o.IsReseller = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *ServiceImpersonateUserOutputFull) GetOwnerId() string {
	if o == nil || IsNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonateUserOutputFull) GetOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *ServiceImpersonateUserOutputFull) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *ServiceImpersonateUserOutputFull) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetResellerId returns the ResellerId field value if set, zero value otherwise.
func (o *ServiceImpersonateUserOutputFull) GetResellerId() string {
	if o == nil || IsNil(o.ResellerId) {
		var ret string
		return ret
	}
	return *o.ResellerId
}

// GetResellerIdOk returns a tuple with the ResellerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonateUserOutputFull) GetResellerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResellerId) {
		return nil, false
	}
	return o.ResellerId, true
}

// HasResellerId returns a boolean if a field has been set.
func (o *ServiceImpersonateUserOutputFull) HasResellerId() bool {
	if o != nil && !IsNil(o.ResellerId) {
		return true
	}

	return false
}

// SetResellerId gets a reference to the given string and assigns it to the ResellerId field.
func (o *ServiceImpersonateUserOutputFull) SetResellerId(v string) {
	o.ResellerId = &v
}

// GetUserInfo returns the UserInfo field value if set, zero value otherwise.
func (o *ServiceImpersonateUserOutputFull) GetUserInfo() ServiceImpersonatedUserInfo {
	if o == nil || IsNil(o.UserInfo) {
		var ret ServiceImpersonatedUserInfo
		return ret
	}
	return *o.UserInfo
}

// GetUserInfoOk returns a tuple with the UserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceImpersonateUserOutputFull) GetUserInfoOk() (*ServiceImpersonatedUserInfo, bool) {
	if o == nil || IsNil(o.UserInfo) {
		return nil, false
	}
	return o.UserInfo, true
}

// HasUserInfo returns a boolean if a field has been set.
func (o *ServiceImpersonateUserOutputFull) HasUserInfo() bool {
	if o != nil && !IsNil(o.UserInfo) {
		return true
	}

	return false
}

// SetUserInfo gets a reference to the given ServiceImpersonatedUserInfo and assigns it to the UserInfo field.
func (o *ServiceImpersonateUserOutputFull) SetUserInfo(v ServiceImpersonatedUserInfo) {
	o.UserInfo = &v
}

func (o ServiceImpersonateUserOutputFull) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceImpersonateUserOutputFull) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.AccountName) {
		toSerialize["account_name"] = o.AccountName
	}
	if !IsNil(o.AuthToken) {
		toSerialize["auth_token"] = o.AuthToken
	}
	if !IsNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if !IsNil(o.IsMasterAccount) {
		toSerialize["is_master_account"] = o.IsMasterAccount
	}
	if !IsNil(o.IsReseller) {
		toSerialize["is_reseller"] = o.IsReseller
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.ResellerId) {
		toSerialize["reseller_id"] = o.ResellerId
	}
	if !IsNil(o.UserInfo) {
		toSerialize["user_info"] = o.UserInfo
	}
	return toSerialize, nil
}

type NullableServiceImpersonateUserOutputFull struct {
	value *ServiceImpersonateUserOutputFull
	isSet bool
}

func (v NullableServiceImpersonateUserOutputFull) Get() *ServiceImpersonateUserOutputFull {
	return v.value
}

func (v *NullableServiceImpersonateUserOutputFull) Set(val *ServiceImpersonateUserOutputFull) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceImpersonateUserOutputFull) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceImpersonateUserOutputFull) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceImpersonateUserOutputFull(val *ServiceImpersonateUserOutputFull) *NullableServiceImpersonateUserOutputFull {
	return &NullableServiceImpersonateUserOutputFull{value: val, isSet: true}
}

func (v NullableServiceImpersonateUserOutputFull) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceImpersonateUserOutputFull) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


