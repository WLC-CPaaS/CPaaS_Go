/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceWebhookEdit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceWebhookEdit{}

// ServiceWebhookEdit struct for ServiceWebhookEdit
type ServiceWebhookEdit struct {
	CallbackMethod string `json:"callback_method"`
	CallbackUrl string `json:"callback_url"`
	Data map[string]interface{} `json:"data,omitempty"`
	IsActive *bool `json:"is_active,omitempty"`
	Title string `json:"title"`
	WebhookType string `json:"webhook_type"`
}

type _ServiceWebhookEdit ServiceWebhookEdit

// NewServiceWebhookEdit instantiates a new ServiceWebhookEdit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceWebhookEdit(callbackMethod string, callbackUrl string, title string, webhookType string) *ServiceWebhookEdit {
	this := ServiceWebhookEdit{}
	this.CallbackMethod = callbackMethod
	this.CallbackUrl = callbackUrl
	this.Title = title
	this.WebhookType = webhookType
	return &this
}

// NewServiceWebhookEditWithDefaults instantiates a new ServiceWebhookEdit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceWebhookEditWithDefaults() *ServiceWebhookEdit {
	this := ServiceWebhookEdit{}
	return &this
}

// GetCallbackMethod returns the CallbackMethod field value
func (o *ServiceWebhookEdit) GetCallbackMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallbackMethod
}

// GetCallbackMethodOk returns a tuple with the CallbackMethod field value
// and a boolean to check if the value has been set.
func (o *ServiceWebhookEdit) GetCallbackMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CallbackMethod, true
}

// SetCallbackMethod sets field value
func (o *ServiceWebhookEdit) SetCallbackMethod(v string) {
	o.CallbackMethod = v
}

// GetCallbackUrl returns the CallbackUrl field value
func (o *ServiceWebhookEdit) GetCallbackUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value
// and a boolean to check if the value has been set.
func (o *ServiceWebhookEdit) GetCallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CallbackUrl, true
}

// SetCallbackUrl sets field value
func (o *ServiceWebhookEdit) SetCallbackUrl(v string) {
	o.CallbackUrl = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ServiceWebhookEdit) GetData() map[string]interface{} {
	if o == nil || IsNil(o.Data) {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceWebhookEdit) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ServiceWebhookEdit) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *ServiceWebhookEdit) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *ServiceWebhookEdit) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceWebhookEdit) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *ServiceWebhookEdit) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *ServiceWebhookEdit) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetTitle returns the Title field value
func (o *ServiceWebhookEdit) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ServiceWebhookEdit) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ServiceWebhookEdit) SetTitle(v string) {
	o.Title = v
}

// GetWebhookType returns the WebhookType field value
func (o *ServiceWebhookEdit) GetWebhookType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookType
}

// GetWebhookTypeOk returns a tuple with the WebhookType field value
// and a boolean to check if the value has been set.
func (o *ServiceWebhookEdit) GetWebhookTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebhookType, true
}

// SetWebhookType sets field value
func (o *ServiceWebhookEdit) SetWebhookType(v string) {
	o.WebhookType = v
}

func (o ServiceWebhookEdit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceWebhookEdit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["callback_method"] = o.CallbackMethod
	toSerialize["callback_url"] = o.CallbackUrl
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.IsActive) {
		toSerialize["is_active"] = o.IsActive
	}
	toSerialize["title"] = o.Title
	toSerialize["webhook_type"] = o.WebhookType
	return toSerialize, nil
}

func (o *ServiceWebhookEdit) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"callback_method",
		"callback_url",
		"title",
		"webhook_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceWebhookEdit := _ServiceWebhookEdit{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceWebhookEdit)

	if err != nil {
		return err
	}

	*o = ServiceWebhookEdit(varServiceWebhookEdit)

	return err
}

type NullableServiceWebhookEdit struct {
	value *ServiceWebhookEdit
	isSet bool
}

func (v NullableServiceWebhookEdit) Get() *ServiceWebhookEdit {
	return v.value
}

func (v *NullableServiceWebhookEdit) Set(val *ServiceWebhookEdit) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceWebhookEdit) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceWebhookEdit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceWebhookEdit(val *ServiceWebhookEdit) *NullableServiceWebhookEdit {
	return &NullableServiceWebhookEdit{value: val, isSet: true}
}

func (v NullableServiceWebhookEdit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceWebhookEdit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


