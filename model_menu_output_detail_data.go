/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MenuOutputDetailData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MenuOutputDetailData{}

// MenuOutputDetailData struct for MenuOutputDetailData
type MenuOutputDetailData struct {
	// ID of the menu
	Id *string `json:"id,omitempty"`
	// The media (prompt) parameters
	Media *MenuOutputDetailMedia `json:"media,omitempty"`
	// A friendly name for the menu
	Name *string `json:"name,omitempty"`
	// The amount of time (in milliseconds) to wait for the caller to begin entering digits
	Timeout *int32 `json:"timeout,omitempty"`
}

// NewMenuOutputDetailData instantiates a new MenuOutputDetailData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMenuOutputDetailData() *MenuOutputDetailData {
	this := MenuOutputDetailData{}
	return &this
}

// NewMenuOutputDetailDataWithDefaults instantiates a new MenuOutputDetailData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMenuOutputDetailDataWithDefaults() *MenuOutputDetailData {
	this := MenuOutputDetailData{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MenuOutputDetailData) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuOutputDetailData) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MenuOutputDetailData) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MenuOutputDetailData) SetId(v string) {
	o.Id = &v
}

// GetMedia returns the Media field value if set, zero value otherwise.
func (o *MenuOutputDetailData) GetMedia() MenuOutputDetailMedia {
	if o == nil || IsNil(o.Media) {
		var ret MenuOutputDetailMedia
		return ret
	}
	return *o.Media
}

// GetMediaOk returns a tuple with the Media field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuOutputDetailData) GetMediaOk() (*MenuOutputDetailMedia, bool) {
	if o == nil || IsNil(o.Media) {
		return nil, false
	}
	return o.Media, true
}

// HasMedia returns a boolean if a field has been set.
func (o *MenuOutputDetailData) HasMedia() bool {
	if o != nil && !IsNil(o.Media) {
		return true
	}

	return false
}

// SetMedia gets a reference to the given MenuOutputDetailMedia and assigns it to the Media field.
func (o *MenuOutputDetailData) SetMedia(v MenuOutputDetailMedia) {
	o.Media = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MenuOutputDetailData) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuOutputDetailData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MenuOutputDetailData) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MenuOutputDetailData) SetName(v string) {
	o.Name = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *MenuOutputDetailData) GetTimeout() int32 {
	if o == nil || IsNil(o.Timeout) {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MenuOutputDetailData) GetTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *MenuOutputDetailData) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *MenuOutputDetailData) SetTimeout(v int32) {
	o.Timeout = &v
}

func (o MenuOutputDetailData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MenuOutputDetailData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Media) {
		toSerialize["media"] = o.Media
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	return toSerialize, nil
}

type NullableMenuOutputDetailData struct {
	value *MenuOutputDetailData
	isSet bool
}

func (v NullableMenuOutputDetailData) Get() *MenuOutputDetailData {
	return v.value
}

func (v *NullableMenuOutputDetailData) Set(val *MenuOutputDetailData) {
	v.value = val
	v.isSet = true
}

func (v NullableMenuOutputDetailData) IsSet() bool {
	return v.isSet
}

func (v *NullableMenuOutputDetailData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMenuOutputDetailData(val *MenuOutputDetailData) *NullableMenuOutputDetailData {
	return &NullableMenuOutputDetailData{value: val, isSet: true}
}

func (v NullableMenuOutputDetailData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMenuOutputDetailData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


