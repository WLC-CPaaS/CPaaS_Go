/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModelsGenerateConfigFileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsGenerateConfigFileRequest{}

// ModelsGenerateConfigFileRequest struct for ModelsGenerateConfigFileRequest
type ModelsGenerateConfigFileRequest struct {
	Parameters ModelsConfigFileParameter `json:"parameters"`
	TemplateFileId string `json:"template_file_id"`
	TemplateId string `json:"template_id"`
}

type _ModelsGenerateConfigFileRequest ModelsGenerateConfigFileRequest

// NewModelsGenerateConfigFileRequest instantiates a new ModelsGenerateConfigFileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsGenerateConfigFileRequest(parameters ModelsConfigFileParameter, templateFileId string, templateId string) *ModelsGenerateConfigFileRequest {
	this := ModelsGenerateConfigFileRequest{}
	this.Parameters = parameters
	this.TemplateFileId = templateFileId
	this.TemplateId = templateId
	return &this
}

// NewModelsGenerateConfigFileRequestWithDefaults instantiates a new ModelsGenerateConfigFileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsGenerateConfigFileRequestWithDefaults() *ModelsGenerateConfigFileRequest {
	this := ModelsGenerateConfigFileRequest{}
	return &this
}

// GetParameters returns the Parameters field value
func (o *ModelsGenerateConfigFileRequest) GetParameters() ModelsConfigFileParameter {
	if o == nil {
		var ret ModelsConfigFileParameter
		return ret
	}

	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value
// and a boolean to check if the value has been set.
func (o *ModelsGenerateConfigFileRequest) GetParametersOk() (*ModelsConfigFileParameter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parameters, true
}

// SetParameters sets field value
func (o *ModelsGenerateConfigFileRequest) SetParameters(v ModelsConfigFileParameter) {
	o.Parameters = v
}

// GetTemplateFileId returns the TemplateFileId field value
func (o *ModelsGenerateConfigFileRequest) GetTemplateFileId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemplateFileId
}

// GetTemplateFileIdOk returns a tuple with the TemplateFileId field value
// and a boolean to check if the value has been set.
func (o *ModelsGenerateConfigFileRequest) GetTemplateFileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateFileId, true
}

// SetTemplateFileId sets field value
func (o *ModelsGenerateConfigFileRequest) SetTemplateFileId(v string) {
	o.TemplateFileId = v
}

// GetTemplateId returns the TemplateId field value
func (o *ModelsGenerateConfigFileRequest) GetTemplateId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value
// and a boolean to check if the value has been set.
func (o *ModelsGenerateConfigFileRequest) GetTemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateId, true
}

// SetTemplateId sets field value
func (o *ModelsGenerateConfigFileRequest) SetTemplateId(v string) {
	o.TemplateId = v
}

func (o ModelsGenerateConfigFileRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsGenerateConfigFileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["parameters"] = o.Parameters
	toSerialize["template_file_id"] = o.TemplateFileId
	toSerialize["template_id"] = o.TemplateId
	return toSerialize, nil
}

func (o *ModelsGenerateConfigFileRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"parameters",
		"template_file_id",
		"template_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModelsGenerateConfigFileRequest := _ModelsGenerateConfigFileRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModelsGenerateConfigFileRequest)

	if err != nil {
		return err
	}

	*o = ModelsGenerateConfigFileRequest(varModelsGenerateConfigFileRequest)

	return err
}

type NullableModelsGenerateConfigFileRequest struct {
	value *ModelsGenerateConfigFileRequest
	isSet bool
}

func (v NullableModelsGenerateConfigFileRequest) Get() *ModelsGenerateConfigFileRequest {
	return v.value
}

func (v *NullableModelsGenerateConfigFileRequest) Set(val *ModelsGenerateConfigFileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsGenerateConfigFileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsGenerateConfigFileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsGenerateConfigFileRequest(val *ModelsGenerateConfigFileRequest) *NullableModelsGenerateConfigFileRequest {
	return &NullableModelsGenerateConfigFileRequest{value: val, isSet: true}
}

func (v NullableModelsGenerateConfigFileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsGenerateConfigFileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


