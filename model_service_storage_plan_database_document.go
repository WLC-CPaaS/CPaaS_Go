/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceStoragePlanDatabaseDocument type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceStoragePlanDatabaseDocument{}

// ServiceStoragePlanDatabaseDocument struct for ServiceStoragePlanDatabaseDocument
type ServiceStoragePlanDatabaseDocument struct {
	Attachments *ServiceStoragePlanDatabaseAttachment `json:"attachments,omitempty"`
	Connection *string `json:"connection,omitempty"`
}

// NewServiceStoragePlanDatabaseDocument instantiates a new ServiceStoragePlanDatabaseDocument object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceStoragePlanDatabaseDocument() *ServiceStoragePlanDatabaseDocument {
	this := ServiceStoragePlanDatabaseDocument{}
	return &this
}

// NewServiceStoragePlanDatabaseDocumentWithDefaults instantiates a new ServiceStoragePlanDatabaseDocument object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceStoragePlanDatabaseDocumentWithDefaults() *ServiceStoragePlanDatabaseDocument {
	this := ServiceStoragePlanDatabaseDocument{}
	return &this
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *ServiceStoragePlanDatabaseDocument) GetAttachments() ServiceStoragePlanDatabaseAttachment {
	if o == nil || IsNil(o.Attachments) {
		var ret ServiceStoragePlanDatabaseAttachment
		return ret
	}
	return *o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStoragePlanDatabaseDocument) GetAttachmentsOk() (*ServiceStoragePlanDatabaseAttachment, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *ServiceStoragePlanDatabaseDocument) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given ServiceStoragePlanDatabaseAttachment and assigns it to the Attachments field.
func (o *ServiceStoragePlanDatabaseDocument) SetAttachments(v ServiceStoragePlanDatabaseAttachment) {
	o.Attachments = &v
}

// GetConnection returns the Connection field value if set, zero value otherwise.
func (o *ServiceStoragePlanDatabaseDocument) GetConnection() string {
	if o == nil || IsNil(o.Connection) {
		var ret string
		return ret
	}
	return *o.Connection
}

// GetConnectionOk returns a tuple with the Connection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceStoragePlanDatabaseDocument) GetConnectionOk() (*string, bool) {
	if o == nil || IsNil(o.Connection) {
		return nil, false
	}
	return o.Connection, true
}

// HasConnection returns a boolean if a field has been set.
func (o *ServiceStoragePlanDatabaseDocument) HasConnection() bool {
	if o != nil && !IsNil(o.Connection) {
		return true
	}

	return false
}

// SetConnection gets a reference to the given string and assigns it to the Connection field.
func (o *ServiceStoragePlanDatabaseDocument) SetConnection(v string) {
	o.Connection = &v
}

func (o ServiceStoragePlanDatabaseDocument) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceStoragePlanDatabaseDocument) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.Connection) {
		toSerialize["connection"] = o.Connection
	}
	return toSerialize, nil
}

type NullableServiceStoragePlanDatabaseDocument struct {
	value *ServiceStoragePlanDatabaseDocument
	isSet bool
}

func (v NullableServiceStoragePlanDatabaseDocument) Get() *ServiceStoragePlanDatabaseDocument {
	return v.value
}

func (v *NullableServiceStoragePlanDatabaseDocument) Set(val *ServiceStoragePlanDatabaseDocument) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceStoragePlanDatabaseDocument) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceStoragePlanDatabaseDocument) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceStoragePlanDatabaseDocument(val *ServiceStoragePlanDatabaseDocument) *NullableServiceStoragePlanDatabaseDocument {
	return &NullableServiceStoragePlanDatabaseDocument{value: val, isSet: true}
}

func (v NullableServiceStoragePlanDatabaseDocument) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceStoragePlanDatabaseDocument) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


