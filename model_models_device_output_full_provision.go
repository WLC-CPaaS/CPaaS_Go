/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelsDeviceOutputFullProvision type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsDeviceOutputFullProvision{}

// ModelsDeviceOutputFullProvision struct for ModelsDeviceOutputFullProvision
type ModelsDeviceOutputFullProvision struct {
	EndpointBrand *string `json:"endpoint_brand,omitempty"`
	EndpointFamily *string `json:"endpoint_family,omitempty"`
	EndpointModel *string `json:"endpoint_model,omitempty"`
	Id *string `json:"id,omitempty"`
	LineKeys []ModelsVOIPDeviceOutputLineKey `json:"line_keys,omitempty"`
}

// NewModelsDeviceOutputFullProvision instantiates a new ModelsDeviceOutputFullProvision object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsDeviceOutputFullProvision() *ModelsDeviceOutputFullProvision {
	this := ModelsDeviceOutputFullProvision{}
	return &this
}

// NewModelsDeviceOutputFullProvisionWithDefaults instantiates a new ModelsDeviceOutputFullProvision object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsDeviceOutputFullProvisionWithDefaults() *ModelsDeviceOutputFullProvision {
	this := ModelsDeviceOutputFullProvision{}
	return &this
}

// GetEndpointBrand returns the EndpointBrand field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFullProvision) GetEndpointBrand() string {
	if o == nil || IsNil(o.EndpointBrand) {
		var ret string
		return ret
	}
	return *o.EndpointBrand
}

// GetEndpointBrandOk returns a tuple with the EndpointBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFullProvision) GetEndpointBrandOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointBrand) {
		return nil, false
	}
	return o.EndpointBrand, true
}

// HasEndpointBrand returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFullProvision) HasEndpointBrand() bool {
	if o != nil && !IsNil(o.EndpointBrand) {
		return true
	}

	return false
}

// SetEndpointBrand gets a reference to the given string and assigns it to the EndpointBrand field.
func (o *ModelsDeviceOutputFullProvision) SetEndpointBrand(v string) {
	o.EndpointBrand = &v
}

// GetEndpointFamily returns the EndpointFamily field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFullProvision) GetEndpointFamily() string {
	if o == nil || IsNil(o.EndpointFamily) {
		var ret string
		return ret
	}
	return *o.EndpointFamily
}

// GetEndpointFamilyOk returns a tuple with the EndpointFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFullProvision) GetEndpointFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointFamily) {
		return nil, false
	}
	return o.EndpointFamily, true
}

// HasEndpointFamily returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFullProvision) HasEndpointFamily() bool {
	if o != nil && !IsNil(o.EndpointFamily) {
		return true
	}

	return false
}

// SetEndpointFamily gets a reference to the given string and assigns it to the EndpointFamily field.
func (o *ModelsDeviceOutputFullProvision) SetEndpointFamily(v string) {
	o.EndpointFamily = &v
}

// GetEndpointModel returns the EndpointModel field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFullProvision) GetEndpointModel() string {
	if o == nil || IsNil(o.EndpointModel) {
		var ret string
		return ret
	}
	return *o.EndpointModel
}

// GetEndpointModelOk returns a tuple with the EndpointModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFullProvision) GetEndpointModelOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointModel) {
		return nil, false
	}
	return o.EndpointModel, true
}

// HasEndpointModel returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFullProvision) HasEndpointModel() bool {
	if o != nil && !IsNil(o.EndpointModel) {
		return true
	}

	return false
}

// SetEndpointModel gets a reference to the given string and assigns it to the EndpointModel field.
func (o *ModelsDeviceOutputFullProvision) SetEndpointModel(v string) {
	o.EndpointModel = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFullProvision) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFullProvision) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFullProvision) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsDeviceOutputFullProvision) SetId(v string) {
	o.Id = &v
}

// GetLineKeys returns the LineKeys field value if set, zero value otherwise.
func (o *ModelsDeviceOutputFullProvision) GetLineKeys() []ModelsVOIPDeviceOutputLineKey {
	if o == nil || IsNil(o.LineKeys) {
		var ret []ModelsVOIPDeviceOutputLineKey
		return ret
	}
	return o.LineKeys
}

// GetLineKeysOk returns a tuple with the LineKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsDeviceOutputFullProvision) GetLineKeysOk() ([]ModelsVOIPDeviceOutputLineKey, bool) {
	if o == nil || IsNil(o.LineKeys) {
		return nil, false
	}
	return o.LineKeys, true
}

// HasLineKeys returns a boolean if a field has been set.
func (o *ModelsDeviceOutputFullProvision) HasLineKeys() bool {
	if o != nil && !IsNil(o.LineKeys) {
		return true
	}

	return false
}

// SetLineKeys gets a reference to the given []ModelsVOIPDeviceOutputLineKey and assigns it to the LineKeys field.
func (o *ModelsDeviceOutputFullProvision) SetLineKeys(v []ModelsVOIPDeviceOutputLineKey) {
	o.LineKeys = v
}

func (o ModelsDeviceOutputFullProvision) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsDeviceOutputFullProvision) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndpointBrand) {
		toSerialize["endpoint_brand"] = o.EndpointBrand
	}
	if !IsNil(o.EndpointFamily) {
		toSerialize["endpoint_family"] = o.EndpointFamily
	}
	if !IsNil(o.EndpointModel) {
		toSerialize["endpoint_model"] = o.EndpointModel
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LineKeys) {
		toSerialize["line_keys"] = o.LineKeys
	}
	return toSerialize, nil
}

type NullableModelsDeviceOutputFullProvision struct {
	value *ModelsDeviceOutputFullProvision
	isSet bool
}

func (v NullableModelsDeviceOutputFullProvision) Get() *ModelsDeviceOutputFullProvision {
	return v.value
}

func (v *NullableModelsDeviceOutputFullProvision) Set(val *ModelsDeviceOutputFullProvision) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsDeviceOutputFullProvision) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsDeviceOutputFullProvision) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsDeviceOutputFullProvision(val *ModelsDeviceOutputFullProvision) *NullableModelsDeviceOutputFullProvision {
	return &NullableModelsDeviceOutputFullProvision{value: val, isSet: true}
}

func (v NullableModelsDeviceOutputFullProvision) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsDeviceOutputFullProvision) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


