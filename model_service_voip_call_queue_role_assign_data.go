/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceVOIPCallQueueRoleAssignData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceVOIPCallQueueRoleAssignData{}

// ServiceVOIPCallQueueRoleAssignData struct for ServiceVOIPCallQueueRoleAssignData
type ServiceVOIPCallQueueRoleAssignData struct {
	Action string `json:"action"`
	Recipients []map[string][]string `json:"recipients"`
	SetMembership bool `json:"set_membership"`
}

type _ServiceVOIPCallQueueRoleAssignData ServiceVOIPCallQueueRoleAssignData

// NewServiceVOIPCallQueueRoleAssignData instantiates a new ServiceVOIPCallQueueRoleAssignData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceVOIPCallQueueRoleAssignData(action string, recipients []map[string][]string, setMembership bool) *ServiceVOIPCallQueueRoleAssignData {
	this := ServiceVOIPCallQueueRoleAssignData{}
	this.Action = action
	this.Recipients = recipients
	this.SetMembership = setMembership
	return &this
}

// NewServiceVOIPCallQueueRoleAssignDataWithDefaults instantiates a new ServiceVOIPCallQueueRoleAssignData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceVOIPCallQueueRoleAssignDataWithDefaults() *ServiceVOIPCallQueueRoleAssignData {
	this := ServiceVOIPCallQueueRoleAssignData{}
	return &this
}

// GetAction returns the Action field value
func (o *ServiceVOIPCallQueueRoleAssignData) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ServiceVOIPCallQueueRoleAssignData) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ServiceVOIPCallQueueRoleAssignData) SetAction(v string) {
	o.Action = v
}

// GetRecipients returns the Recipients field value
func (o *ServiceVOIPCallQueueRoleAssignData) GetRecipients() []map[string][]string {
	if o == nil {
		var ret []map[string][]string
		return ret
	}

	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value
// and a boolean to check if the value has been set.
func (o *ServiceVOIPCallQueueRoleAssignData) GetRecipientsOk() ([]map[string][]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recipients, true
}

// SetRecipients sets field value
func (o *ServiceVOIPCallQueueRoleAssignData) SetRecipients(v []map[string][]string) {
	o.Recipients = v
}

// GetSetMembership returns the SetMembership field value
func (o *ServiceVOIPCallQueueRoleAssignData) GetSetMembership() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SetMembership
}

// GetSetMembershipOk returns a tuple with the SetMembership field value
// and a boolean to check if the value has been set.
func (o *ServiceVOIPCallQueueRoleAssignData) GetSetMembershipOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SetMembership, true
}

// SetSetMembership sets field value
func (o *ServiceVOIPCallQueueRoleAssignData) SetSetMembership(v bool) {
	o.SetMembership = v
}

func (o ServiceVOIPCallQueueRoleAssignData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceVOIPCallQueueRoleAssignData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	toSerialize["recipients"] = o.Recipients
	toSerialize["set_membership"] = o.SetMembership
	return toSerialize, nil
}

func (o *ServiceVOIPCallQueueRoleAssignData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"recipients",
		"set_membership",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceVOIPCallQueueRoleAssignData := _ServiceVOIPCallQueueRoleAssignData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceVOIPCallQueueRoleAssignData)

	if err != nil {
		return err
	}

	*o = ServiceVOIPCallQueueRoleAssignData(varServiceVOIPCallQueueRoleAssignData)

	return err
}

type NullableServiceVOIPCallQueueRoleAssignData struct {
	value *ServiceVOIPCallQueueRoleAssignData
	isSet bool
}

func (v NullableServiceVOIPCallQueueRoleAssignData) Get() *ServiceVOIPCallQueueRoleAssignData {
	return v.value
}

func (v *NullableServiceVOIPCallQueueRoleAssignData) Set(val *ServiceVOIPCallQueueRoleAssignData) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceVOIPCallQueueRoleAssignData) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceVOIPCallQueueRoleAssignData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceVOIPCallQueueRoleAssignData(val *ServiceVOIPCallQueueRoleAssignData) *NullableServiceVOIPCallQueueRoleAssignData {
	return &NullableServiceVOIPCallQueueRoleAssignData{value: val, isSet: true}
}

func (v NullableServiceVOIPCallQueueRoleAssignData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceVOIPCallQueueRoleAssignData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


