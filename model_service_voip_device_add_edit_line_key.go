/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceVOIPDeviceAddEditLineKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceVOIPDeviceAddEditLineKey{}

// ServiceVOIPDeviceAddEditLineKey struct for ServiceVOIPDeviceAddEditLineKey
type ServiceVOIPDeviceAddEditLineKey struct {
	Count *int32 `json:"count,omitempty"`
	Label *string `json:"label,omitempty"`
	Type *string `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewServiceVOIPDeviceAddEditLineKey instantiates a new ServiceVOIPDeviceAddEditLineKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceVOIPDeviceAddEditLineKey() *ServiceVOIPDeviceAddEditLineKey {
	this := ServiceVOIPDeviceAddEditLineKey{}
	return &this
}

// NewServiceVOIPDeviceAddEditLineKeyWithDefaults instantiates a new ServiceVOIPDeviceAddEditLineKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceVOIPDeviceAddEditLineKeyWithDefaults() *ServiceVOIPDeviceAddEditLineKey {
	this := ServiceVOIPDeviceAddEditLineKey{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ServiceVOIPDeviceAddEditLineKey) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPDeviceAddEditLineKey) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ServiceVOIPDeviceAddEditLineKey) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ServiceVOIPDeviceAddEditLineKey) SetCount(v int32) {
	o.Count = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ServiceVOIPDeviceAddEditLineKey) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPDeviceAddEditLineKey) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ServiceVOIPDeviceAddEditLineKey) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *ServiceVOIPDeviceAddEditLineKey) SetLabel(v string) {
	o.Label = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ServiceVOIPDeviceAddEditLineKey) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPDeviceAddEditLineKey) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ServiceVOIPDeviceAddEditLineKey) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ServiceVOIPDeviceAddEditLineKey) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ServiceVOIPDeviceAddEditLineKey) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPDeviceAddEditLineKey) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ServiceVOIPDeviceAddEditLineKey) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ServiceVOIPDeviceAddEditLineKey) SetValue(v string) {
	o.Value = &v
}

func (o ServiceVOIPDeviceAddEditLineKey) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceVOIPDeviceAddEditLineKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableServiceVOIPDeviceAddEditLineKey struct {
	value *ServiceVOIPDeviceAddEditLineKey
	isSet bool
}

func (v NullableServiceVOIPDeviceAddEditLineKey) Get() *ServiceVOIPDeviceAddEditLineKey {
	return v.value
}

func (v *NullableServiceVOIPDeviceAddEditLineKey) Set(val *ServiceVOIPDeviceAddEditLineKey) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceVOIPDeviceAddEditLineKey) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceVOIPDeviceAddEditLineKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceVOIPDeviceAddEditLineKey(val *ServiceVOIPDeviceAddEditLineKey) *NullableServiceVOIPDeviceAddEditLineKey {
	return &NullableServiceVOIPDeviceAddEditLineKey{value: val, isSet: true}
}

func (v NullableServiceVOIPDeviceAddEditLineKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceVOIPDeviceAddEditLineKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


