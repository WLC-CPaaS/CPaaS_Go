/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package openapi;

import java.util.Objects;
import java.util.Arrays;
import bytes;
import fmt;

/**
 * ServiceVOIPDeviceAddEdit2
 */
@.annotation.Generated(value = "org.openapitools.codegen.languages.GoClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceVOIPDeviceAddEdit2 {
  @.annotation.Nullable
  private ServiceCallForward CallForward;

  @.annotation.Nullable
  private ServiceCallRecordingSettings CallRecording;

  @.annotation.Nullable
  private ServiceVOIPDeviceAddEdit3c CallerId;

  /**
   * Gets or Sets DeviceType
   */
  public enum DEVICE_TYPE {
    SOFTPHONE(string.valueOf("softphone")),
    
    SIP_URI(string.valueOf("sip_uri"));

    private string value;

    DEVICE_TYPE(string value) {
      this.value = value;
    }

    public string getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DEVICE_TYPE fromValue(string value) {
      for (DEVICE_TYPE b : DEVICE_TYPE.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  @.annotation.Nullable
  private DEVICE_TYPE DeviceType;

  @.annotation.Nullable
  private ServiceVOIPSharedDoNotDisturb DoNotDisturb;

  @.annotation.Nullable
  private bool Enabled;

  @.annotation.Nullable
  private string MacAddress;

  @.annotation.Nullable
  private ServiceMusicOnHold MusicOnHold;

  @.annotation.Nonnull
  private string Name;

  @.annotation.Nullable
  private string OwnerId;

  @.annotation.Nonnull
  private ServiceVOIPDeviceAddEdit3a Sip;

  public ServiceVOIPDeviceAddEdit2() {
  }

  public ServiceVOIPDeviceAddEdit2 CallForward(@.annotation.Nullable ServiceCallForward CallForward) {
    
    this.CallForward = CallForward;
    return this;
  }

  /**
   * Get CallForward
   * @return CallForward
   */
  @.annotation.Nullable

  public ServiceCallForward GetCallForward() {
    return CallForward;
  }


  public void setCallForward(@.annotation.Nullable ServiceCallForward CallForward) {
    this.CallForward = CallForward;
  }

  public ServiceVOIPDeviceAddEdit2 CallRecording(@.annotation.Nullable ServiceCallRecordingSettings CallRecording) {
    
    this.CallRecording = CallRecording;
    return this;
  }

  /**
   * Get CallRecording
   * @return CallRecording
   */
  @.annotation.Nullable

  public ServiceCallRecordingSettings GetCallRecording() {
    return CallRecording;
  }


  public void setCallRecording(@.annotation.Nullable ServiceCallRecordingSettings CallRecording) {
    this.CallRecording = CallRecording;
  }

  public ServiceVOIPDeviceAddEdit2 CallerId(@.annotation.Nullable ServiceVOIPDeviceAddEdit3c CallerId) {
    
    this.CallerId = CallerId;
    return this;
  }

  /**
   * Get CallerId
   * @return CallerId
   */
  @.annotation.Nullable

  public ServiceVOIPDeviceAddEdit3c GetCallerId() {
    return CallerId;
  }


  public void setCallerId(@.annotation.Nullable ServiceVOIPDeviceAddEdit3c CallerId) {
    this.CallerId = CallerId;
  }

  public ServiceVOIPDeviceAddEdit2 DeviceType(@.annotation.Nullable DEVICE_TYPE DeviceType) {
    
    this.DeviceType = DeviceType;
    return this;
  }

  /**
   * Get DeviceType
   * @return DeviceType
   */
  @.annotation.Nullable

  public DEVICE_TYPE GetDeviceType() {
    return DeviceType;
  }


  public void setDeviceType(@.annotation.Nullable DEVICE_TYPE DeviceType) {
    this.DeviceType = DeviceType;
  }

  public ServiceVOIPDeviceAddEdit2 DoNotDisturb(@.annotation.Nullable ServiceVOIPSharedDoNotDisturb DoNotDisturb) {
    
    this.DoNotDisturb = DoNotDisturb;
    return this;
  }

  /**
   * Get DoNotDisturb
   * @return DoNotDisturb
   */
  @.annotation.Nullable

  public ServiceVOIPSharedDoNotDisturb GetDoNotDisturb() {
    return DoNotDisturb;
  }


  public void setDoNotDisturb(@.annotation.Nullable ServiceVOIPSharedDoNotDisturb DoNotDisturb) {
    this.DoNotDisturb = DoNotDisturb;
  }

  public ServiceVOIPDeviceAddEdit2 Enabled(@.annotation.Nullable bool Enabled) {
    
    this.Enabled = Enabled;
    return this;
  }

  /**
   * cannot use required, else it has to be true and false is not allowed
   * @return Enabled
   */
  @.annotation.Nullable

  public bool getEnabled() {
    return Enabled;
  }


  public void setEnabled(@.annotation.Nullable bool Enabled) {
    this.Enabled = Enabled;
  }

  public ServiceVOIPDeviceAddEdit2 MacAddress(@.annotation.Nullable string MacAddress) {
    
    this.MacAddress = MacAddress;
    return this;
  }

  /**
   * dont use mac, it enforces :, which voip does not like
   * @return MacAddress
   */
  @.annotation.Nullable

  public string GetMacAddress() {
    return MacAddress;
  }


  public void setMacAddress(@.annotation.Nullable string MacAddress) {
    this.MacAddress = MacAddress;
  }

  public ServiceVOIPDeviceAddEdit2 MusicOnHold(@.annotation.Nullable ServiceMusicOnHold MusicOnHold) {
    
    this.MusicOnHold = MusicOnHold;
    return this;
  }

  /**
   * Get MusicOnHold
   * @return MusicOnHold
   */
  @.annotation.Nullable

  public ServiceMusicOnHold GetMusicOnHold() {
    return MusicOnHold;
  }


  public void setMusicOnHold(@.annotation.Nullable ServiceMusicOnHold MusicOnHold) {
    this.MusicOnHold = MusicOnHold;
  }

  public ServiceVOIPDeviceAddEdit2 Name(@.annotation.Nonnull string Name) {
    
    this.Name = Name;
    return this;
  }

  /**
   * Get Name
   * @return Name
   */
  @.annotation.Nonnull

  public string GetName() {
    return Name;
  }


  public void setName(@.annotation.Nonnull string Name) {
    this.Name = Name;
  }

  public ServiceVOIPDeviceAddEdit2 OwnerId(@.annotation.Nullable string OwnerId) {
    
    this.OwnerId = OwnerId;
    return this;
  }

  /**
   * json omitempty is needed else voip fails on \&quot;\&quot; for owner_id
   * @return OwnerId
   */
  @.annotation.Nullable

  public string GetOwnerId() {
    return OwnerId;
  }


  public void setOwnerId(@.annotation.Nullable string OwnerId) {
    this.OwnerId = OwnerId;
  }

  public ServiceVOIPDeviceAddEdit2 Sip(@.annotation.Nonnull ServiceVOIPDeviceAddEdit3a Sip) {
    
    this.Sip = Sip;
    return this;
  }

  /**
   * Get Sip
   * @return Sip
   */
  @.annotation.Nonnull

  public ServiceVOIPDeviceAddEdit3a GetSip() {
    return Sip;
  }


  public void setSip(@.annotation.Nonnull ServiceVOIPDeviceAddEdit3a Sip) {
    this.Sip = Sip;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceVOIPDeviceAddEdit2 ServiceVOIPDeviceAddEdit2 = (ServiceVOIPDeviceAddEdit2) o;
    return Objects.equals(this.CallForward, ServiceVOIPDeviceAddEdit2.CallForward) &&
        Objects.equals(this.CallRecording, ServiceVOIPDeviceAddEdit2.CallRecording) &&
        Objects.equals(this.CallerId, ServiceVOIPDeviceAddEdit2.CallerId) &&
        Objects.equals(this.DeviceType, ServiceVOIPDeviceAddEdit2.DeviceType) &&
        Objects.equals(this.DoNotDisturb, ServiceVOIPDeviceAddEdit2.DoNotDisturb) &&
        Objects.equals(this.Enabled, ServiceVOIPDeviceAddEdit2.Enabled) &&
        Objects.equals(this.MacAddress, ServiceVOIPDeviceAddEdit2.MacAddress) &&
        Objects.equals(this.MusicOnHold, ServiceVOIPDeviceAddEdit2.MusicOnHold) &&
        Objects.equals(this.Name, ServiceVOIPDeviceAddEdit2.Name) &&
        Objects.equals(this.OwnerId, ServiceVOIPDeviceAddEdit2.OwnerId) &&
        Objects.equals(this.Sip, ServiceVOIPDeviceAddEdit2.Sip);
  }

  @Override
  public int hashCode() {
    return Objects.hash(CallForward, CallRecording, CallerId, DeviceType, DoNotDisturb, Enabled, MacAddress, MusicOnHold, Name, OwnerId, Sip);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceVOIPDeviceAddEdit2 {\n");
    sb.append("    CallForward: ").append(toIndentedString(CallForward)).append("\n");
    sb.append("    CallRecording: ").append(toIndentedString(CallRecording)).append("\n");
    sb.append("    CallerId: ").append(toIndentedString(CallerId)).append("\n");
    sb.append("    DeviceType: ").append(toIndentedString(DeviceType)).append("\n");
    sb.append("    DoNotDisturb: ").append(toIndentedString(DoNotDisturb)).append("\n");
    sb.append("    Enabled: ").append(toIndentedString(Enabled)).append("\n");
    sb.append("    MacAddress: ").append(toIndentedString(MacAddress)).append("\n");
    sb.append("    MusicOnHold: ").append(toIndentedString(MusicOnHold)).append("\n");
    sb.append("    Name: ").append(toIndentedString(Name)).append("\n");
    sb.append("    OwnerId: ").append(toIndentedString(OwnerId)).append("\n");
    sb.append("    Sip: ").append(toIndentedString(Sip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

