/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceVOIPStorageAddEditData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceVOIPStorageAddEditData{}

// ServiceVOIPStorageAddEditData struct for ServiceVOIPStorageAddEditData
type ServiceVOIPStorageAddEditData struct {
	Attachments map[string]interface{} `json:"attachments,omitempty"`
	Connections map[string]interface{} `json:"connections,omitempty"`
	Id *string `json:"id,omitempty"`
	Plan *ServiceStoragePlan `json:"plan,omitempty"`
}

// NewServiceVOIPStorageAddEditData instantiates a new ServiceVOIPStorageAddEditData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceVOIPStorageAddEditData() *ServiceVOIPStorageAddEditData {
	this := ServiceVOIPStorageAddEditData{}
	return &this
}

// NewServiceVOIPStorageAddEditDataWithDefaults instantiates a new ServiceVOIPStorageAddEditData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceVOIPStorageAddEditDataWithDefaults() *ServiceVOIPStorageAddEditData {
	this := ServiceVOIPStorageAddEditData{}
	return &this
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *ServiceVOIPStorageAddEditData) GetAttachments() map[string]interface{} {
	if o == nil || IsNil(o.Attachments) {
		var ret map[string]interface{}
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPStorageAddEditData) GetAttachmentsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Attachments) {
		return map[string]interface{}{}, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *ServiceVOIPStorageAddEditData) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given map[string]interface{} and assigns it to the Attachments field.
func (o *ServiceVOIPStorageAddEditData) SetAttachments(v map[string]interface{}) {
	o.Attachments = v
}

// GetConnections returns the Connections field value if set, zero value otherwise.
func (o *ServiceVOIPStorageAddEditData) GetConnections() map[string]interface{} {
	if o == nil || IsNil(o.Connections) {
		var ret map[string]interface{}
		return ret
	}
	return o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPStorageAddEditData) GetConnectionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Connections) {
		return map[string]interface{}{}, false
	}
	return o.Connections, true
}

// HasConnections returns a boolean if a field has been set.
func (o *ServiceVOIPStorageAddEditData) HasConnections() bool {
	if o != nil && !IsNil(o.Connections) {
		return true
	}

	return false
}

// SetConnections gets a reference to the given map[string]interface{} and assigns it to the Connections field.
func (o *ServiceVOIPStorageAddEditData) SetConnections(v map[string]interface{}) {
	o.Connections = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceVOIPStorageAddEditData) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPStorageAddEditData) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceVOIPStorageAddEditData) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServiceVOIPStorageAddEditData) SetId(v string) {
	o.Id = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *ServiceVOIPStorageAddEditData) GetPlan() ServiceStoragePlan {
	if o == nil || IsNil(o.Plan) {
		var ret ServiceStoragePlan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceVOIPStorageAddEditData) GetPlanOk() (*ServiceStoragePlan, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *ServiceVOIPStorageAddEditData) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given ServiceStoragePlan and assigns it to the Plan field.
func (o *ServiceVOIPStorageAddEditData) SetPlan(v ServiceStoragePlan) {
	o.Plan = &v
}

func (o ServiceVOIPStorageAddEditData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceVOIPStorageAddEditData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.Connections) {
		toSerialize["connections"] = o.Connections
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	return toSerialize, nil
}

type NullableServiceVOIPStorageAddEditData struct {
	value *ServiceVOIPStorageAddEditData
	isSet bool
}

func (v NullableServiceVOIPStorageAddEditData) Get() *ServiceVOIPStorageAddEditData {
	return v.value
}

func (v *NullableServiceVOIPStorageAddEditData) Set(val *ServiceVOIPStorageAddEditData) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceVOIPStorageAddEditData) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceVOIPStorageAddEditData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceVOIPStorageAddEditData(val *ServiceVOIPStorageAddEditData) *NullableServiceVOIPStorageAddEditData {
	return &NullableServiceVOIPStorageAddEditData{value: val, isSet: true}
}

func (v NullableServiceVOIPStorageAddEditData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceVOIPStorageAddEditData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


