/*
White Label Communications CPaas API Documentation

A CPaaS platform API

API version: 1.1
Contact: support@whitelabelcomm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServiceMenuOutputFullMedia type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceMenuOutputFullMedia{}

// ServiceMenuOutputFullMedia struct for ServiceMenuOutputFullMedia
type ServiceMenuOutputFullMedia struct {
	Greeting *string `json:"greeting,omitempty"`
	InvalidMedia map[string]interface{} `json:"invalid_media,omitempty"`
	TransferMedia map[string]interface{} `json:"transfer_media,omitempty"`
}

// NewServiceMenuOutputFullMedia instantiates a new ServiceMenuOutputFullMedia object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceMenuOutputFullMedia() *ServiceMenuOutputFullMedia {
	this := ServiceMenuOutputFullMedia{}
	return &this
}

// NewServiceMenuOutputFullMediaWithDefaults instantiates a new ServiceMenuOutputFullMedia object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceMenuOutputFullMediaWithDefaults() *ServiceMenuOutputFullMedia {
	this := ServiceMenuOutputFullMedia{}
	return &this
}

// GetGreeting returns the Greeting field value if set, zero value otherwise.
func (o *ServiceMenuOutputFullMedia) GetGreeting() string {
	if o == nil || IsNil(o.Greeting) {
		var ret string
		return ret
	}
	return *o.Greeting
}

// GetGreetingOk returns a tuple with the Greeting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceMenuOutputFullMedia) GetGreetingOk() (*string, bool) {
	if o == nil || IsNil(o.Greeting) {
		return nil, false
	}
	return o.Greeting, true
}

// HasGreeting returns a boolean if a field has been set.
func (o *ServiceMenuOutputFullMedia) HasGreeting() bool {
	if o != nil && !IsNil(o.Greeting) {
		return true
	}

	return false
}

// SetGreeting gets a reference to the given string and assigns it to the Greeting field.
func (o *ServiceMenuOutputFullMedia) SetGreeting(v string) {
	o.Greeting = &v
}

// GetInvalidMedia returns the InvalidMedia field value if set, zero value otherwise.
func (o *ServiceMenuOutputFullMedia) GetInvalidMedia() map[string]interface{} {
	if o == nil || IsNil(o.InvalidMedia) {
		var ret map[string]interface{}
		return ret
	}
	return o.InvalidMedia
}

// GetInvalidMediaOk returns a tuple with the InvalidMedia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceMenuOutputFullMedia) GetInvalidMediaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.InvalidMedia) {
		return map[string]interface{}{}, false
	}
	return o.InvalidMedia, true
}

// HasInvalidMedia returns a boolean if a field has been set.
func (o *ServiceMenuOutputFullMedia) HasInvalidMedia() bool {
	if o != nil && !IsNil(o.InvalidMedia) {
		return true
	}

	return false
}

// SetInvalidMedia gets a reference to the given map[string]interface{} and assigns it to the InvalidMedia field.
func (o *ServiceMenuOutputFullMedia) SetInvalidMedia(v map[string]interface{}) {
	o.InvalidMedia = v
}

// GetTransferMedia returns the TransferMedia field value if set, zero value otherwise.
func (o *ServiceMenuOutputFullMedia) GetTransferMedia() map[string]interface{} {
	if o == nil || IsNil(o.TransferMedia) {
		var ret map[string]interface{}
		return ret
	}
	return o.TransferMedia
}

// GetTransferMediaOk returns a tuple with the TransferMedia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceMenuOutputFullMedia) GetTransferMediaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.TransferMedia) {
		return map[string]interface{}{}, false
	}
	return o.TransferMedia, true
}

// HasTransferMedia returns a boolean if a field has been set.
func (o *ServiceMenuOutputFullMedia) HasTransferMedia() bool {
	if o != nil && !IsNil(o.TransferMedia) {
		return true
	}

	return false
}

// SetTransferMedia gets a reference to the given map[string]interface{} and assigns it to the TransferMedia field.
func (o *ServiceMenuOutputFullMedia) SetTransferMedia(v map[string]interface{}) {
	o.TransferMedia = v
}

func (o ServiceMenuOutputFullMedia) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceMenuOutputFullMedia) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Greeting) {
		toSerialize["greeting"] = o.Greeting
	}
	if !IsNil(o.InvalidMedia) {
		toSerialize["invalid_media"] = o.InvalidMedia
	}
	if !IsNil(o.TransferMedia) {
		toSerialize["transfer_media"] = o.TransferMedia
	}
	return toSerialize, nil
}

type NullableServiceMenuOutputFullMedia struct {
	value *ServiceMenuOutputFullMedia
	isSet bool
}

func (v NullableServiceMenuOutputFullMedia) Get() *ServiceMenuOutputFullMedia {
	return v.value
}

func (v *NullableServiceMenuOutputFullMedia) Set(val *ServiceMenuOutputFullMedia) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceMenuOutputFullMedia) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceMenuOutputFullMedia) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceMenuOutputFullMedia(val *ServiceMenuOutputFullMedia) *NullableServiceMenuOutputFullMedia {
	return &NullableServiceMenuOutputFullMedia{value: val, isSet: true}
}

func (v NullableServiceMenuOutputFullMedia) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceMenuOutputFullMedia) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


